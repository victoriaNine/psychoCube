{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"transfo",
				"transform-origin: "
			],
			[
				"o",
				"opacityDelta"
			],
			[
				"re",
				"requestAnimationFrame"
			],
			[
				"min",
				"minSpeed"
			],
			[
				"new",
				"newRotateX"
			],
			[
				"fin",
				"finishDate"
			],
			[
				"acti",
				"actionArray"
			],
			[
				"pla",
				"playerName"
			],
			[
				"total",
				"totalActions"
			],
			[
				"ci",
				"currentTime"
			],
			[
				"margin",
				"margin-bottom: "
			],
			[
				"font",
				"font-family: "
			],
			[
				"bord",
				"border-color: "
			],
			[
				"col",
				"colRotation"
			],
			[
				"row",
				"rowRotation"
			],
			[
				"n",
				"newTransform"
			],
			[
				"curre",
				"currentFile"
			],
			[
				"per",
				"percentCool"
			],
			[
				"fontS",
				"fontSize24px"
			],
			[
				"fontSize",
				"fontSize16px"
			],
			[
				"ease",
				"easeOut"
			],
			[
				"intro",
				"introComplete"
			],
			[
				"tnS",
				"tnSongPosition"
			],
			[
				"audio",
				"audioEngine"
			],
			[
				"retry",
				"retryGame"
			],
			[
				"tri",
				"triggerPause"
			],
			[
				"percent",
				"percentGreat"
			],
			[
				"bo",
				"border-radius"
			],
			[
				"border",
				"border-box"
			],
			[
				"bor",
				"borderRadius"
			],
			[
				"ba",
				"baseNoteLength"
			],
			[
				"song",
				"songPosition"
			],
			[
				"key",
				"keyName"
			],
			[
				"gam",
				"gameOver"
			],
			[
				"combo",
				"comboArray"
			],
			[
				"get",
				"getCurrentPosition"
			],
			[
				"_st",
				"_staffScroll"
			],
			[
				"pau",
				"pausedAt"
			],
			[
				"star",
				"startedAt"
			],
			[
				"_sta",
				"_staffLength"
			],
			[
				"not",
				"noteScale"
			],
			[
				"ti",
				"timeSignature"
			],
			[
				"va",
				"value"
			],
			[
				"is",
				"isTransitioning"
			],
			[
				"loaded",
				"loadedFiles"
			],
			[
				"gain",
				"gainTransition"
			],
			[
				"auto",
				"autoMuteSound"
			],
			[
				"toggle",
				"toggleMute"
			],
			[
				"max",
				"max-width"
			],
			[
				"sw",
				"soundSwitch"
			],
			[
				"close",
				"closeWindow"
			],
			[
				"files",
				"filesNb"
			],
			[
				"file",
				"filesLoaded"
			],
			[
				"fi",
				"filesLoaded"
			],
			[
				"pa",
				"padding"
			],
			[
				"im",
				"important"
			],
			[
				"padding",
				"padding-left"
			],
			[
				"te",
				"text-align"
			],
			[
				"phone",
				"phonecheck"
			],
			[
				"chan",
				"changeCanvas"
			],
			[
				"cancel",
				"cancelMenu"
			],
			[
				"fu",
				"function"
			],
			[
				"mouse",
				"mouseenter"
			],
			[
				"open",
				"openWindow"
			],
			[
				"play",
				"playCrossfade"
			],
			[
				"BGM",
				"BGMloaded"
			],
			[
				"cur",
				"currentGain2"
			],
			[
				"current",
				"currentGain1"
			],
			[
				"source",
				"sourceArray"
			],
			[
				"buffe",
				"bufferList"
			],
			[
				"pr",
				"primalTimbre"
			],
			[
				"start",
				"startDelay"
			],
			[
				"planet",
				"planet_rotate"
			],
			[
				"mete",
				"meteorFalling"
			],
			[
				"meteor",
				"meteorFalling"
			],
			[
				"cra",
				"craters_y"
			],
			[
				"plan",
				"planet_y"
			],
			[
				"l",
				"loadedImg"
			],
			[
				"in",
				"inline-block"
			],
			[
				"line",
				"lineLength"
			],
			[
				"marg",
				"margin-bottom"
			],
			[
				"call",
				"callback"
			],
			[
				"autoCl",
				"autoCloseDelay"
			],
			[
				"text-",
				"text-align"
			],
			[
				"on",
				"onComplete"
			],
			[
				"T",
				"TimelineMax"
			],
			[
				"text",
				"text-transform"
			],
			[
				"swit",
				"switchDelay"
			],
			[
				"min-",
				"min-height"
			],
			[
				"scre",
				"screen_Play_In"
			],
			[
				"tran",
				"transition"
			],
			[
				"mobile",
				"mobilecheck"
			],
			[
				"scree",
				"screen_Menu"
			],
			[
				"init",
				"initWidth"
			],
			[
				"mar",
				"margin"
			],
			[
				"men",
				"menuLines"
			],
			[
				"wid",
				"width"
			],
			[
				"w",
				"width"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app/index.html",
			"settings":
			{
				"buffer_size": 8082,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/css/main.scss",
			"settings":
			{
				"buffer_size": 15244,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/js/main.js",
			"settings":
			{
				"buffer_size": 17246,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/js/controls.js",
			"settings":
			{
				"buffer_size": 15981,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "// cube-demo.js\n(function() {\n    /*\n\n\n    CUBER\n    -----\n\n\n    Cuber is a programmable Rubiks cube of sorts.\n\n\n    Made with love by:\n    @author Mark Lundin - http://mark-lundin.com / @mark_lundin\n    @author Stewart Smith - stewd.io\n    @author Google Creative Lab\n\n\n\n    NOTATION\n\n    UPPERCASE = Clockwise to next 90 degree peg\n    lowercase = Anticlockwise to next 90 degree peg\n\n\n\n    FACE & SLICE ROTATION COMMANDS\n\n    F	Front\n    S 	Standing (rotate according to Front Face's orientation)\n    B 	Back\n\n    L 	Left\n    M 	Middle (rotate according to Left Face's orientation)\n    R 	Right\n\n    U 	Up\n    E 	Equator (rotate according to Up Face's orientation)\n    D 	Down\n\n\n\n    ENTIRE CUBE ROTATION COMMANDS\n\n    X   Rotate entire cube according to Right Face's orientation\n    Y   Rotate entire cube according to Up Face's orientation\n    Z   Rotate entire cube according to Front Face's orientation\n\n\n\n    NOTATION REFERENCES\n\n    http://en.wikipedia.org/wiki/Rubik's_Cube#Move_notation\n    http://en.wikibooks.org/wiki/Template:Rubik's_cube_notation\n\n\n\n    The MIT License (MIT)\n\n    Copyright (c) 2014 Cuber Authors\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n\n    */\n    'use strict';\n    var ERNO = {};\n    (function() {\n        function a(a, c) {\n            c = c || {\n                bubbles: !1,\n                cancelable: !1,\n                detail: void 0\n            };\n            var d = document.createEvent(\"CustomEvent\");\n            d.initCustomEvent(a, c.bubbles, c.cancelable, c.detail);\n            return d\n        }\n        a.prototype = window.Event.prototype;\n        window.CustomEvent = a;\n        Function.prototype.bind || (Function.prototype.bind = function(a) {\n            if (\"function\" !== typeof this) throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n            var c = Array.prototype.slice.call(arguments, 1),\n                d = this,\n                e = function() {},\n                f = function() {\n                    return d.apply(this instanceof e && a ? this : a, c.concat(Array.prototype.slice.call(arguments)))\n                };\n            e.prototype = this.prototype;\n            f.prototype = new e;\n            return f\n        })\n    })();\n    ERNO.extend = function(a, b) {\n        if (Object.keys)\n            for (var c = Object.keys(b), d = 0, e = c.length; d < e; d++) {\n                var f = c[d];\n                Object.defineProperty(a, f, Object.getOwnPropertyDescriptor(b, f))\n            } else\n                for (f in c = {}.hasOwnProperty, b) c.call(b, f) && (a[f] = b[f]);\n        return a\n    };\n    /*\n\n     The MIT License\n\n     Copyright (c) 2010-2012 Tween.js authors.\n\n     Easing equations Copyright (c) 2001 Robert Penner\n     http://robertpenner.com/easing/\n\n     Permission is hereby granted, free of charge, to any person obtaining a copy\n     of this software and associated documentation files (the \"Software\"), to deal\n     in the Software without restriction, including without limitation the rights\n     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     copies of the Software, and to permit persons to whom the Software is\n     furnished to do so, subject to the following conditions:\n\n     The above copyright notice and this permission notice shall be included in\n     all copies or substantial portions of the Software.\n\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     THE SOFTWARE.\n    */\n    void 0 === Date.now && (Date.now = function() {\n        return (new Date).valueOf()\n    });\n    var TWEEN = TWEEN || function() {\n        var a = [];\n        return {\n            REVISION: \"12\",\n            getAll: function() {\n                return a\n            },\n            removeAll: function() {\n                a = []\n            },\n            add: function(b) {\n                a.push(b)\n            },\n            remove: function(b) {\n                b = a.indexOf(b); - 1 !== b && a.splice(b, 1)\n            },\n            update: function(b) {\n                if (0 === a.length) return !1;\n                var c = 0;\n                for (b = void 0 !== b ? b : \"undefined\" !== typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? window.performance.now() : Date.now(); c < a.length;) a[c].update(b) ? c++ : a.splice(c, 1);\n                return !0\n            }\n        }\n    }();\n    TWEEN.Tween = function(a) {\n        var b = {},\n            c = {},\n            d = {},\n            e = 1E3,\n            f = 0,\n            g = !1,\n            h = !1,\n            k = 0,\n            l = null,\n            n = TWEEN.Easing.Linear.None,\n            m = TWEEN.Interpolation.Linear,\n            q = [],\n            r = null,\n            t = !1,\n            u = null,\n            p = null,\n            s;\n        for (s in a) b[s] = parseFloat(a[s], 10);\n        this.to = function(a, b) {\n            void 0 !== b && (e = b);\n            c = a;\n            return this\n        };\n        this.start = function(e) {\n            TWEEN.add(this);\n            h = !0;\n            t = !1;\n            l = void 0 !== e ? e : \"undefined\" !== typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? window.performance.now() : Date.now();\n            l += k;\n            for (var f in c) {\n                if (c[f] instanceof Array) {\n                    if (0 === c[f].length) continue;\n                    c[f] = [a[f]].concat(c[f])\n                }\n                b[f] = a[f];\n                !1 === b[f] instanceof Array && (b[f] *= 1);\n                d[f] = b[f] || 0\n            }\n            return this\n        };\n        this.stop = function() {\n            if (!h) return this;\n            TWEEN.remove(this);\n            h = !1;\n            this.stopChainedTweens();\n            return this\n        };\n        this.stopChainedTweens = function() {\n            for (var a = 0, b = q.length; a < b; a++) q[a].stop()\n        };\n        this.delay = function(a) {\n            k = a;\n            return this\n        };\n        this.repeat = function(a) {\n            f = a;\n            return this\n        };\n        this.yoyo = function(a) {\n            g = a;\n            return this\n        };\n        this.easing = function(a) {\n            n = a;\n            return this\n        };\n        this.interpolation = function(a) {\n            m = a;\n            return this\n        };\n        this.chain = function() {\n            q =\n                arguments;\n            return this\n        };\n        this.onStart = function(a) {\n            r = a;\n            return this\n        };\n        this.onUpdate = function(a) {\n            u = a;\n            return this\n        };\n        this.onComplete = function(a) {\n            p = a;\n            return this\n        };\n        this.update = function(h) {\n            var s;\n            if (h < l) return !0;\n            !1 === t && (null !== r && r.call(a), t = !0);\n            var A = (h - l) / e,\n                A = 1 < A ? 1 : A,\n                x = n(A);\n            for (s in c) {\n                var w = b[s] || 0,\n                    C = c[s];\n                C instanceof Array ? a[s] = m(C, x) : (\"string\" === typeof C && (C = w + parseFloat(C, 10)), \"number\" === typeof C && (a[s] = w + (C - w) * x))\n            }\n            null !== u && u.call(a, x);\n            if (1 == A)\n                if (0 < f) {\n                    isFinite(f) && f--;\n                    for (s in d) \"string\" === typeof c[s] &&\n                        (d[s] += parseFloat(c[s], 10)), g && (A = d[s], d[s] = c[s], c[s] = A), b[s] = d[s];\n                    l = h + k\n                } else {\n                    null !== p && p.call(a);\n                    s = 0;\n                    for (A = q.length; s < A; s++) q[s].start(h);\n                    return !1\n                }\n            return !0\n        }\n    };\n    TWEEN.Easing = {\n        Linear: {\n            None: function(a) {\n                return a\n            }\n        },\n        Quadratic: {\n            In: function(a) {\n                return a * a\n            },\n            Out: function(a) {\n                return a * (2 - a)\n            },\n            InOut: function(a) {\n                return 1 > (a *= 2) ? 0.5 * a * a : -0.5 * (--a * (a - 2) - 1)\n            }\n        },\n        Cubic: {\n            In: function(a) {\n                return a * a * a\n            },\n            Out: function(a) {\n                return --a * a * a + 1\n            },\n            InOut: function(a) {\n                return 1 > (a *= 2) ? 0.5 * a * a * a : 0.5 * ((a -= 2) * a * a + 2)\n            }\n        },\n        Quartic: {\n            In: function(a) {\n                return a * a * a * a\n            },\n            Out: function(a) {\n                return 1 - --a * a * a * a\n            },\n            InOut: function(a) {\n                return 1 > (a *= 2) ? 0.5 * a * a * a * a : -0.5 * ((a -= 2) * a * a * a - 2)\n            }\n        },\n        Quintic: {\n            In: function(a) {\n                return a * a * a *\n                    a * a\n            },\n            Out: function(a) {\n                return --a * a * a * a * a + 1\n            },\n            InOut: function(a) {\n                return 1 > (a *= 2) ? 0.5 * a * a * a * a * a : 0.5 * ((a -= 2) * a * a * a * a + 2)\n            }\n        },\n        Sinusoidal: {\n            In: function(a) {\n                return 1 - Math.cos(a * Math.PI / 2)\n            },\n            Out: function(a) {\n                return Math.sin(a * Math.PI / 2)\n            },\n            InOut: function(a) {\n                return 0.5 * (1 - Math.cos(Math.PI * a))\n            }\n        },\n        Exponential: {\n            In: function(a) {\n                return 0 === a ? 0 : Math.pow(1024, a - 1)\n            },\n            Out: function(a) {\n                return 1 === a ? 1 : 1 - Math.pow(2, -10 * a)\n            },\n            InOut: function(a) {\n                return 0 === a ? 0 : 1 === a ? 1 : 1 > (a *= 2) ? 0.5 * Math.pow(1024, a - 1) : 0.5 * (-Math.pow(2, -10 * (a - 1)) + 2)\n            }\n        },\n        Circular: {\n            In: function(a) {\n                return 1 -\n                    Math.sqrt(1 - a * a)\n            },\n            Out: function(a) {\n                return Math.sqrt(1 - --a * a)\n            },\n            InOut: function(a) {\n                return 1 > (a *= 2) ? -0.5 * (Math.sqrt(1 - a * a) - 1) : 0.5 * (Math.sqrt(1 - (a -= 2) * a) + 1)\n            }\n        },\n        Elastic: {\n            In: function(a) {\n                var b, c = 0.1;\n                if (0 === a) return 0;\n                if (1 === a) return 1;\n                !c || 1 > c ? (c = 1, b = 0.1) : b = 0.4 * Math.asin(1 / c) / (2 * Math.PI);\n                return -(c * Math.pow(2, 10 * (a -= 1)) * Math.sin(2 * (a - b) * Math.PI / 0.4))\n            },\n            Out: function(a) {\n                var b, c = 0.1;\n                if (0 === a) return 0;\n                if (1 === a) return 1;\n                !c || 1 > c ? (c = 1, b = 0.1) : b = 0.4 * Math.asin(1 / c) / (2 * Math.PI);\n                return c * Math.pow(2, -10 * a) * Math.sin(2 * (a -\n                    b) * Math.PI / 0.4) + 1\n            },\n            InOut: function(a) {\n                var b, c = 0.1;\n                if (0 === a) return 0;\n                if (1 === a) return 1;\n                !c || 1 > c ? (c = 1, b = 0.1) : b = 0.4 * Math.asin(1 / c) / (2 * Math.PI);\n                return 1 > (a *= 2) ? -0.5 * c * Math.pow(2, 10 * (a -= 1)) * Math.sin(2 * (a - b) * Math.PI / 0.4) : c * Math.pow(2, -10 * (a -= 1)) * Math.sin(2 * (a - b) * Math.PI / 0.4) * 0.5 + 1\n            }\n        },\n        Back: {\n            In: function(a) {\n                return a * a * (2.70158 * a - 1.70158)\n            },\n            Out: function(a) {\n                return --a * a * (2.70158 * a + 1.70158) + 1\n            },\n            InOut: function(a) {\n                return 1 > (a *= 2) ? 0.5 * a * a * (3.5949095 * a - 2.5949095) : 0.5 * ((a -= 2) * a * (3.5949095 * a + 2.5949095) + 2)\n            }\n        },\n        Bounce: {\n            In: function(a) {\n                return 1 -\n                    TWEEN.Easing.Bounce.Out(1 - a)\n            },\n            Out: function(a) {\n                return a < 1 / 2.75 ? 7.5625 * a * a : a < 2 / 2.75 ? 7.5625 * (a -= 1.5 / 2.75) * a + 0.75 : a < 2.5 / 2.75 ? 7.5625 * (a -= 2.25 / 2.75) * a + 0.9375 : 7.5625 * (a -= 2.625 / 2.75) * a + 0.984375\n            },\n            InOut: function(a) {\n                return 0.5 > a ? 0.5 * TWEEN.Easing.Bounce.In(2 * a) : 0.5 * TWEEN.Easing.Bounce.Out(2 * a - 1) + 0.5\n            }\n        }\n    };\n    TWEEN.Interpolation = {\n        Linear: function(a, b) {\n            var c = a.length - 1,\n                d = c * b,\n                e = Math.floor(d),\n                f = TWEEN.Interpolation.Utils.Linear;\n            return 0 > b ? f(a[0], a[1], d) : 1 < b ? f(a[c], a[c - 1], c - d) : f(a[e], a[e + 1 > c ? c : e + 1], d - e)\n        },\n        Bezier: function(a, b) {\n            var c = 0,\n                d = a.length - 1,\n                e = Math.pow,\n                f = TWEEN.Interpolation.Utils.Bernstein,\n                g;\n            for (g = 0; g <= d; g++) c += e(1 - b, d - g) * e(b, g) * a[g] * f(d, g);\n            return c\n        },\n        CatmullRom: function(a, b) {\n            var c = a.length - 1,\n                d = c * b,\n                e = Math.floor(d),\n                f = TWEEN.Interpolation.Utils.CatmullRom;\n            return a[0] === a[c] ? (0 > b && (e = Math.floor(d = c * (1 + b))), f(a[(e -\n                1 + c) % c], a[e], a[(e + 1) % c], a[(e + 2) % c], d - e)) : 0 > b ? a[0] - (f(a[0], a[0], a[1], a[1], -d) - a[0]) : 1 < b ? a[c] - (f(a[c], a[c], a[c - 1], a[c - 1], d - c) - a[c]) : f(a[e ? e - 1 : 0], a[e], a[c < e + 1 ? c : e + 1], a[c < e + 2 ? c : e + 2], d - e)\n        },\n        Utils: {\n            Linear: function(a, b, c) {\n                return (b - a) * c + a\n            },\n            Bernstein: function(a, b) {\n                var c = TWEEN.Interpolation.Utils.Factorial;\n                return c(a) / c(b) / c(a - b)\n            },\n            Factorial: function() {\n                var a = [1];\n                return function(b) {\n                    var c = 1,\n                        d;\n                    if (a[b]) return a[b];\n                    for (d = b; 1 < d; d--) c *= d;\n                    return a[b] = c\n                }\n            }(),\n            CatmullRom: function(a, b, c, d, e) {\n                a = 0.5 * (c - a);\n                d = 0.5 * (d - b);\n                var f =\n                    e * e;\n                return (2 * b - 2 * c + a + d) * e * f + (-3 * b + 3 * c - 2 * a - d) * f + a * e + b\n            }\n        }\n    };\n    /*\n\n     The MIT License\n\n     Copyright &copy; 2010-2014 three.js authors\n\n     Permission is hereby granted, free of charge, to any person obtaining a copy\n     of this software and associated documentation files (the \"Software\"), to deal\n     in the Software without restriction, including without limitation the rights\n     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     copies of the Software, and to permit persons to whom the Software is\n     furnished to do so, subject to the following conditions:\n\n     The above copyright notice and this permission notice shall be included in\n     all copies or substantial portions of the Software.\n\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     THE SOFTWARE.\n    */\n    var THREE = {\n        REVISION: \"66\"\n    };\n    self.console = self.console || {\n        info: function() {},\n        log: function() {},\n        debug: function() {},\n        warn: function() {},\n        error: function() {}\n    };\n    (function() {\n        for (var a = 0, b = [\"ms\", \"moz\", \"webkit\", \"o\"], c = 0; c < b.length && !self.requestAnimationFrame; ++c) self.requestAnimationFrame = self[b[c] + \"RequestAnimationFrame\"], self.cancelAnimationFrame = self[b[c] + \"CancelAnimationFrame\"] || self[b[c] + \"CancelRequestAnimationFrame\"];\n        void 0 === self.requestAnimationFrame && void 0 !== self.setTimeout && (self.requestAnimationFrame = function(b) {\n            var c = Date.now(),\n                f = Math.max(0, 16 - (c - a)),\n                g = self.setTimeout(function() {\n                    b(c + f)\n                }, f);\n            a = c + f;\n            return g\n        });\n        void 0 === self.cancelAnimationFrame && void 0 !==\n            self.clearTimeout && (self.cancelAnimationFrame = function(a) {\n                self.clearTimeout(a)\n            })\n    })();\n    THREE.CullFaceNone = 0;\n    THREE.CullFaceBack = 1;\n    THREE.CullFaceFront = 2;\n    THREE.CullFaceFrontBack = 3;\n    THREE.FrontFaceDirectionCW = 0;\n    THREE.FrontFaceDirectionCCW = 1;\n    THREE.BasicShadowMap = 0;\n    THREE.PCFShadowMap = 1;\n    THREE.PCFSoftShadowMap = 2;\n    THREE.FrontSide = 0;\n    THREE.BackSide = 1;\n    THREE.DoubleSide = 2;\n    THREE.NoShading = 0;\n    THREE.FlatShading = 1;\n    THREE.SmoothShading = 2;\n    THREE.NoColors = 0;\n    THREE.FaceColors = 1;\n    THREE.VertexColors = 2;\n    THREE.NoBlending = 0;\n    THREE.NormalBlending = 1;\n    THREE.AdditiveBlending = 2;\n    THREE.SubtractiveBlending = 3;\n    THREE.MultiplyBlending = 4;\n    THREE.CustomBlending = 5;\n    THREE.AddEquation = 100;\n    THREE.SubtractEquation = 101;\n    THREE.ReverseSubtractEquation = 102;\n    THREE.ZeroFactor = 200;\n    THREE.OneFactor = 201;\n    THREE.SrcColorFactor = 202;\n    THREE.OneMinusSrcColorFactor = 203;\n    THREE.SrcAlphaFactor = 204;\n    THREE.OneMinusSrcAlphaFactor = 205;\n    THREE.DstAlphaFactor = 206;\n    THREE.OneMinusDstAlphaFactor = 207;\n    THREE.DstColorFactor = 208;\n    THREE.OneMinusDstColorFactor = 209;\n    THREE.SrcAlphaSaturateFactor = 210;\n    THREE.MultiplyOperation = 0;\n    THREE.MixOperation = 1;\n    THREE.AddOperation = 2;\n    THREE.UVMapping = function() {};\n    THREE.CubeReflectionMapping = function() {};\n    THREE.CubeRefractionMapping = function() {};\n    THREE.SphericalReflectionMapping = function() {};\n    THREE.SphericalRefractionMapping = function() {};\n    THREE.RepeatWrapping = 1E3;\n    THREE.ClampToEdgeWrapping = 1001;\n    THREE.MirroredRepeatWrapping = 1002;\n    THREE.NearestFilter = 1003;\n    THREE.NearestMipMapNearestFilter = 1004;\n    THREE.NearestMipMapLinearFilter = 1005;\n    THREE.LinearFilter = 1006;\n    THREE.LinearMipMapNearestFilter = 1007;\n    THREE.LinearMipMapLinearFilter = 1008;\n    THREE.UnsignedByteType = 1009;\n    THREE.ByteType = 1010;\n    THREE.ShortType = 1011;\n    THREE.UnsignedShortType = 1012;\n    THREE.IntType = 1013;\n    THREE.UnsignedIntType = 1014;\n    THREE.FloatType = 1015;\n    THREE.UnsignedShort4444Type = 1016;\n    THREE.UnsignedShort5551Type = 1017;\n    THREE.UnsignedShort565Type = 1018;\n    THREE.AlphaFormat = 1019;\n    THREE.RGBFormat = 1020;\n    THREE.RGBAFormat = 1021;\n    THREE.LuminanceFormat = 1022;\n    THREE.LuminanceAlphaFormat = 1023;\n    THREE.RGB_S3TC_DXT1_Format = 2001;\n    THREE.RGBA_S3TC_DXT1_Format = 2002;\n    THREE.RGBA_S3TC_DXT3_Format = 2003;\n    THREE.RGBA_S3TC_DXT5_Format = 2004;\n    THREE.EventDispatcher = function() {};\n    THREE.EventDispatcher.prototype = {\n        constructor: THREE.EventDispatcher,\n        apply: function(a) {\n            a.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\n            a.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\n            a.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\n            a.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent\n        },\n        addEventListener: function(a, b) {\n            void 0 === this._listeners && (this._listeners = {});\n            var c = this._listeners;\n            void 0 === c[a] && (c[a] = []); - 1 === c[a].indexOf(b) &&\n                c[a].push(b)\n        },\n        hasEventListener: function(a, b) {\n            if (void 0 === this._listeners) return !1;\n            var c = this._listeners;\n            return void 0 !== c[a] && -1 !== c[a].indexOf(b) ? !0 : !1\n        },\n        removeEventListener: function(a, b) {\n            if (void 0 !== this._listeners) {\n                var c = this._listeners[a];\n                if (void 0 !== c) {\n                    var d = c.indexOf(b); - 1 !== d && c.splice(d, 1)\n                }\n            }\n        },\n        dispatchEvent: function() {\n            var a = [];\n            return function(b) {\n                if (void 0 !== this._listeners) {\n                    var c = this._listeners[b.type];\n                    if (void 0 !== c) {\n                        b.target = this;\n                        for (var d = c.length, e = 0; e < d; e++) a[e] = c[e];\n                        for (e = 0; e < d; e++) a[e].call(this,\n                            b)\n                    }\n                }\n            }\n        }()\n    };\n    THREE.Math = {\n        PI2: 2 * Math.PI,\n        generateUUID: function() {\n            var a = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"),\n                b = Array(36),\n                c = 0,\n                d;\n            return function() {\n                for (var e = 0; 36 > e; e++) 8 == e || 13 == e || 18 == e || 23 == e ? b[e] = \"-\" : 14 == e ? b[e] = \"4\" : (2 >= c && (c = 33554432 + 16777216 * Math.random() | 0), d = c & 15, c >>= 4, b[e] = a[19 == e ? d & 3 | 8 : d]);\n                return b.join(\"\")\n            }\n        }(),\n        clamp: function(a, b, c) {\n            return a < b ? b : a > c ? c : a\n        },\n        clampBottom: function(a, b) {\n            return a < b ? b : a\n        },\n        mapLinear: function(a, b, c, d, e) {\n            return d + (a - b) * (e - d) / (c - b)\n        },\n        smoothstep: function(a,\n            b, c) {\n            if (a <= b) return 0;\n            if (a >= c) return 1;\n            a = (a - b) / (c - b);\n            return a * a * (3 - 2 * a)\n        },\n        smootherstep: function(a, b, c) {\n            if (a <= b) return 0;\n            if (a >= c) return 1;\n            a = (a - b) / (c - b);\n            return a * a * a * (a * (6 * a - 15) + 10)\n        },\n        random16: function() {\n            return (65280 * Math.random() + 255 * Math.random()) / 65535\n        },\n        randInt: function(a, b) {\n            return a + Math.floor(Math.random() * (b - a + 1))\n        },\n        randFloat: function(a, b) {\n            return a + Math.random() * (b - a)\n        },\n        randFloatSpread: function(a) {\n            return a * (0.5 - Math.random())\n        },\n        sign: function(a) {\n            return 0 > a ? -1 : 0 < a ? 1 : 0\n        },\n        degToRad: function() {\n            var a = Math.PI /\n                180;\n            return function(b) {\n                return b * a\n            }\n        }(),\n        radToDeg: function() {\n            var a = 180 / Math.PI;\n            return function(b) {\n                return b * a\n            }\n        }(),\n        isPowerOfTwo: function(a) {\n            return 0 === (a & a - 1) && 0 !== a\n        }\n    };\n    THREE.Quaternion = function(a, b, c, d) {\n        this._x = a || 0;\n        this._y = b || 0;\n        this._z = c || 0;\n        this._w = void 0 !== d ? d : 1\n    };\n    THREE.Quaternion.prototype = {\n        constructor: THREE.Quaternion,\n        _x: 0,\n        _y: 0,\n        _z: 0,\n        _w: 0,\n        _euler: void 0,\n        _updateEuler: function(a) {\n            void 0 !== this._euler && this._euler.setFromQuaternion(this, void 0, !1)\n        },\n        get x() {\n            return this._x\n        },\n        set x(a) {\n            this._x = a;\n            this._updateEuler()\n        },\n        get y() {\n            return this._y\n        },\n        set y(a) {\n            this._y = a;\n            this._updateEuler()\n        },\n        get z() {\n            return this._z\n        },\n        set z(a) {\n            this._z = a;\n            this._updateEuler()\n        },\n        get w() {\n            return this._w\n        },\n        set w(a) {\n            this._w = a;\n            this._updateEuler()\n        },\n        set: function(a, b, c, d) {\n            this._x = a;\n            this._y = b;\n            this._z = c;\n            this._w =\n                d;\n            this._updateEuler();\n            return this\n        },\n        copy: function(a) {\n            this._x = a._x;\n            this._y = a._y;\n            this._z = a._z;\n            this._w = a._w;\n            this._updateEuler();\n            return this\n        },\n        setFromEuler: function(a, b) {\n            if (!1 === a instanceof THREE.Euler) throw Error(\"ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.\");\n            var c = Math.cos(a._x / 2),\n                d = Math.cos(a._y / 2),\n                e = Math.cos(a._z / 2),\n                f = Math.sin(a._x / 2),\n                g = Math.sin(a._y / 2),\n                h = Math.sin(a._z / 2);\n            \"XYZ\" === a.order ? (this._x = f * d * e + c * g * h, this._y = c *\n                g * e - f * d * h, this._z = c * d * h + f * g * e, this._w = c * d * e - f * g * h) : \"YXZ\" === a.order ? (this._x = f * d * e + c * g * h, this._y = c * g * e - f * d * h, this._z = c * d * h - f * g * e, this._w = c * d * e + f * g * h) : \"ZXY\" === a.order ? (this._x = f * d * e - c * g * h, this._y = c * g * e + f * d * h, this._z = c * d * h + f * g * e, this._w = c * d * e - f * g * h) : \"ZYX\" === a.order ? (this._x = f * d * e - c * g * h, this._y = c * g * e + f * d * h, this._z = c * d * h - f * g * e, this._w = c * d * e + f * g * h) : \"YZX\" === a.order ? (this._x = f * d * e + c * g * h, this._y = c * g * e + f * d * h, this._z = c * d * h - f * g * e, this._w = c * d * e - f * g * h) : \"XZY\" === a.order && (this._x = f * d * e - c * g * h, this._y = c * g * e - f * d * h,\n                this._z = c * d * h + f * g * e, this._w = c * d * e + f * g * h);\n            !1 !== b && this._updateEuler();\n            return this\n        },\n        setFromAxisAngle: function(a, b) {\n            var c = b / 2,\n                d = Math.sin(c);\n            this._x = a.x * d;\n            this._y = a.y * d;\n            this._z = a.z * d;\n            this._w = Math.cos(c);\n            this._updateEuler();\n            return this\n        },\n        setFromRotationMatrix: function(a) {\n            var b = a.elements,\n                c = b[0];\n            a = b[4];\n            var d = b[8],\n                e = b[1],\n                f = b[5],\n                g = b[9],\n                h = b[2],\n                k = b[6],\n                b = b[10],\n                l = c + f + b;\n            0 < l ? (c = 0.5 / Math.sqrt(l + 1), this._w = 0.25 / c, this._x = (k - g) * c, this._y = (d - h) * c, this._z = (e - a) * c) : c > f && c > b ? (c = 2 * Math.sqrt(1 + c - f - b), this._w = (k - g) / c, this._x =\n                0.25 * c, this._y = (a + e) / c, this._z = (d + h) / c) : f > b ? (c = 2 * Math.sqrt(1 + f - c - b), this._w = (d - h) / c, this._x = (a + e) / c, this._y = 0.25 * c, this._z = (g + k) / c) : (c = 2 * Math.sqrt(1 + b - c - f), this._w = (e - a) / c, this._x = (d + h) / c, this._y = (g + k) / c, this._z = 0.25 * c);\n            this._updateEuler();\n            return this\n        },\n        inverse: function() {\n            this.conjugate().normalize();\n            return this\n        },\n        conjugate: function() {\n            this._x *= -1;\n            this._y *= -1;\n            this._z *= -1;\n            this._updateEuler();\n            return this\n        },\n        lengthSq: function() {\n            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w\n        },\n        length: function() {\n            return Math.sqrt(this._x *\n                this._x + this._y * this._y + this._z * this._z + this._w * this._w)\n        },\n        normalize: function() {\n            var a = this.length();\n            0 === a ? (this._z = this._y = this._x = 0, this._w = 1) : (a = 1 / a, this._x *= a, this._y *= a, this._z *= a, this._w *= a);\n            return this\n        },\n        multiply: function(a, b) {\n            return void 0 !== b ? (console.warn(\"DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"), this.multiplyQuaternions(a, b)) : this.multiplyQuaternions(this, a)\n        },\n        multiplyQuaternions: function(a, b) {\n            var c = a._x,\n                d = a._y,\n                e = a._z,\n                f =\n                a._w,\n                g = b._x,\n                h = b._y,\n                k = b._z,\n                l = b._w;\n            this._x = c * l + f * g + d * k - e * h;\n            this._y = d * l + f * h + e * g - c * k;\n            this._z = e * l + f * k + c * h - d * g;\n            this._w = f * l - c * g - d * h - e * k;\n            this._updateEuler();\n            return this\n        },\n        multiplyVector3: function(a) {\n            console.warn(\"DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\");\n            return a.applyQuaternion(this)\n        },\n        slerp: function(a, b) {\n            var c = this._x,\n                d = this._y,\n                e = this._z,\n                f = this._w,\n                g = f * a._w + c * a._x + d * a._y + e * a._z;\n            0 > g ? (this._w = -a._w, this._x = -a._x, this._y = -a._y, this._z = -a._z, g = -g) : this.copy(a);\n            if (1 <= g) return this._w = f, this._x = c, this._y = d, this._z = e, this;\n            var h = Math.acos(g),\n                k = Math.sqrt(1 - g * g);\n            if (0.0010 > Math.abs(k)) return this._w = 0.5 * (f + this._w), this._x = 0.5 * (c + this._x), this._y = 0.5 * (d + this._y), this._z = 0.5 * (e + this._z), this;\n            g = Math.sin((1 - b) * h) / k;\n            h = Math.sin(b * h) / k;\n            this._w = f * g + this._w * h;\n            this._x = c * g + this._x * h;\n            this._y = d * g + this._y * h;\n            this._z = e * g + this._z * h;\n            this._updateEuler();\n            return this\n        },\n        equals: function(a) {\n            return a._x === this._x && a._y === this._y && a._z === this._z && a._w === this._w\n        },\n        fromArray: function(a) {\n            this._x = a[0];\n            this._y = a[1];\n            this._z = a[2];\n            this._w = a[3];\n            this._updateEuler();\n            return this\n        },\n        toArray: function() {\n            return [this._x, this._y, this._z, this._w]\n        },\n        clone: function() {\n            return new THREE.Quaternion(this._x, this._y, this._z, this._w)\n        }\n    };\n    THREE.Quaternion.slerp = function(a, b, c, d) {\n        return c.copy(a).slerp(b, d)\n    };\n    THREE.Vector2 = function(a, b) {\n        this.x = a || 0;\n        this.y = b || 0\n    };\n    THREE.Vector2.prototype = {\n        constructor: THREE.Vector2,\n        set: function(a, b) {\n            this.x = a;\n            this.y = b;\n            return this\n        },\n        setX: function(a) {\n            this.x = a;\n            return this\n        },\n        setY: function(a) {\n            this.y = a;\n            return this\n        },\n        setComponent: function(a, b) {\n            switch (a) {\n                case 0:\n                    this.x = b;\n                    break;\n                case 1:\n                    this.y = b;\n                    break;\n                default:\n                    throw Error(\"index is out of range: \" + a);\n            }\n        },\n        getComponent: function(a) {\n            switch (a) {\n                case 0:\n                    return this.x;\n                case 1:\n                    return this.y;\n                default:\n                    throw Error(\"index is out of range: \" + a);\n            }\n        },\n        copy: function(a) {\n            this.x = a.x;\n            this.y = a.y;\n            return this\n        },\n        add: function(a,\n            b) {\n            if (void 0 !== b) return console.warn(\"DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(a, b);\n            this.x += a.x;\n            this.y += a.y;\n            return this\n        },\n        addVectors: function(a, b) {\n            this.x = a.x + b.x;\n            this.y = a.y + b.y;\n            return this\n        },\n        addScalar: function(a) {\n            this.x += a;\n            this.y += a;\n            return this\n        },\n        sub: function(a, b) {\n            if (void 0 !== b) return console.warn(\"DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(a, b);\n            this.x -= a.x;\n            this.y -=\n                a.y;\n            return this\n        },\n        subVectors: function(a, b) {\n            this.x = a.x - b.x;\n            this.y = a.y - b.y;\n            return this\n        },\n        multiplyScalar: function(a) {\n            this.x *= a;\n            this.y *= a;\n            return this\n        },\n        divideScalar: function(a) {\n            0 !== a ? (a = 1 / a, this.x *= a, this.y *= a) : this.y = this.x = 0;\n            return this\n        },\n        min: function(a) {\n            this.x > a.x && (this.x = a.x);\n            this.y > a.y && (this.y = a.y);\n            return this\n        },\n        max: function(a) {\n            this.x < a.x && (this.x = a.x);\n            this.y < a.y && (this.y = a.y);\n            return this\n        },\n        clamp: function(a, b) {\n            this.x < a.x ? this.x = a.x : this.x > b.x && (this.x = b.x);\n            this.y < a.y ? this.y = a.y : this.y > b.y && (this.y = b.y);\n            return this\n        },\n        clampScalar: function() {\n            var a, b;\n            return function(c, d) {\n                void 0 === a && (a = new THREE.Vector2, b = new THREE.Vector2);\n                a.set(c, c);\n                b.set(d, d);\n                return this.clamp(a, b)\n            }\n        }(),\n        floor: function() {\n            this.x = Math.floor(this.x);\n            this.y = Math.floor(this.y);\n            return this\n        },\n        ceil: function() {\n            this.x = Math.ceil(this.x);\n            this.y = Math.ceil(this.y);\n            return this\n        },\n        round: function() {\n            this.x = Math.round(this.x);\n            this.y = Math.round(this.y);\n            return this\n        },\n        roundToZero: function() {\n            this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x);\n            this.y = 0 > this.y ?\n                Math.ceil(this.y) : Math.floor(this.y);\n            return this\n        },\n        negate: function() {\n            return this.multiplyScalar(-1)\n        },\n        dot: function(a) {\n            return this.x * a.x + this.y * a.y\n        },\n        lengthSq: function() {\n            return this.x * this.x + this.y * this.y\n        },\n        length: function() {\n            return Math.sqrt(this.x * this.x + this.y * this.y)\n        },\n        normalize: function() {\n            return this.divideScalar(this.length())\n        },\n        distanceTo: function(a) {\n            return Math.sqrt(this.distanceToSquared(a))\n        },\n        distanceToSquared: function(a) {\n            var b = this.x - a.x;\n            a = this.y - a.y;\n            return b * b + a * a\n        },\n        setLength: function(a) {\n            var b =\n                this.length();\n            0 !== b && a !== b && this.multiplyScalar(a / b);\n            return this\n        },\n        lerp: function(a, b) {\n            this.x += (a.x - this.x) * b;\n            this.y += (a.y - this.y) * b;\n            return this\n        },\n        equals: function(a) {\n            return a.x === this.x && a.y === this.y\n        },\n        fromArray: function(a) {\n            this.x = a[0];\n            this.y = a[1];\n            return this\n        },\n        toArray: function() {\n            return [this.x, this.y]\n        },\n        clone: function() {\n            return new THREE.Vector2(this.x, this.y)\n        }\n    };\n    THREE.Vector3 = function(a, b, c) {\n        this.x = a || 0;\n        this.y = b || 0;\n        this.z = c || 0\n    };\n    THREE.Vector3.prototype = {\n        constructor: THREE.Vector3,\n        set: function(a, b, c) {\n            this.x = a;\n            this.y = b;\n            this.z = c;\n            return this\n        },\n        setX: function(a) {\n            this.x = a;\n            return this\n        },\n        setY: function(a) {\n            this.y = a;\n            return this\n        },\n        setZ: function(a) {\n            this.z = a;\n            return this\n        },\n        setComponent: function(a, b) {\n            switch (a) {\n                case 0:\n                    this.x = b;\n                    break;\n                case 1:\n                    this.y = b;\n                    break;\n                case 2:\n                    this.z = b;\n                    break;\n                default:\n                    throw Error(\"index is out of range: \" + a);\n            }\n        },\n        getComponent: function(a) {\n            switch (a) {\n                case 0:\n                    return this.x;\n                case 1:\n                    return this.y;\n                case 2:\n                    return this.z;\n                default:\n                    throw Error(\"index is out of range: \" +\n                        a);\n            }\n        },\n        copy: function(a) {\n            this.x = a.x;\n            this.y = a.y;\n            this.z = a.z;\n            return this\n        },\n        add: function(a, b) {\n            if (void 0 !== b) return console.warn(\"DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(a, b);\n            this.x += a.x;\n            this.y += a.y;\n            this.z += a.z;\n            return this\n        },\n        addScalar: function(a) {\n            this.x += a;\n            this.y += a;\n            this.z += a;\n            return this\n        },\n        addVectors: function(a, b) {\n            this.x = a.x + b.x;\n            this.y = a.y + b.y;\n            this.z = a.z + b.z;\n            return this\n        },\n        sub: function(a, b) {\n            if (void 0 !== b) return console.warn(\"DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),\n                this.subVectors(a, b);\n            this.x -= a.x;\n            this.y -= a.y;\n            this.z -= a.z;\n            return this\n        },\n        subVectors: function(a, b) {\n            this.x = a.x - b.x;\n            this.y = a.y - b.y;\n            this.z = a.z - b.z;\n            return this\n        },\n        multiply: function(a, b) {\n            if (void 0 !== b) return console.warn(\"DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"), this.multiplyVectors(a, b);\n            this.x *= a.x;\n            this.y *= a.y;\n            this.z *= a.z;\n            return this\n        },\n        multiplyScalar: function(a) {\n            this.x *= a;\n            this.y *= a;\n            this.z *= a;\n            return this\n        },\n        multiplyVectors: function(a, b) {\n            this.x = a.x *\n                b.x;\n            this.y = a.y * b.y;\n            this.z = a.z * b.z;\n            return this\n        },\n        applyEuler: function() {\n            var a;\n            return function(b) {\n                !1 === b instanceof THREE.Euler && console.error(\"ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.\");\n                void 0 === a && (a = new THREE.Quaternion);\n                this.applyQuaternion(a.setFromEuler(b));\n                return this\n            }\n        }(),\n        applyAxisAngle: function() {\n            var a;\n            return function(b, c) {\n                void 0 === a && (a = new THREE.Quaternion);\n                this.applyQuaternion(a.setFromAxisAngle(b, c));\n                return this\n            }\n        }(),\n        applyMatrix3: function(a) {\n            var b = this.x,\n                c = this.y,\n                d = this.z;\n            a = a.elements;\n            this.x = a[0] * b + a[3] * c + a[6] * d;\n            this.y = a[1] * b + a[4] * c + a[7] * d;\n            this.z = a[2] * b + a[5] * c + a[8] * d;\n            return this\n        },\n        applyMatrix4: function(a) {\n            var b = this.x,\n                c = this.y,\n                d = this.z;\n            a = a.elements;\n            this.x = a[0] * b + a[4] * c + a[8] * d + a[12];\n            this.y = a[1] * b + a[5] * c + a[9] * d + a[13];\n            this.z = a[2] * b + a[6] * c + a[10] * d + a[14];\n            return this\n        },\n        applyProjection: function(a) {\n            var b = this.x,\n                c = this.y,\n                d = this.z;\n            a = a.elements;\n            var e = 1 / (a[3] * b + a[7] * c + a[11] * d + a[15]);\n            this.x = (a[0] * b + a[4] * c + a[8] * d + a[12]) * e;\n            this.y =\n                (a[1] * b + a[5] * c + a[9] * d + a[13]) * e;\n            this.z = (a[2] * b + a[6] * c + a[10] * d + a[14]) * e;\n            return this\n        },\n        applyQuaternion: function(a) {\n            var b = this.x,\n                c = this.y,\n                d = this.z,\n                e = a.x,\n                f = a.y,\n                g = a.z;\n            a = a.w;\n            var h = a * b + f * d - g * c,\n                k = a * c + g * b - e * d,\n                l = a * d + e * c - f * b,\n                b = -e * b - f * c - g * d;\n            this.x = h * a + b * -e + k * -g - l * -f;\n            this.y = k * a + b * -f + l * -e - h * -g;\n            this.z = l * a + b * -g + h * -f - k * -e;\n            return this\n        },\n        transformDirection: function(a) {\n            var b = this.x,\n                c = this.y,\n                d = this.z;\n            a = a.elements;\n            this.x = a[0] * b + a[4] * c + a[8] * d;\n            this.y = a[1] * b + a[5] * c + a[9] * d;\n            this.z = a[2] * b + a[6] * c + a[10] * d;\n            this.normalize();\n            return this\n        },\n        divide: function(a) {\n            this.x /= a.x;\n            this.y /= a.y;\n            this.z /= a.z;\n            return this\n        },\n        divideScalar: function(a) {\n            0 !== a ? (a = 1 / a, this.x *= a, this.y *= a, this.z *= a) : this.z = this.y = this.x = 0;\n            return this\n        },\n        min: function(a) {\n            this.x > a.x && (this.x = a.x);\n            this.y > a.y && (this.y = a.y);\n            this.z > a.z && (this.z = a.z);\n            return this\n        },\n        max: function(a) {\n            this.x < a.x && (this.x = a.x);\n            this.y < a.y && (this.y = a.y);\n            this.z < a.z && (this.z = a.z);\n            return this\n        },\n        clamp: function(a, b) {\n            this.x < a.x ? this.x = a.x : this.x > b.x && (this.x = b.x);\n            this.y < a.y ? this.y = a.y : this.y > b.y && (this.y = b.y);\n            this.z <\n                a.z ? this.z = a.z : this.z > b.z && (this.z = b.z);\n            return this\n        },\n        clampScalar: function() {\n            var a, b;\n            return function(c, d) {\n                void 0 === a && (a = new THREE.Vector3, b = new THREE.Vector3);\n                a.set(c, c, c);\n                b.set(d, d, d);\n                return this.clamp(a, b)\n            }\n        }(),\n        floor: function() {\n            this.x = Math.floor(this.x);\n            this.y = Math.floor(this.y);\n            this.z = Math.floor(this.z);\n            return this\n        },\n        ceil: function() {\n            this.x = Math.ceil(this.x);\n            this.y = Math.ceil(this.y);\n            this.z = Math.ceil(this.z);\n            return this\n        },\n        round: function() {\n            this.x = Math.round(this.x);\n            this.y = Math.round(this.y);\n            this.z = Math.round(this.z);\n            return this\n        },\n        roundToZero: function() {\n            this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x);\n            this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y);\n            this.z = 0 > this.z ? Math.ceil(this.z) : Math.floor(this.z);\n            return this\n        },\n        negate: function() {\n            return this.multiplyScalar(-1)\n        },\n        dot: function(a) {\n            return this.x * a.x + this.y * a.y + this.z * a.z\n        },\n        lengthSq: function() {\n            return this.x * this.x + this.y * this.y + this.z * this.z\n        },\n        length: function() {\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\n        },\n        lengthManhattan: function() {\n            return Math.abs(this.x) +\n                Math.abs(this.y) + Math.abs(this.z)\n        },\n        normalize: function() {\n            return this.divideScalar(this.length())\n        },\n        setLength: function(a) {\n            var b = this.length();\n            0 !== b && a !== b && this.multiplyScalar(a / b);\n            return this\n        },\n        lerp: function(a, b) {\n            this.x += (a.x - this.x) * b;\n            this.y += (a.y - this.y) * b;\n            this.z += (a.z - this.z) * b;\n            return this\n        },\n        cross: function(a, b) {\n            if (void 0 !== b) return console.warn(\"DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"), this.crossVectors(a, b);\n            var c = this.x,\n                d = this.y,\n                e = this.z;\n            this.x =\n                d * a.z - e * a.y;\n            this.y = e * a.x - c * a.z;\n            this.z = c * a.y - d * a.x;\n            return this\n        },\n        crossVectors: function(a, b) {\n            var c = a.x,\n                d = a.y,\n                e = a.z,\n                f = b.x,\n                g = b.y,\n                h = b.z;\n            this.x = d * h - e * g;\n            this.y = e * f - c * h;\n            this.z = c * g - d * f;\n            return this\n        },\n        projectOnVector: function() {\n            var a, b;\n            return function(c) {\n                void 0 === a && (a = new THREE.Vector3);\n                a.copy(c).normalize();\n                b = this.dot(a);\n                return this.copy(a).multiplyScalar(b)\n            }\n        }(),\n        projectOnPlane: function() {\n            var a;\n            return function(b) {\n                void 0 === a && (a = new THREE.Vector3);\n                a.copy(this).projectOnVector(b);\n                return this.sub(a)\n            }\n        }(),\n        reflect: function() {\n            var a;\n            return function(b) {\n                void 0 === a && (a = new THREE.Vector3);\n                return this.sub(a.copy(b).multiplyScalar(2 * this.dot(b)))\n            }\n        }(),\n        angleTo: function(a) {\n            a = this.dot(a) / (this.length() * a.length());\n            return Math.acos(THREE.Math.clamp(a, -1, 1))\n        },\n        distanceTo: function(a) {\n            return Math.sqrt(this.distanceToSquared(a))\n        },\n        distanceToSquared: function(a) {\n            var b = this.x - a.x,\n                c = this.y - a.y;\n            a = this.z - a.z;\n            return b * b + c * c + a * a\n        },\n        setEulerFromRotationMatrix: function(a, b) {\n            console.error(\"REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.\")\n        },\n        setEulerFromQuaternion: function(a, b) {\n            console.error(\"REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.\")\n        },\n        getPositionFromMatrix: function(a) {\n            console.warn(\"DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.\");\n            return this.setFromMatrixPosition(a)\n        },\n        getScaleFromMatrix: function(a) {\n            console.warn(\"DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.\");\n            return this.setFromMatrixScale(a)\n        },\n        getColumnFromMatrix: function(a, b) {\n            console.warn(\"DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.\");\n            return this.setFromMatrixColumn(a, b)\n        },\n        setFromMatrixPosition: function(a) {\n            this.x = a.elements[12];\n            this.y = a.elements[13];\n            this.z = a.elements[14];\n            return this\n        },\n        setFromMatrixScale: function(a) {\n            var b = this.set(a.elements[0], a.elements[1], a.elements[2]).length(),\n                c = this.set(a.elements[4], a.elements[5], a.elements[6]).length();\n            a = this.set(a.elements[8], a.elements[9], a.elements[10]).length();\n            this.x = b;\n            this.y = c;\n            this.z = a;\n            return this\n        },\n        setFromMatrixColumn: function(a, b) {\n            var c = 4 * a,\n                d = b.elements;\n            this.x = d[c];\n            this.y = d[c + 1];\n            this.z = d[c + 2];\n            return this\n        },\n        equals: function(a) {\n            return a.x === this.x && a.y === this.y && a.z === this.z\n        },\n        fromArray: function(a) {\n            this.x = a[0];\n            this.y = a[1];\n            this.z = a[2];\n            return this\n        },\n        toArray: function() {\n            return [this.x, this.y, this.z]\n        },\n        clone: function() {\n            return new THREE.Vector3(this.x, this.y, this.z)\n        }\n    };\n    THREE.Box3 = function(a, b) {\n        this.min = void 0 !== a ? a : new THREE.Vector3(Infinity, Infinity, Infinity);\n        this.max = void 0 !== b ? b : new THREE.Vector3(-Infinity, -Infinity, -Infinity)\n    };\n    THREE.Box3.prototype = {\n        constructor: THREE.Box3,\n        set: function(a, b) {\n            this.min.copy(a);\n            this.max.copy(b);\n            return this\n        },\n        addPoint: function(a) {\n            a.x < this.min.x ? this.min.x = a.x : a.x > this.max.x && (this.max.x = a.x);\n            a.y < this.min.y ? this.min.y = a.y : a.y > this.max.y && (this.max.y = a.y);\n            a.z < this.min.z ? this.min.z = a.z : a.z > this.max.z && (this.max.z = a.z)\n        },\n        setFromPoints: function(a) {\n            if (0 < a.length) {\n                var b = a[0];\n                this.min.copy(b);\n                this.max.copy(b);\n                for (var b = 1, c = a.length; b < c; b++) this.addPoint(a[b])\n            } else this.makeEmpty();\n            return this\n        },\n        setFromCenterAndSize: function() {\n            var a =\n                new THREE.Vector3;\n            return function(b, c) {\n                var d = a.copy(c).multiplyScalar(0.5);\n                this.min.copy(b).sub(d);\n                this.max.copy(b).add(d);\n                return this\n            }\n        }(),\n        setFromObject: function() {\n            var a = new THREE.Vector3;\n            return function(b) {\n                var c = this;\n                b.updateMatrixWorld(!0);\n                this.makeEmpty();\n                b.traverse(function(b) {\n                    if (void 0 !== b.geometry && void 0 !== b.geometry.vertices)\n                        for (var e = b.geometry.vertices, f = 0, g = e.length; f < g; f++) a.copy(e[f]), a.applyMatrix4(b.matrixWorld), c.expandByPoint(a)\n                });\n                return this\n            }\n        }(),\n        copy: function(a) {\n            this.min.copy(a.min);\n            this.max.copy(a.max);\n            return this\n        },\n        makeEmpty: function() {\n            this.min.x = this.min.y = this.min.z = Infinity;\n            this.max.x = this.max.y = this.max.z = -Infinity;\n            return this\n        },\n        empty: function() {\n            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z\n        },\n        center: function(a) {\n            return (a || new THREE.Vector3).addVectors(this.min, this.max).multiplyScalar(0.5)\n        },\n        size: function(a) {\n            return (a || new THREE.Vector3).subVectors(this.max, this.min)\n        },\n        expandByPoint: function(a) {\n            this.min.min(a);\n            this.max.max(a);\n            return this\n        },\n        expandByVector: function(a) {\n            this.min.sub(a);\n            this.max.add(a);\n            return this\n        },\n        expandByScalar: function(a) {\n            this.min.addScalar(-a);\n            this.max.addScalar(a);\n            return this\n        },\n        containsPoint: function(a) {\n            return a.x < this.min.x || a.x > this.max.x || a.y < this.min.y || a.y > this.max.y || a.z < this.min.z || a.z > this.max.z ? !1 : !0\n        },\n        containsBox: function(a) {\n            return this.min.x <= a.min.x && a.max.x <= this.max.x && this.min.y <= a.min.y && a.max.y <= this.max.y && this.min.z <= a.min.z && a.max.z <= this.max.z ? !0 : !1\n        },\n        getParameter: function(a, b) {\n            return (b || new THREE.Vector3).set((a.x - this.min.x) / (this.max.x -\n                this.min.x), (a.y - this.min.y) / (this.max.y - this.min.y), (a.z - this.min.z) / (this.max.z - this.min.z))\n        },\n        isIntersectionBox: function(a) {\n            return a.max.x < this.min.x || a.min.x > this.max.x || a.max.y < this.min.y || a.min.y > this.max.y || a.max.z < this.min.z || a.min.z > this.max.z ? !1 : !0\n        },\n        clampPoint: function(a, b) {\n            return (b || new THREE.Vector3).copy(a).clamp(this.min, this.max)\n        },\n        distanceToPoint: function() {\n            var a = new THREE.Vector3;\n            return function(b) {\n                return a.copy(b).clamp(this.min, this.max).sub(b).length()\n            }\n        }(),\n        getBoundingSphere: function() {\n            var a =\n                new THREE.Vector3;\n            return function(b) {\n                b = b || new THREE.Sphere;\n                b.center = this.center();\n                b.radius = 0.5 * this.size(a).length();\n                return b\n            }\n        }(),\n        intersect: function(a) {\n            this.min.max(a.min);\n            this.max.min(a.max);\n            return this\n        },\n        union: function(a) {\n            this.min.min(a.min);\n            this.max.max(a.max);\n            return this\n        },\n        applyMatrix4: function() {\n            var a = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3];\n            return function(b) {\n                a[0].set(this.min.x, this.min.y,\n                    this.min.z).applyMatrix4(b);\n                a[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(b);\n                a[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(b);\n                a[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(b);\n                a[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(b);\n                a[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(b);\n                a[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(b);\n                a[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(b);\n                this.makeEmpty();\n                this.setFromPoints(a);\n                return this\n            }\n        }(),\n        translate: function(a) {\n            this.min.add(a);\n            this.max.add(a);\n            return this\n        },\n        equals: function(a) {\n            return a.min.equals(this.min) && a.max.equals(this.max)\n        },\n        clone: function() {\n            return (new THREE.Box3).copy(this)\n        }\n    };\n    THREE.Sphere = function(a, b) {\n        this.center = void 0 !== a ? a : new THREE.Vector3;\n        this.radius = void 0 !== b ? b : 0\n    };\n    THREE.Sphere.prototype = {\n        constructor: THREE.Sphere,\n        set: function(a, b) {\n            this.center.copy(a);\n            this.radius = b;\n            return this\n        },\n        setFromPoints: function() {\n            var a = new THREE.Box3;\n            return function(b, c) {\n                var d = this.center;\n                void 0 !== c ? d.copy(c) : a.setFromPoints(b).center(d);\n                for (var e = 0, f = 0, g = b.length; f < g; f++) e = Math.max(e, d.distanceToSquared(b[f]));\n                this.radius = Math.sqrt(e);\n                return this\n            }\n        }(),\n        copy: function(a) {\n            this.center.copy(a.center);\n            this.radius = a.radius;\n            return this\n        },\n        empty: function() {\n            return 0 >= this.radius\n        },\n        containsPoint: function(a) {\n            return a.distanceToSquared(this.center) <=\n                this.radius * this.radius\n        },\n        distanceToPoint: function(a) {\n            return a.distanceTo(this.center) - this.radius\n        },\n        intersectsSphere: function(a) {\n            var b = this.radius + a.radius;\n            return a.center.distanceToSquared(this.center) <= b * b\n        },\n        clampPoint: function(a, b) {\n            var c = this.center.distanceToSquared(a),\n                d = b || new THREE.Vector3;\n            d.copy(a);\n            c > this.radius * this.radius && (d.sub(this.center).normalize(), d.multiplyScalar(this.radius).add(this.center));\n            return d\n        },\n        getBoundingBox: function(a) {\n            a = a || new THREE.Box3;\n            a.set(this.center, this.center);\n            a.expandByScalar(this.radius);\n            return a\n        },\n        applyMatrix4: function(a) {\n            this.center.applyMatrix4(a);\n            this.radius *= a.getMaxScaleOnAxis();\n            return this\n        },\n        translate: function(a) {\n            this.center.add(a);\n            return this\n        },\n        equals: function(a) {\n            return a.center.equals(this.center) && a.radius === this.radius\n        },\n        clone: function() {\n            return (new THREE.Sphere).copy(this)\n        }\n    };\n    THREE.Euler = function(a, b, c, d) {\n        this._x = a || 0;\n        this._y = b || 0;\n        this._z = c || 0;\n        this._order = d || THREE.Euler.DefaultOrder\n    };\n    THREE.Euler.RotationOrders = \"XYZ YZX ZXY XZY YXZ ZYX\".split(\" \");\n    THREE.Euler.DefaultOrder = \"XYZ\";\n    THREE.Euler.prototype = {\n        constructor: THREE.Euler,\n        _x: 0,\n        _y: 0,\n        _z: 0,\n        _order: THREE.Euler.DefaultOrder,\n        _quaternion: void 0,\n        _updateQuaternion: function() {\n            void 0 !== this._quaternion && this._quaternion.setFromEuler(this, !1)\n        },\n        get x() {\n            return this._x\n        },\n        set x(a) {\n            this._x = a;\n            this._updateQuaternion()\n        },\n        get y() {\n            return this._y\n        },\n        set y(a) {\n            this._y = a;\n            this._updateQuaternion()\n        },\n        get z() {\n            return this._z\n        },\n        set z(a) {\n            this._z = a;\n            this._updateQuaternion()\n        },\n        get order() {\n            return this._order\n        },\n        set order(a) {\n            this._order = a;\n            this._updateQuaternion()\n        },\n        set: function(a, b, c, d) {\n            this._x = a;\n            this._y = b;\n            this._z = c;\n            this._order = d || this._order;\n            this._updateQuaternion();\n            return this\n        },\n        copy: function(a) {\n            this._x = a._x;\n            this._y = a._y;\n            this._z = a._z;\n            this._order = a._order;\n            this._updateQuaternion();\n            return this\n        },\n        setFromRotationMatrix: function(a, b) {\n            function c(a) {\n                return Math.min(Math.max(a, -1), 1)\n            }\n            var d = a.elements,\n                e = d[0],\n                f = d[4],\n                g = d[8],\n                h = d[1],\n                k = d[5],\n                l = d[9],\n                n = d[2],\n                m = d[6],\n                d = d[10];\n            b = b || this._order;\n            \"XYZ\" === b ? (this._y = Math.asin(c(g)), 0.99999 > Math.abs(g) ? (this._x = Math.atan2(-l, d), this._z =\n                Math.atan2(-f, e)) : (this._x = Math.atan2(m, k), this._z = 0)) : \"YXZ\" === b ? (this._x = Math.asin(-c(l)), 0.99999 > Math.abs(l) ? (this._y = Math.atan2(g, d), this._z = Math.atan2(h, k)) : (this._y = Math.atan2(-n, e), this._z = 0)) : \"ZXY\" === b ? (this._x = Math.asin(c(m)), 0.99999 > Math.abs(m) ? (this._y = Math.atan2(-n, d), this._z = Math.atan2(-f, k)) : (this._y = 0, this._z = Math.atan2(h, e))) : \"ZYX\" === b ? (this._y = Math.asin(-c(n)), 0.99999 > Math.abs(n) ? (this._x = Math.atan2(m, d), this._z = Math.atan2(h, e)) : (this._x = 0, this._z = Math.atan2(-f, k))) : \"YZX\" === b ? (this._z =\n                Math.asin(c(h)), 0.99999 > Math.abs(h) ? (this._x = Math.atan2(-l, k), this._y = Math.atan2(-n, e)) : (this._x = 0, this._y = Math.atan2(g, d))) : \"XZY\" === b ? (this._z = Math.asin(-c(f)), 0.99999 > Math.abs(f) ? (this._x = Math.atan2(m, k), this._y = Math.atan2(g, e)) : (this._x = Math.atan2(-l, d), this._y = 0)) : console.warn(\"WARNING: Euler.setFromRotationMatrix() given unsupported order: \" + b);\n            this._order = b;\n            this._updateQuaternion();\n            return this\n        },\n        setFromQuaternion: function(a, b, c) {\n            function d(a) {\n                return Math.min(Math.max(a, -1), 1)\n            }\n            var e = a.x * a.x,\n                f =\n                a.y * a.y,\n                g = a.z * a.z,\n                h = a.w * a.w;\n            b = b || this._order;\n            \"XYZ\" === b ? (this._x = Math.atan2(2 * (a.x * a.w - a.y * a.z), h - e - f + g), this._y = Math.asin(d(2 * (a.x * a.z + a.y * a.w))), this._z = Math.atan2(2 * (a.z * a.w - a.x * a.y), h + e - f - g)) : \"YXZ\" === b ? (this._x = Math.asin(d(2 * (a.x * a.w - a.y * a.z))), this._y = Math.atan2(2 * (a.x * a.z + a.y * a.w), h - e - f + g), this._z = Math.atan2(2 * (a.x * a.y + a.z * a.w), h - e + f - g)) : \"ZXY\" === b ? (this._x = Math.asin(d(2 * (a.x * a.w + a.y * a.z))), this._y = Math.atan2(2 * (a.y * a.w - a.z * a.x), h - e - f + g), this._z = Math.atan2(2 * (a.z * a.w - a.x * a.y), h - e + f - g)) : \"ZYX\" ===\n                b ? (this._x = Math.atan2(2 * (a.x * a.w + a.z * a.y), h - e - f + g), this._y = Math.asin(d(2 * (a.y * a.w - a.x * a.z))), this._z = Math.atan2(2 * (a.x * a.y + a.z * a.w), h + e - f - g)) : \"YZX\" === b ? (this._x = Math.atan2(2 * (a.x * a.w - a.z * a.y), h - e + f - g), this._y = Math.atan2(2 * (a.y * a.w - a.x * a.z), h + e - f - g), this._z = Math.asin(d(2 * (a.x * a.y + a.z * a.w)))) : \"XZY\" === b ? (this._x = Math.atan2(2 * (a.x * a.w + a.y * a.z), h - e + f - g), this._y = Math.atan2(2 * (a.x * a.z + a.y * a.w), h + e - f - g), this._z = Math.asin(d(2 * (a.z * a.w - a.x * a.y)))) : console.warn(\"WARNING: Euler.setFromQuaternion() given unsupported order: \" +\n                    b);\n            this._order = b;\n            !1 !== c && this._updateQuaternion();\n            return this\n        },\n        reorder: function() {\n            var a = new THREE.Quaternion;\n            return function(b) {\n                a.setFromEuler(this);\n                this.setFromQuaternion(a, b)\n            }\n        }(),\n        fromArray: function(a) {\n            this._x = a[0];\n            this._y = a[1];\n            this._z = a[2];\n            void 0 !== a[3] && (this._order = a[3]);\n            this._updateQuaternion();\n            return this\n        },\n        toArray: function() {\n            return [this._x, this._y, this._z, this._order]\n        },\n        equals: function(a) {\n            return a._x === this._x && a._y === this._y && a._z === this._z && a._order === this._order\n        },\n        clone: function() {\n            return new THREE.Euler(this._x,\n                this._y, this._z, this._order)\n        }\n    };\n    THREE.Matrix3 = function(a, b, c, d, e, f, g, h, k) {\n        this.elements = new Float32Array(9);\n        this.set(void 0 !== a ? a : 1, b || 0, c || 0, d || 0, void 0 !== e ? e : 1, f || 0, g || 0, h || 0, void 0 !== k ? k : 1)\n    };\n    THREE.Matrix3.prototype = {\n        constructor: THREE.Matrix3,\n        set: function(a, b, c, d, e, f, g, h, k) {\n            var l = this.elements;\n            l[0] = a;\n            l[3] = b;\n            l[6] = c;\n            l[1] = d;\n            l[4] = e;\n            l[7] = f;\n            l[2] = g;\n            l[5] = h;\n            l[8] = k;\n            return this\n        },\n        identity: function() {\n            this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n            return this\n        },\n        copy: function(a) {\n            a = a.elements;\n            this.set(a[0], a[3], a[6], a[1], a[4], a[7], a[2], a[5], a[8]);\n            return this\n        },\n        multiplyVector3: function(a) {\n            console.warn(\"DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\");\n            return a.applyMatrix3(this)\n        },\n        multiplyVector3Array: function() {\n            var a = new THREE.Vector3;\n            return function(b) {\n                for (var c = 0, d = b.length; c < d; c += 3) a.x = b[c], a.y = b[c + 1], a.z = b[c + 2], a.applyMatrix3(this), b[c] = a.x, b[c + 1] = a.y, b[c + 2] = a.z;\n                return b\n            }\n        }(),\n        multiplyScalar: function(a) {\n            var b = this.elements;\n            b[0] *= a;\n            b[3] *= a;\n            b[6] *= a;\n            b[1] *= a;\n            b[4] *= a;\n            b[7] *= a;\n            b[2] *= a;\n            b[5] *= a;\n            b[8] *= a;\n            return this\n        },\n        determinant: function() {\n            var a = this.elements,\n                b = a[0],\n                c = a[1],\n                d = a[2],\n                e = a[3],\n                f = a[4],\n                g = a[5],\n                h = a[6],\n                k = a[7],\n                a = a[8];\n            return b * f * a - b * g * k - c * e * a + c * g * h + d * e * k - d * f * h\n        },\n        getInverse: function(a,\n            b) {\n            var c = a.elements,\n                d = this.elements;\n            d[0] = c[10] * c[5] - c[6] * c[9];\n            d[1] = -c[10] * c[1] + c[2] * c[9];\n            d[2] = c[6] * c[1] - c[2] * c[5];\n            d[3] = -c[10] * c[4] + c[6] * c[8];\n            d[4] = c[10] * c[0] - c[2] * c[8];\n            d[5] = -c[6] * c[0] + c[2] * c[4];\n            d[6] = c[9] * c[4] - c[5] * c[8];\n            d[7] = -c[9] * c[0] + c[1] * c[8];\n            d[8] = c[5] * c[0] - c[1] * c[4];\n            c = c[0] * d[0] + c[1] * d[3] + c[2] * d[6];\n            if (0 === c) {\n                if (b) throw Error(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");\n                console.warn(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");\n                this.identity();\n                return this\n            }\n            this.multiplyScalar(1 /\n                c);\n            return this\n        },\n        transpose: function() {\n            var a, b = this.elements;\n            a = b[1];\n            b[1] = b[3];\n            b[3] = a;\n            a = b[2];\n            b[2] = b[6];\n            b[6] = a;\n            a = b[5];\n            b[5] = b[7];\n            b[7] = a;\n            return this\n        },\n        getNormalMatrix: function(a) {\n            this.getInverse(a).transpose();\n            return this\n        },\n        transposeIntoArray: function(a) {\n            var b = this.elements;\n            a[0] = b[0];\n            a[1] = b[3];\n            a[2] = b[6];\n            a[3] = b[1];\n            a[4] = b[4];\n            a[5] = b[7];\n            a[6] = b[2];\n            a[7] = b[5];\n            a[8] = b[8];\n            return this\n        },\n        fromArray: function(a) {\n            this.elements.set(a);\n            return this\n        },\n        toArray: function() {\n            var a = this.elements;\n            return [a[0], a[1], a[2], a[3], a[4], a[5],\n                a[6], a[7], a[8]\n            ]\n        },\n        clone: function() {\n            var a = this.elements;\n            return new THREE.Matrix3(a[0], a[3], a[6], a[1], a[4], a[7], a[2], a[5], a[8])\n        }\n    };\n    THREE.Matrix4 = function(a, b, c, d, e, f, g, h, k, l, n, m, q, r, t, u) {\n        var p = this.elements = new Float32Array(16);\n        p[0] = void 0 !== a ? a : 1;\n        p[4] = b || 0;\n        p[8] = c || 0;\n        p[12] = d || 0;\n        p[1] = e || 0;\n        p[5] = void 0 !== f ? f : 1;\n        p[9] = g || 0;\n        p[13] = h || 0;\n        p[2] = k || 0;\n        p[6] = l || 0;\n        p[10] = void 0 !== n ? n : 1;\n        p[14] = m || 0;\n        p[3] = q || 0;\n        p[7] = r || 0;\n        p[11] = t || 0;\n        p[15] = void 0 !== u ? u : 1\n    };\n    THREE.Matrix4.prototype = {\n        constructor: THREE.Matrix4,\n        set: function(a, b, c, d, e, f, g, h, k, l, n, m, q, r, t, u) {\n            var p = this.elements;\n            p[0] = a;\n            p[4] = b;\n            p[8] = c;\n            p[12] = d;\n            p[1] = e;\n            p[5] = f;\n            p[9] = g;\n            p[13] = h;\n            p[2] = k;\n            p[6] = l;\n            p[10] = n;\n            p[14] = m;\n            p[3] = q;\n            p[7] = r;\n            p[11] = t;\n            p[15] = u;\n            return this\n        },\n        identity: function() {\n            this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n            return this\n        },\n        copy: function(a) {\n            this.elements.set(a.elements);\n            return this\n        },\n        extractPosition: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().\");\n            return this.copyPosition(a)\n        },\n        copyPosition: function(a) {\n            var b = this.elements;\n            a = a.elements;\n            b[12] = a[12];\n            b[13] = a[13];\n            b[14] = a[14];\n            return this\n        },\n        extractRotation: function() {\n            var a = new THREE.Vector3;\n            return function(b) {\n                var c = this.elements;\n                b = b.elements;\n                var d = 1 / a.set(b[0], b[1], b[2]).length(),\n                    e = 1 / a.set(b[4], b[5], b[6]).length(),\n                    f = 1 / a.set(b[8], b[9], b[10]).length();\n                c[0] = b[0] * d;\n                c[1] = b[1] * d;\n                c[2] = b[2] * d;\n                c[4] = b[4] * e;\n                c[5] = b[5] * e;\n                c[6] = b[6] * e;\n                c[8] = b[8] * f;\n                c[9] = b[9] * f;\n                c[10] = b[10] * f;\n                return this\n            }\n        }(),\n        makeRotationFromEuler: function(a) {\n            !1 ===\n                a instanceof THREE.Euler && console.error(\"ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.\");\n            var b = this.elements,\n                c = a.x,\n                d = a.y,\n                e = a.z,\n                f = Math.cos(c),\n                c = Math.sin(c),\n                g = Math.cos(d),\n                d = Math.sin(d),\n                h = Math.cos(e),\n                e = Math.sin(e);\n            if (\"XYZ\" === a.order) {\n                a = f * h;\n                var k = f * e,\n                    l = c * h,\n                    n = c * e;\n                b[0] = g * h;\n                b[4] = -g * e;\n                b[8] = d;\n                b[1] = k + l * d;\n                b[5] = a - n * d;\n                b[9] = -c * g;\n                b[2] = n - a * d;\n                b[6] = l + k * d;\n                b[10] = f * g\n            } else \"YXZ\" === a.order ? (a = g * h, k = g * e, l = d * h, n = d * e, b[0] = a + n * c, b[4] = l * c - k, b[8] =\n                f * d, b[1] = f * e, b[5] = f * h, b[9] = -c, b[2] = k * c - l, b[6] = n + a * c, b[10] = f * g) : \"ZXY\" === a.order ? (a = g * h, k = g * e, l = d * h, n = d * e, b[0] = a - n * c, b[4] = -f * e, b[8] = l + k * c, b[1] = k + l * c, b[5] = f * h, b[9] = n - a * c, b[2] = -f * d, b[6] = c, b[10] = f * g) : \"ZYX\" === a.order ? (a = f * h, k = f * e, l = c * h, n = c * e, b[0] = g * h, b[4] = l * d - k, b[8] = a * d + n, b[1] = g * e, b[5] = n * d + a, b[9] = k * d - l, b[2] = -d, b[6] = c * g, b[10] = f * g) : \"YZX\" === a.order ? (a = f * g, k = f * d, l = c * g, n = c * d, b[0] = g * h, b[4] = n - a * e, b[8] = l * e + k, b[1] = e, b[5] = f * h, b[9] = -c * h, b[2] = -d * h, b[6] = k * e + l, b[10] = a - n * e) : \"XZY\" === a.order && (a = f * g, k = f * d, l = c * g, n = c * d, b[0] =\n                g * h, b[4] = -e, b[8] = d * h, b[1] = a * e + n, b[5] = f * h, b[9] = k * e - l, b[2] = l * e - k, b[6] = c * h, b[10] = n * e + a);\n            b[3] = 0;\n            b[7] = 0;\n            b[11] = 0;\n            b[12] = 0;\n            b[13] = 0;\n            b[14] = 0;\n            b[15] = 1;\n            return this\n        },\n        setRotationFromQuaternion: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.\");\n            return this.makeRotationFromQuaternion(a)\n        },\n        makeRotationFromQuaternion: function(a) {\n            var b = this.elements,\n                c = a.x,\n                d = a.y,\n                e = a.z,\n                f = a.w,\n                g = c + c,\n                h = d + d,\n                k = e + e;\n            a = c * g;\n            var l = c *\n                h,\n                c = c * k,\n                n = d * h,\n                d = d * k,\n                e = e * k,\n                g = f * g,\n                h = f * h,\n                f = f * k;\n            b[0] = 1 - (n + e);\n            b[4] = l - f;\n            b[8] = c + h;\n            b[1] = l + f;\n            b[5] = 1 - (a + e);\n            b[9] = d - g;\n            b[2] = c - h;\n            b[6] = d + g;\n            b[10] = 1 - (a + n);\n            b[3] = 0;\n            b[7] = 0;\n            b[11] = 0;\n            b[12] = 0;\n            b[13] = 0;\n            b[14] = 0;\n            b[15] = 1;\n            return this\n        },\n        lookAt: function() {\n            var a = new THREE.Vector3,\n                b = new THREE.Vector3,\n                c = new THREE.Vector3;\n            return function(d, e, f) {\n                var g = this.elements;\n                c.subVectors(d, e).normalize();\n                0 === c.length() && (c.z = 1);\n                a.crossVectors(f, c).normalize();\n                0 === a.length() && (c.x += 1E-4, a.crossVectors(f, c).normalize());\n                b.crossVectors(c, a);\n                g[0] =\n                    a.x;\n                g[4] = b.x;\n                g[8] = c.x;\n                g[1] = a.y;\n                g[5] = b.y;\n                g[9] = c.y;\n                g[2] = a.z;\n                g[6] = b.z;\n                g[10] = c.z;\n                return this\n            }\n        }(),\n        multiply: function(a, b) {\n            return void 0 !== b ? (console.warn(\"DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"), this.multiplyMatrices(a, b)) : this.multiplyMatrices(this, a)\n        },\n        multiplyMatrices: function(a, b) {\n            var c = a.elements,\n                d = b.elements,\n                e = this.elements,\n                f = c[0],\n                g = c[4],\n                h = c[8],\n                k = c[12],\n                l = c[1],\n                n = c[5],\n                m = c[9],\n                q = c[13],\n                r = c[2],\n                t = c[6],\n                u = c[10],\n                p = c[14],\n                s = c[3],\n                v = c[7],\n                M = c[11],\n                c = c[15],\n                A = d[0],\n                x = d[4],\n                w = d[8],\n                C = d[12],\n                E = d[1],\n                N = d[5],\n                I = d[9],\n                F = d[13],\n                P = d[2],\n                H = d[6],\n                J = d[10],\n                K = d[14],\n                D = d[3],\n                y = d[7],\n                Q = d[11],\n                d = d[15];\n            e[0] = f * A + g * E + h * P + k * D;\n            e[4] = f * x + g * N + h * H + k * y;\n            e[8] = f * w + g * I + h * J + k * Q;\n            e[12] = f * C + g * F + h * K + k * d;\n            e[1] = l * A + n * E + m * P + q * D;\n            e[5] = l * x + n * N + m * H + q * y;\n            e[9] = l * w + n * I + m * J + q * Q;\n            e[13] = l * C + n * F + m * K + q * d;\n            e[2] = r * A + t * E + u * P + p * D;\n            e[6] = r * x + t * N + u * H + p * y;\n            e[10] = r * w + t * I + u * J + p * Q;\n            e[14] = r * C + t * F + u * K + p * d;\n            e[3] = s * A + v * E + M * P + c * D;\n            e[7] = s * x + v * N + M * H + c * y;\n            e[11] = s * w + v * I + M * J + c * Q;\n            e[15] = s * C + v * F + M * K + c * d;\n            return this\n        },\n        multiplyToArray: function(a,\n            b, c) {\n            var d = this.elements;\n            this.multiplyMatrices(a, b);\n            c[0] = d[0];\n            c[1] = d[1];\n            c[2] = d[2];\n            c[3] = d[3];\n            c[4] = d[4];\n            c[5] = d[5];\n            c[6] = d[6];\n            c[7] = d[7];\n            c[8] = d[8];\n            c[9] = d[9];\n            c[10] = d[10];\n            c[11] = d[11];\n            c[12] = d[12];\n            c[13] = d[13];\n            c[14] = d[14];\n            c[15] = d[15];\n            return this\n        },\n        multiplyScalar: function(a) {\n            var b = this.elements;\n            b[0] *= a;\n            b[4] *= a;\n            b[8] *= a;\n            b[12] *= a;\n            b[1] *= a;\n            b[5] *= a;\n            b[9] *= a;\n            b[13] *= a;\n            b[2] *= a;\n            b[6] *= a;\n            b[10] *= a;\n            b[14] *= a;\n            b[3] *= a;\n            b[7] *= a;\n            b[11] *= a;\n            b[15] *= a;\n            return this\n        },\n        multiplyVector3: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\");\n            return a.applyProjection(this)\n        },\n        multiplyVector4: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\");\n            return a.applyMatrix4(this)\n        },\n        multiplyVector3Array: function() {\n            var a = new THREE.Vector3;\n            return function(b) {\n                for (var c = 0, d = b.length; c < d; c += 3) a.x = b[c], a.y = b[c + 1], a.z = b[c + 2], a.applyProjection(this), b[c] = a.x, b[c + 1] = a.y, b[c + 2] = a.z;\n                return b\n            }\n        }(),\n        rotateAxis: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\");\n            a.transformDirection(this)\n        },\n        crossVector: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\");\n            return a.applyMatrix4(this)\n        },\n        determinant: function() {\n            var a = this.elements,\n                b = a[0],\n                c = a[4],\n                d = a[8],\n                e = a[12],\n                f = a[1],\n                g = a[5],\n                h = a[9],\n                k = a[13],\n                l = a[2],\n                n = a[6],\n                m = a[10],\n                q = a[14];\n            return a[3] * (+e * h * n - d * k * n - e * g * m + c * k * m + d * g * q - c * h * q) + a[7] * (+b * h * q - b * k * m + e * f * m - d * f * q + d * k * l - e * h * l) + a[11] * (+b * k * n - b * g * q - e * f * n + c * f * q + e * g * l - c * k * l) + a[15] * (-d * g * l - b * h * n + b * g * m + d * f * n - c * f *\n                m + c * h * l)\n        },\n        transpose: function() {\n            var a = this.elements,\n                b;\n            b = a[1];\n            a[1] = a[4];\n            a[4] = b;\n            b = a[2];\n            a[2] = a[8];\n            a[8] = b;\n            b = a[6];\n            a[6] = a[9];\n            a[9] = b;\n            b = a[3];\n            a[3] = a[12];\n            a[12] = b;\n            b = a[7];\n            a[7] = a[13];\n            a[13] = b;\n            b = a[11];\n            a[11] = a[14];\n            a[14] = b;\n            return this\n        },\n        flattenToArray: function(a) {\n            var b = this.elements;\n            a[0] = b[0];\n            a[1] = b[1];\n            a[2] = b[2];\n            a[3] = b[3];\n            a[4] = b[4];\n            a[5] = b[5];\n            a[6] = b[6];\n            a[7] = b[7];\n            a[8] = b[8];\n            a[9] = b[9];\n            a[10] = b[10];\n            a[11] = b[11];\n            a[12] = b[12];\n            a[13] = b[13];\n            a[14] = b[14];\n            a[15] = b[15];\n            return a\n        },\n        flattenToArrayOffset: function(a, b) {\n            var c = this.elements;\n            a[b] = c[0];\n            a[b + 1] = c[1];\n            a[b + 2] = c[2];\n            a[b + 3] = c[3];\n            a[b + 4] = c[4];\n            a[b + 5] = c[5];\n            a[b + 6] = c[6];\n            a[b + 7] = c[7];\n            a[b + 8] = c[8];\n            a[b + 9] = c[9];\n            a[b + 10] = c[10];\n            a[b + 11] = c[11];\n            a[b + 12] = c[12];\n            a[b + 13] = c[13];\n            a[b + 14] = c[14];\n            a[b + 15] = c[15];\n            return a\n        },\n        getPosition: function() {\n            var a = new THREE.Vector3;\n            return function() {\n                console.warn(\"DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\");\n                var b = this.elements;\n                return a.set(b[12], b[13], b[14])\n            }\n        }(),\n        setPosition: function(a) {\n            var b = this.elements;\n            b[12] = a.x;\n            b[13] = a.y;\n            b[14] = a.z;\n            return this\n        },\n        getInverse: function(a, b) {\n            var c = this.elements,\n                d = a.elements,\n                e = d[0],\n                f = d[4],\n                g = d[8],\n                h = d[12],\n                k = d[1],\n                l = d[5],\n                n = d[9],\n                m = d[13],\n                q = d[2],\n                r = d[6],\n                t = d[10],\n                u = d[14],\n                p = d[3],\n                s = d[7],\n                v = d[11],\n                d = d[15];\n            c[0] = n * u * s - m * t * s + m * r * v - l * u * v - n * r * d + l * t * d;\n            c[4] = h * t * s - g * u * s - h * r * v + f * u * v + g * r * d - f * t * d;\n            c[8] = g * m * s - h * n * s + h * l * v - f * m * v - g * l * d + f * n * d;\n            c[12] = h * n * r - g * m * r - h * l * t + f * m * t + g * l * u - f * n * u;\n            c[1] = m * t * p - n * u * p - m * q * v + k * u * v + n * q * d - k * t * d;\n            c[5] = g * u * p - h * t * p + h * q * v - e * u * v - g * q * d + e * t * d;\n            c[9] = h * n * p - g * m * p - h * k * v + e * m * v + g * k * d -\n                e * n * d;\n            c[13] = g * m * q - h * n * q + h * k * t - e * m * t - g * k * u + e * n * u;\n            c[2] = l * u * p - m * r * p + m * q * s - k * u * s - l * q * d + k * r * d;\n            c[6] = h * r * p - f * u * p - h * q * s + e * u * s + f * q * d - e * r * d;\n            c[10] = f * m * p - h * l * p + h * k * s - e * m * s - f * k * d + e * l * d;\n            c[14] = h * l * q - f * m * q - h * k * r + e * m * r + f * k * u - e * l * u;\n            c[3] = n * r * p - l * t * p - n * q * s + k * t * s + l * q * v - k * r * v;\n            c[7] = f * t * p - g * r * p + g * q * s - e * t * s - f * q * v + e * r * v;\n            c[11] = g * l * p - f * n * p - g * k * s + e * n * s + f * k * v - e * l * v;\n            c[15] = f * n * q - g * l * q + g * k * r - e * n * r - f * k * t + e * l * t;\n            c = e * c[0] + k * c[4] + q * c[8] + p * c[12];\n            if (0 == c) {\n                if (b) throw Error(\"Matrix4.getInverse(): can't invert matrix, determinant is 0\");\n                console.warn(\"Matrix4.getInverse(): can't invert matrix, determinant is 0\");\n                this.identity();\n                return this\n            }\n            this.multiplyScalar(1 / c);\n            return this\n        },\n        translate: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .translate() has been removed.\")\n        },\n        rotateX: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .rotateX() has been removed.\")\n        },\n        rotateY: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .rotateY() has been removed.\")\n        },\n        rotateZ: function(a) {\n            console.warn(\"DEPRECATED: Matrix4's .rotateZ() has been removed.\")\n        },\n        rotateByAxis: function(a, b) {\n            console.warn(\"DEPRECATED: Matrix4's .rotateByAxis() has been removed.\")\n        },\n        scale: function(a) {\n            var b = this.elements,\n                c = a.x,\n                d = a.y;\n            a = a.z;\n            b[0] *= c;\n            b[4] *= d;\n            b[8] *= a;\n            b[1] *= c;\n            b[5] *= d;\n            b[9] *= a;\n            b[2] *= c;\n            b[6] *= d;\n            b[10] *= a;\n            b[3] *= c;\n            b[7] *= d;\n            b[11] *= a;\n            return this\n        },\n        getMaxScaleOnAxis: function() {\n            var a = this.elements;\n            return Math.sqrt(Math.max(a[0] * a[0] + a[1] * a[1] + a[2] * a[2], Math.max(a[4] * a[4] + a[5] * a[5] + a[6] * a[6], a[8] * a[8] + a[9] * a[9] + a[10] * a[10])))\n        },\n        makeTranslation: function(a, b, c) {\n            this.set(1, 0, 0, a, 0, 1, 0, b, 0, 0, 1, c, 0, 0, 0, 1);\n            return this\n        },\n        makeRotationX: function(a) {\n            var b = Math.cos(a);\n            a = Math.sin(a);\n            this.set(1,\n                0, 0, 0, 0, b, -a, 0, 0, a, b, 0, 0, 0, 0, 1);\n            return this\n        },\n        makeRotationY: function(a) {\n            var b = Math.cos(a);\n            a = Math.sin(a);\n            this.set(b, 0, a, 0, 0, 1, 0, 0, -a, 0, b, 0, 0, 0, 0, 1);\n            return this\n        },\n        makeRotationZ: function(a) {\n            var b = Math.cos(a);\n            a = Math.sin(a);\n            this.set(b, -a, 0, 0, a, b, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n            return this\n        },\n        makeRotationAxis: function(a, b) {\n            var c = Math.cos(b),\n                d = Math.sin(b),\n                e = 1 - c,\n                f = a.x,\n                g = a.y,\n                h = a.z,\n                k = e * f,\n                l = e * g;\n            this.set(k * f + c, k * g - d * h, k * h + d * g, 0, k * g + d * h, l * g + c, l * h - d * f, 0, k * h - d * g, l * h + d * f, e * h * h + c, 0, 0, 0, 0, 1);\n            return this\n        },\n        makeScale: function(a, b, c) {\n            this.set(a,\n                0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, 0, 0, 0, 1);\n            return this\n        },\n        compose: function(a, b, c) {\n            this.makeRotationFromQuaternion(b);\n            this.scale(c);\n            this.setPosition(a);\n            return this\n        },\n        decompose: function() {\n            var a = new THREE.Vector3,\n                b = new THREE.Matrix4;\n            return function(c, d, e) {\n                var f = this.elements,\n                    g = a.set(f[0], f[1], f[2]).length(),\n                    h = a.set(f[4], f[5], f[6]).length(),\n                    k = a.set(f[8], f[9], f[10]).length();\n                0 > this.determinant() && (g = -g);\n                c.x = f[12];\n                c.y = f[13];\n                c.z = f[14];\n                b.elements.set(this.elements);\n                c = 1 / g;\n                var f = 1 / h,\n                    l = 1 / k;\n                b.elements[0] *= c;\n                b.elements[1] *=\n                    c;\n                b.elements[2] *= c;\n                b.elements[4] *= f;\n                b.elements[5] *= f;\n                b.elements[6] *= f;\n                b.elements[8] *= l;\n                b.elements[9] *= l;\n                b.elements[10] *= l;\n                d.setFromRotationMatrix(b);\n                e.x = g;\n                e.y = h;\n                e.z = k;\n                return this\n            }\n        }(),\n        makeFrustum: function(a, b, c, d, e, f) {\n            var g = this.elements;\n            g[0] = 2 * e / (b - a);\n            g[4] = 0;\n            g[8] = (b + a) / (b - a);\n            g[12] = 0;\n            g[1] = 0;\n            g[5] = 2 * e / (d - c);\n            g[9] = (d + c) / (d - c);\n            g[13] = 0;\n            g[2] = 0;\n            g[6] = 0;\n            g[10] = -(f + e) / (f - e);\n            g[14] = -2 * f * e / (f - e);\n            g[3] = 0;\n            g[7] = 0;\n            g[11] = -1;\n            g[15] = 0;\n            return this\n        },\n        makePerspective: function(a, b, c, d) {\n            a = c * Math.tan(THREE.Math.degToRad(0.5 * a));\n            var e = -a;\n            return this.makeFrustum(e * b, a * b, e, a, c, d)\n        },\n        makeOrthographic: function(a, b, c, d, e, f) {\n            var g = this.elements,\n                h = b - a,\n                k = c - d,\n                l = f - e;\n            g[0] = 2 / h;\n            g[4] = 0;\n            g[8] = 0;\n            g[12] = -((b + a) / h);\n            g[1] = 0;\n            g[5] = 2 / k;\n            g[9] = 0;\n            g[13] = -((c + d) / k);\n            g[2] = 0;\n            g[6] = 0;\n            g[10] = -2 / l;\n            g[14] = -((f + e) / l);\n            g[3] = 0;\n            g[7] = 0;\n            g[11] = 0;\n            g[15] = 1;\n            return this\n        },\n        fromArray: function(a) {\n            this.elements.set(a);\n            return this\n        },\n        toArray: function() {\n            var a = this.elements;\n            return [a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]]\n        },\n        clone: function() {\n            var a =\n                this.elements;\n            return new THREE.Matrix4(a[0], a[4], a[8], a[12], a[1], a[5], a[9], a[13], a[2], a[6], a[10], a[14], a[3], a[7], a[11], a[15])\n        }\n    };\n    THREE.Object3D = function() {\n        this.id = THREE.Object3DIdCount++;\n        this.uuid = THREE.Math.generateUUID();\n        this.name = \"\";\n        this.parent = void 0;\n        this.children = [];\n        this.up = new THREE.Vector3(0, 1, 0);\n        this.position = new THREE.Vector3;\n        this._rotation = new THREE.Euler;\n        this._quaternion = new THREE.Quaternion;\n        this.scale = new THREE.Vector3(1, 1, 1);\n        this._rotation._quaternion = this.quaternion;\n        this._quaternion._euler = this.rotation;\n        this.renderDepth = null;\n        this.rotationAutoUpdate = !0;\n        this.matrix = new THREE.Matrix4;\n        this.matrixWorld = new THREE.Matrix4;\n        this.visible = this.matrixWorldNeedsUpdate = this.matrixAutoUpdate = !0;\n        this.receiveShadow = this.castShadow = !1;\n        this.frustumCulled = !0;\n        this.userData = {}\n    };\n    THREE.Object3D.prototype = {\n        constructor: THREE.Object3D,\n        get rotation() {\n            return this._rotation\n        },\n        set rotation(a) {\n            this._rotation = a;\n            this._rotation._quaternion = this._quaternion;\n            this._quaternion._euler = this._rotation;\n            this._rotation._updateQuaternion()\n        },\n        get quaternion() {\n            return this._quaternion\n        },\n        set quaternion(a) {\n            this._quaternion = a;\n            this._quaternion._euler = this._rotation;\n            this._rotation._quaternion = this._quaternion;\n            this._quaternion._updateEuler()\n        },\n        get eulerOrder() {\n            console.warn(\"DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.\");\n            return this.rotation.order\n        },\n        set eulerOrder(a) {\n            console.warn(\"DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.\");\n            this.rotation.order = a\n        },\n        get useQuaternion() {\n            console.warn(\"DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.\")\n        },\n        set useQuaternion(a) {\n            console.warn(\"DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.\")\n        },\n        applyMatrix: function(a) {\n            this.matrix.multiplyMatrices(a, this.matrix);\n            this.matrix.decompose(this.position, this.quaternion, this.scale)\n        },\n        setRotationFromAxisAngle: function(a, b) {\n            this.quaternion.setFromAxisAngle(a, b)\n        },\n        setRotationFromEuler: function(a) {\n            this.quaternion.setFromEuler(a, !0)\n        },\n        setRotationFromMatrix: function(a) {\n            this.quaternion.setFromRotationMatrix(a)\n        },\n        setRotationFromQuaternion: function(a) {\n            this.quaternion.copy(a)\n        },\n        rotateOnAxis: function() {\n            var a = new THREE.Quaternion;\n            return function(b, c) {\n                a.setFromAxisAngle(b, c);\n                this.quaternion.multiply(a);\n                return this\n            }\n        }(),\n        rotateX: function() {\n            var a =\n                new THREE.Vector3(1, 0, 0);\n            return function(b) {\n                return this.rotateOnAxis(a, b)\n            }\n        }(),\n        rotateY: function() {\n            var a = new THREE.Vector3(0, 1, 0);\n            return function(b) {\n                return this.rotateOnAxis(a, b)\n            }\n        }(),\n        rotateZ: function() {\n            var a = new THREE.Vector3(0, 0, 1);\n            return function(b) {\n                return this.rotateOnAxis(a, b)\n            }\n        }(),\n        translateOnAxis: function() {\n            var a = new THREE.Vector3;\n            return function(b, c) {\n                a.copy(b);\n                a.applyQuaternion(this.quaternion);\n                this.position.add(a.multiplyScalar(c));\n                return this\n            }\n        }(),\n        translate: function(a, b) {\n            console.warn(\"DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.\");\n            return this.translateOnAxis(b, a)\n        },\n        translateX: function() {\n            var a = new THREE.Vector3(1, 0, 0);\n            return function(b) {\n                return this.translateOnAxis(a, b)\n            }\n        }(),\n        translateY: function() {\n            var a = new THREE.Vector3(0, 1, 0);\n            return function(b) {\n                return this.translateOnAxis(a, b)\n            }\n        }(),\n        translateZ: function() {\n            var a = new THREE.Vector3(0, 0, 1);\n            return function(b) {\n                return this.translateOnAxis(a, b)\n            }\n        }(),\n        localToWorld: function(a) {\n            return a.applyMatrix4(this.matrixWorld)\n        },\n        worldToLocal: function() {\n            var a = new THREE.Matrix4;\n            return function(b) {\n                return b.applyMatrix4(a.getInverse(this.matrixWorld))\n            }\n        }(),\n        lookAt: function() {\n            var a = new THREE.Matrix4;\n            return function(b) {\n                a.lookAt(b, this.position, this.up);\n                this.quaternion.setFromRotationMatrix(a)\n            }\n        }(),\n        add: function(a) {\n            if (a === this) console.warn(\"THREE.Object3D.add: An object can't be added as a child of itself.\");\n            else if (a instanceof THREE.Object3D) {\n                void 0 !== a.parent && a.parent.remove(a);\n                a.parent = this;\n                a.dispatchEvent({\n                    type: \"added\"\n                });\n                this.children.push(a);\n                for (var b = this; void 0 !== b.parent;) b = b.parent;\n                void 0 !== b && b instanceof THREE.Scene && b.__addObject(a)\n            }\n        },\n        remove: function(a) {\n            var b =\n                this.children.indexOf(a);\n            if (-1 !== b) {\n                a.parent = void 0;\n                a.dispatchEvent({\n                    type: \"removed\"\n                });\n                this.children.splice(b, 1);\n                for (b = this; void 0 !== b.parent;) b = b.parent;\n                void 0 !== b && b instanceof THREE.Scene && b.__removeObject(a)\n            }\n        },\n        traverse: function(a) {\n            a(this);\n            for (var b = 0, c = this.children.length; b < c; b++) this.children[b].traverse(a)\n        },\n        getObjectById: function(a, b) {\n            for (var c = 0, d = this.children.length; c < d; c++) {\n                var e = this.children[c];\n                if (e.id === a || !0 === b && (e = e.getObjectById(a, b), void 0 !== e)) return e\n            }\n        },\n        getObjectByName: function(a,\n            b) {\n            for (var c = 0, d = this.children.length; c < d; c++) {\n                var e = this.children[c];\n                if (e.name === a || !0 === b && (e = e.getObjectByName(a, b), void 0 !== e)) return e\n            }\n        },\n        getChildByName: function(a, b) {\n            console.warn(\"DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().\");\n            return this.getObjectByName(a, b)\n        },\n        getDescendants: function(a) {\n            void 0 === a && (a = []);\n            Array.prototype.push.apply(a, this.children);\n            for (var b = 0, c = this.children.length; b < c; b++) this.children[b].getDescendants(a);\n            return a\n        },\n        updateMatrix: function() {\n            this.matrix.compose(this.position,\n                this.quaternion, this.scale);\n            this.matrixWorldNeedsUpdate = !0\n        },\n        updateMatrixWorld: function(a) {\n            !0 === this.matrixAutoUpdate && this.updateMatrix();\n            if (!0 === this.matrixWorldNeedsUpdate || !0 === a) void 0 === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, a = !0;\n            for (var b = 0, c = this.children.length; b < c; b++) this.children[b].updateMatrixWorld(a)\n        },\n        clone: function(a, b) {\n            void 0 === a && (a = new THREE.Object3D);\n            void 0 === b && (b = !0);\n            a.name = this.name;\n            a.up.copy(this.up);\n            a.position.copy(this.position);\n            a.quaternion.copy(this.quaternion);\n            a.scale.copy(this.scale);\n            a.renderDepth = this.renderDepth;\n            a.rotationAutoUpdate = this.rotationAutoUpdate;\n            a.matrix.copy(this.matrix);\n            a.matrixWorld.copy(this.matrixWorld);\n            a.matrixAutoUpdate = this.matrixAutoUpdate;\n            a.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\n            a.visible = this.visible;\n            a.castShadow = this.castShadow;\n            a.receiveShadow = this.receiveShadow;\n            a.frustumCulled = this.frustumCulled;\n            a.userData = JSON.parse(JSON.stringify(this.userData));\n            if (!0 === b)\n                for (var c = 0; c < this.children.length; c++) a.add(this.children[c].clone());\n            return a\n        }\n    };\n    THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);\n    THREE.Object3DIdCount = 0;\n    THREE.Camera = function() {\n        THREE.Object3D.call(this);\n        this.matrixWorldInverse = new THREE.Matrix4;\n        this.projectionMatrix = new THREE.Matrix4\n    };\n    THREE.Camera.prototype = Object.create(THREE.Object3D.prototype);\n    THREE.Camera.prototype.lookAt = function() {\n        var a = new THREE.Matrix4;\n        return function(b) {\n            a.lookAt(this.position, b, this.up);\n            this.quaternion.setFromRotationMatrix(a)\n        }\n    }();\n    THREE.Camera.prototype.clone = function(a) {\n        void 0 === a && (a = new THREE.Camera);\n        THREE.Object3D.prototype.clone.call(this, a);\n        a.matrixWorldInverse.copy(this.matrixWorldInverse);\n        a.projectionMatrix.copy(this.projectionMatrix);\n        return a\n    };\n    THREE.PerspectiveCamera = function(a, b, c, d) {\n        THREE.Camera.call(this);\n        this.fov = void 0 !== a ? a : 50;\n        this.aspect = void 0 !== b ? b : 1;\n        this.near = void 0 !== c ? c : 0.1;\n        this.far = void 0 !== d ? d : 2E3;\n        this.updateProjectionMatrix()\n    };\n    THREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype);\n    THREE.PerspectiveCamera.prototype.setLens = function(a, b) {\n        void 0 === b && (b = 24);\n        this.fov = 2 * THREE.Math.radToDeg(Math.atan(b / (2 * a)));\n        this.updateProjectionMatrix()\n    };\n    THREE.PerspectiveCamera.prototype.setViewOffset = function(a, b, c, d, e, f) {\n        this.fullWidth = a;\n        this.fullHeight = b;\n        this.x = c;\n        this.y = d;\n        this.width = e;\n        this.height = f;\n        this.updateProjectionMatrix()\n    };\n    THREE.PerspectiveCamera.prototype.updateProjectionMatrix = function() {\n        if (this.fullWidth) {\n            var a = this.fullWidth / this.fullHeight,\n                b = Math.tan(THREE.Math.degToRad(0.5 * this.fov)) * this.near,\n                c = -b,\n                d = a * c,\n                a = Math.abs(a * b - d),\n                c = Math.abs(b - c);\n            this.projectionMatrix.makeFrustum(d + this.x * a / this.fullWidth, d + (this.x + this.width) * a / this.fullWidth, b - (this.y + this.height) * c / this.fullHeight, b - this.y * c / this.fullHeight, this.near, this.far)\n        } else this.projectionMatrix.makePerspective(this.fov, this.aspect, this.near, this.far)\n    };\n    THREE.PerspectiveCamera.prototype.clone = function() {\n        var a = new THREE.PerspectiveCamera;\n        THREE.Camera.prototype.clone.call(this, a);\n        a.fov = this.fov;\n        a.aspect = this.aspect;\n        a.near = this.near;\n        a.far = this.far;\n        return a\n    };\n    THREE.Ray = function(a, b) {\n        this.origin = void 0 !== a ? a : new THREE.Vector3;\n        this.direction = void 0 !== b ? b : new THREE.Vector3\n    };\n    THREE.Ray.prototype = {\n        constructor: THREE.Ray,\n        set: function(a, b) {\n            this.origin.copy(a);\n            this.direction.copy(b);\n            return this\n        },\n        copy: function(a) {\n            this.origin.copy(a.origin);\n            this.direction.copy(a.direction);\n            return this\n        },\n        at: function(a, b) {\n            return (b || new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)\n        },\n        recast: function() {\n            var a = new THREE.Vector3;\n            return function(b) {\n                this.origin.copy(this.at(b, a));\n                return this\n            }\n        }(),\n        closestPointToPoint: function(a, b) {\n            var c = b || new THREE.Vector3;\n            c.subVectors(a, this.origin);\n            var d = c.dot(this.direction);\n            return 0 > d ? c.copy(this.origin) : c.copy(this.direction).multiplyScalar(d).add(this.origin)\n        },\n        distanceToPoint: function() {\n            var a = new THREE.Vector3;\n            return function(b) {\n                var c = a.subVectors(b, this.origin).dot(this.direction);\n                if (0 > c) return this.origin.distanceTo(b);\n                a.copy(this.direction).multiplyScalar(c).add(this.origin);\n                return a.distanceTo(b)\n            }\n        }(),\n        distanceSqToSegment: function(a, b, c, d) {\n            var e = a.clone().add(b).multiplyScalar(0.5),\n                f = b.clone().sub(a).normalize(),\n                g = 0.5 * a.distanceTo(b),\n                h = this.origin.clone().sub(e);\n            a = -this.direction.dot(f);\n            b = h.dot(this.direction);\n            var k = -h.dot(f),\n                l = h.lengthSq(),\n                n = Math.abs(1 - a * a),\n                m, q;\n            0 <= n ? (h = a * k - b, m = a * b - k, q = g * n, 0 <= h ? m >= -q ? m <= q ? (g = 1 / n, h *= g, m *= g, a = h * (h + a * m + 2 * b) + m * (a * h + m + 2 * k) + l) : (m = g, h = Math.max(0, -(a * m + b)), a = -h * h + m * (m + 2 * k) + l) : (m = -g, h = Math.max(0, -(a * m + b)), a = -h * h + m * (m + 2 * k) + l) : m <= -q ? (h = Math.max(0, -(-a * g + b)), m = 0 < h ? -g : Math.min(Math.max(-g, -k), g), a = -h * h + m * (m + 2 * k) + l) : m <= q ? (h = 0, m = Math.min(Math.max(-g, -k), g), a = m * (m + 2 * k) + l) : (h = Math.max(0, -(a * g + b)), m = 0 < h ? g : Math.min(Math.max(-g, -k), g), a = -h * h + m * (m + 2 * k) + l)) : (m = 0 < a ? -g : g, h = Math.max(0, -(a * m + b)), a = -h * h + m * (m + 2 * k) + l);\n            c && c.copy(this.direction.clone().multiplyScalar(h).add(this.origin));\n            d && d.copy(f.clone().multiplyScalar(m).add(e));\n            return a\n        },\n        isIntersectionSphere: function(a) {\n            return this.distanceToPoint(a.center) <= a.radius\n        },\n        isIntersectionPlane: function(a) {\n            var b = a.distanceToPoint(this.origin);\n            return 0 === b || 0 > a.normal.dot(this.direction) * b ? !0 : !1\n        },\n        distanceToPlane: function(a) {\n            var b = a.normal.dot(this.direction);\n            if (0 == b) return 0 == a.distanceToPoint(this.origin) ?\n                0 : null;\n            a = -(this.origin.dot(a.normal) + a.constant) / b;\n            return 0 <= a ? a : null\n        },\n        intersectPlane: function(a, b) {\n            var c = this.distanceToPlane(a);\n            return null === c ? null : this.at(c, b)\n        },\n        isIntersectionBox: function() {\n            var a = new THREE.Vector3;\n            return function(b) {\n                return null !== this.intersectBox(b, a)\n            }\n        }(),\n        intersectBox: function(a, b) {\n            var c, d, e, f, g;\n            d = 1 / this.direction.x;\n            f = 1 / this.direction.y;\n            g = 1 / this.direction.z;\n            var h = this.origin;\n            0 <= d ? (c = (a.min.x - h.x) * d, d *= a.max.x - h.x) : (c = (a.max.x - h.x) * d, d *= a.min.x - h.x);\n            0 <= f ? (e = (a.min.y - h.y) * f, f *=\n                a.max.y - h.y) : (e = (a.max.y - h.y) * f, f *= a.min.y - h.y);\n            if (c > f || e > d) return null;\n            if (e > c || c !== c) c = e;\n            if (f < d || d !== d) d = f;\n            0 <= g ? (e = (a.min.z - h.z) * g, g *= a.max.z - h.z) : (e = (a.max.z - h.z) * g, g *= a.min.z - h.z);\n            if (c > g || e > d) return null;\n            if (e > c || c !== c) c = e;\n            if (g < d || d !== d) d = g;\n            return 0 > d ? null : this.at(0 <= c ? c : d, b)\n        },\n        intersectTriangle: function() {\n            var a = new THREE.Vector3,\n                b = new THREE.Vector3,\n                c = new THREE.Vector3,\n                d = new THREE.Vector3;\n            return function(e, f, g, h, k) {\n                b.subVectors(f, e);\n                c.subVectors(g, e);\n                d.crossVectors(b, c);\n                f = this.direction.dot(d);\n                if (0 <\n                    f) {\n                    if (h) return null;\n                    h = 1\n                } else if (0 > f) h = -1, f = -f;\n                else return null;\n                a.subVectors(this.origin, e);\n                e = h * this.direction.dot(c.crossVectors(a, c));\n                if (0 > e) return null;\n                g = h * this.direction.dot(b.cross(a));\n                if (0 > g || e + g > f) return null;\n                e = -h * a.dot(d);\n                return 0 > e ? null : this.at(e / f, k)\n            }\n        }(),\n        applyMatrix4: function(a) {\n            this.direction.add(this.origin).applyMatrix4(a);\n            this.origin.applyMatrix4(a);\n            this.direction.sub(this.origin);\n            this.direction.normalize();\n            return this\n        },\n        equals: function(a) {\n            return a.origin.equals(this.origin) && a.direction.equals(this.direction)\n        },\n        clone: function() {\n            return (new THREE.Ray).copy(this)\n        }\n    };\n    THREE.Plane = function(a, b) {\n        this.normal = void 0 !== a ? a : new THREE.Vector3(1, 0, 0);\n        this.constant = void 0 !== b ? b : 0\n    };\n    THREE.Plane.prototype = {\n        constructor: THREE.Plane,\n        set: function(a, b) {\n            this.normal.copy(a);\n            this.constant = b;\n            return this\n        },\n        setComponents: function(a, b, c, d) {\n            this.normal.set(a, b, c);\n            this.constant = d;\n            return this\n        },\n        setFromNormalAndCoplanarPoint: function(a, b) {\n            this.normal.copy(a);\n            this.constant = -b.dot(this.normal);\n            return this\n        },\n        setFromCoplanarPoints: function() {\n            var a = new THREE.Vector3,\n                b = new THREE.Vector3;\n            return function(c, d, e) {\n                d = a.subVectors(e, d).cross(b.subVectors(c, d)).normalize();\n                this.setFromNormalAndCoplanarPoint(d,\n                    c);\n                return this\n            }\n        }(),\n        copy: function(a) {\n            this.normal.copy(a.normal);\n            this.constant = a.constant;\n            return this\n        },\n        normalize: function() {\n            var a = 1 / this.normal.length();\n            this.normal.multiplyScalar(a);\n            this.constant *= a;\n            return this\n        },\n        negate: function() {\n            this.constant *= -1;\n            this.normal.negate();\n            return this\n        },\n        distanceToPoint: function(a) {\n            return this.normal.dot(a) + this.constant\n        },\n        distanceToSphere: function(a) {\n            return this.distanceToPoint(a.center) - a.radius\n        },\n        projectPoint: function(a, b) {\n            return this.orthoPoint(a, b).sub(a).negate()\n        },\n        orthoPoint: function(a,\n            b) {\n            var c = this.distanceToPoint(a);\n            return (b || new THREE.Vector3).copy(this.normal).multiplyScalar(c)\n        },\n        isIntersectionLine: function(a) {\n            var b = this.distanceToPoint(a.start);\n            a = this.distanceToPoint(a.end);\n            return 0 > b && 0 < a || 0 > a && 0 < b\n        },\n        intersectLine: function() {\n            var a = new THREE.Vector3;\n            return function(b, c) {\n                var d = c || new THREE.Vector3,\n                    e = b.delta(a),\n                    f = this.normal.dot(e);\n                if (0 == f) {\n                    if (0 == this.distanceToPoint(b.start)) return d.copy(b.start)\n                } else return f = -(b.start.dot(this.normal) + this.constant) / f, 0 > f || 1 < f ? void 0 : d.copy(e).multiplyScalar(f).add(b.start)\n            }\n        }(),\n        coplanarPoint: function(a) {\n            return (a || new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)\n        },\n        applyMatrix4: function() {\n            var a = new THREE.Vector3,\n                b = new THREE.Vector3,\n                c = new THREE.Matrix3;\n            return function(d, e) {\n                var f = e || c.getNormalMatrix(d),\n                    f = a.copy(this.normal).applyMatrix3(f),\n                    g = this.coplanarPoint(b);\n                g.applyMatrix4(d);\n                this.setFromNormalAndCoplanarPoint(f, g);\n                return this\n            }\n        }(),\n        translate: function(a) {\n            this.constant -= a.dot(this.normal);\n            return this\n        },\n        equals: function(a) {\n            return a.normal.equals(this.normal) &&\n                a.constant == this.constant\n        },\n        clone: function() {\n            return (new THREE.Plane).copy(this)\n        }\n    };\n    THREE.CSS3DObject = function(a) {\n        THREE.Object3D.call(this);\n        this.element = a;\n        this.done = !1;\n        this.element.style.position = \"absolute\";\n        this.addEventListener(\"removed\", function(a) {\n            if (null !== this.element.parentNode) {\n                this.element.parentNode.removeChild(this.element);\n                for (var c = 0, d = this.children.length; c < d; c++) this.children[c].dispatchEvent(a)\n            }\n        })\n    };\n    THREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\n    THREE.CSS3DSprite = function(a) {\n        THREE.CSS3DObject.call(this, a)\n    };\n    THREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\n    THREE.CSS3DRenderer = function() {\n        var a, b, c, d, e = new THREE.Matrix4,\n            f = document.createElement(\"div\");\n        f.style.overflow = \"hidden\";\n        f.style.WebkitTransformStyle = \"preserve-3d\";\n        f.style.MozTransformStyle = \"preserve-3d\";\n        f.style.oTransformStyle = \"preserve-3d\";\n        f.style.transformStyle = \"preserve-3d\";\n        this.domElement = f;\n        var g = document.createElement(\"div\");\n        g.style.WebkitTransformStyle = \"preserve-3d\";\n        g.style.MozTransformStyle = \"preserve-3d\";\n        g.style.oTransformStyle = \"preserve-3d\";\n        g.style.transformStyle = \"preserve-3d\";\n        f.appendChild(g);\n        this.setClearColor = function() {};\n        this.setSize = function(e, h) {\n            a = e;\n            b = h;\n            c = a / 2;\n            d = b / 2;\n            f.style.width = e + \"px\";\n            f.style.height = h + \"px\";\n            g.style.width = e + \"px\";\n            g.style.height = h + \"px\"\n        };\n        var h = function(a) {\n                return 1E-6 > Math.abs(a) ? 0 : a\n            },\n            k = function() {\n                var a = new THREE.Vector3,\n                    b = new THREE.Vector3,\n                    c = new THREE.Euler,\n                    d = new THREE.Quaternion;\n                c._quaternion = d;\n                d._euler = c;\n                return function(e) {\n                    e.decompose(a, d, b);\n                    return \"translate3d(-50%,-50%,0) translate3d(\" + h(a.x) + \"px, \" + h(a.y) + \"px, \" + h(a.z) + \"px) rotateX(\" + h(c.x) + \"rad) rotateY(\" + h(c.y) +\n                        \"rad) rotateZ(\" + h(c.z) + \"rad) scale3d(\" + h(b.x) + \", \" + h(-b.y) + \", \" + h(b.z) + \")\"\n                }\n            }(),\n            l = function(a, b) {\n                if (a instanceof THREE.CSS3DObject) {\n                    var c;\n                    a instanceof THREE.CSS3DSprite ? (e.copy(b.matrixWorldInverse), e.transpose(), e.copyPosition(a.matrixWorld), e.scale(a.scale), e.elements[3] = 0, e.elements[7] = 0, e.elements[11] = 0, e.elements[15] = 1, c = k(e)) : c = k(a.matrixWorld);\n                    var d = a.element;\n                    d.style.WebkitTransformStyle = \"preserve-3d\";\n                    d.style.MozTransformStyle = \"preserve-3d\";\n                    d.style.oTransformStyle = \"preserve-3d\";\n                    d.style.transformStyle =\n                        \"preserve-3d\";\n                    d.style.WebkitTransform = c;\n                    d.style.MozTransform = c;\n                    d.style.oTransform = c;\n                    d.style.transform = c;\n                    d.parentNode !== g && g.appendChild(d)\n                }\n                c = 0;\n                for (d = a.children.length; c < d; c++) l(a.children[c], b)\n            };\n        this.render = function(a, e) {\n            var k = 0.5 / Math.tan(THREE.Math.degToRad(0.5 * e.fov)) * b;\n            f.style.WebkitPerspective = k + \"px\";\n            f.style.MozPerspective = k + \"px\";\n            f.style.oPerspective = k + \"px\";\n            f.style.perspective = k + \"px\";\n            a.updateMatrixWorld();\n            void 0 === e.parent && e.updateMatrixWorld();\n            e.matrixWorldInverse.getInverse(e.matrixWorld);\n            var k = \"translate3d(0,0,\" + k + \"px)\",\n                r;\n            r = e.matrixWorldInverse.elements;\n            r = \"matrix3d(\" + h(r[0]) + \",\" + h(-r[1]) + \",\" + h(r[2]) + \",\" + h(r[3]) + \",\" + h(r[4]) + \",\" + h(-r[5]) + \",\" + h(r[6]) + \",\" + h(r[7]) + \",\" + h(r[8]) + \",\" + h(-r[9]) + \",\" + h(r[10]) + \",\" + h(r[11]) + \",\" + h(r[12]) + \",\" + h(-r[13]) + \",\" + h(r[14]) + \",\" + h(r[15]) + \")\";\n            k = k + r + \" translate3d(\" + c + \"px,\" + d + \"px, 0)\";\n            g.style.WebkitTransform = k;\n            g.style.MozTransform = k;\n            g.style.oTransform = k;\n            g.style.transform = k;\n            l(a, e)\n        }\n    };\n    var _ = {\n        isNumeric: function(a) {\n            return !isNaN(parseFloat(a)) && isFinite(a)\n        },\n        cascade: function() {\n            var a, b = Array.prototype.slice.call(arguments);\n            for (a = 0; a < b.length; a++)\n                if (void 0 !== b[a]) return b[a];\n            return !1\n        },\n        hexToRgb: function(a) {\n            a = a.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, function(a, c, d, e) {\n                return c + c + d + d + e + e\n            });\n            return (a = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(a)) ? {\n                r: parseInt(a[1], 16),\n                g: parseInt(a[2], 16),\n                b: parseInt(a[3], 16)\n            } : null\n        }\n    };\n    ERNO.extend(Number.prototype, {\n        absolute: function() {\n            return Math.abs(this)\n        },\n        add: function() {\n            var a = this;\n            Array.prototype.slice.call(arguments).forEach(function(b) {\n                a += b\n            });\n            return a\n        },\n        arcCosine: function() {\n            return Math.acos(this)\n        },\n        arcSine: function() {\n            return Math.asin(this)\n        },\n        arcTangent: function() {\n            return Math.atan(this)\n        },\n        constrain: function(a, b) {\n            var c, d, e = this;\n            b = b || 0;\n            c = Math.max(a, b);\n            d = Math.min(a, b);\n            e = Math.min(e, c);\n            return e = Math.max(e, d)\n        },\n        cosine: function() {\n            return Math.cos(this)\n        },\n        degreesToDirection: function() {\n            var a =\n                \"N NNE NE NEE E SEE SE SSE S SSW SW SWW W NWW NW NNW N\".split(\" \");\n            return a[this.scale(0, 360, 0, a.length - 1).round()]\n        },\n        degreesToRadians: function() {\n            return this * Math.PI / 180\n        },\n        divide: function() {\n            var a = this;\n            Array.prototype.slice.call(arguments).forEach(function(b) {\n                a /= b\n            });\n            return a\n        },\n        isBetween: function(a, b) {\n            var c = Math.min(a, b),\n                d = Math.max(a, b);\n            return c <= this && this <= d\n        },\n        lerp: function(a, b) {\n            return a + (b - a) * this\n        },\n        log: function(a) {\n            return Math.log(this) / (void 0 === a ? 1 : Math.log(a))\n        },\n        log10: function() {\n            return Math.log(this) /\n                Math.LN10\n        },\n        maximum: function(a) {\n            return Math.max(this, a)\n        },\n        minimum: function(a) {\n            return Math.min(this, a)\n        },\n        modulo: function(a) {\n            return (this % a + a) % a\n        },\n        multiply: function() {\n            var a = this;\n            Array.prototype.slice.call(arguments).forEach(function(b) {\n                a *= b\n            });\n            return a\n        },\n        normalize: function(a, b) {\n            return a == b ? 1 : (this - a) / (b - a)\n        },\n        raiseTo: function(a) {\n            return Math.pow(this, a)\n        },\n        radiansToDegrees: function() {\n            return 180 * this / Math.PI\n        },\n        rand: function(a) {\n            var b;\n            return void 0 !== a ? (b = Math.min(this, a), a = Math.max(this, a), b + Math.floor(Math.random() *\n                (a - b))) : Math.floor(Math.random() * this)\n        },\n        random: function(a) {\n            var b;\n            return void 0 !== a ? (b = Math.min(this, a), a = Math.max(this, a), b + Math.random() * (a - b)) : Math.random() * this\n        },\n        remainder: function(a) {\n            return this % a\n        },\n        round: function(a) {\n            var b;\n            a = a || 0;\n            b = this * Math.pow(10, a);\n            b = Math.round(b);\n            return b /= Math.pow(10, a)\n        },\n        roundDown: function() {\n            return Math.floor(this)\n        },\n        roundUp: function() {\n            return Math.ceil(this)\n        },\n        scale: function(a, b, c, d) {\n            a = this.normalize(a, b);\n            return c == d ? d : c + a * (d - c)\n        },\n        sine: function() {\n            return Math.sin(this)\n        },\n        subtract: function() {\n            var a =\n                this;\n            Array.prototype.slice.call(arguments).forEach(function(b) {\n                a -= b\n            });\n            return a\n        },\n        tangent: function() {\n            return Math.tan(this)\n        },\n        toArray: function() {\n            return [this.valueOf()]\n        },\n        toNumber: function() {\n            return this.valueOf()\n        },\n        toPaddedString: function(a) {\n            return (\"0000000000000\" + String(this)).slice(-a)\n        },\n        toSignedString: function() {\n            var a = \"\" + this;\n            0 <= this && (a = \"+\" + a);\n            return a\n        },\n        toString: function() {\n            return \"\" + this\n        }\n    });\n    ERNO.extend(String.prototype, {\n        capitalize: function() {\n            return this.charAt(0).toUpperCase() + this.slice(1)\n        },\n        invert: function() {\n            var a = \"\",\n                b;\n            for (b = 0; b < this.length; b++) a = this.charAt(b) === this.charAt(b).toUpperCase() ? a + this.charAt(b).toLowerCase() : a + this.charAt(b).toUpperCase();\n            return a\n        },\n        justifyCenter: function(a) {\n            var b = Math.round(this.length / 2),\n                c = this.length - b,\n                d = Math.round(a / 2),\n                b = d - b;\n            a = a - d - c;\n            c = this;\n            if (0 < b)\n                for (; b--;) c = \" \" + c;\n            else 0 > b && (c = c.substr(-1 * b));\n            if (0 < a)\n                for (; a--;) c += \" \";\n            else 0 > a && (c = c.substr(0, c.length +\n                a));\n            return c\n        },\n        justifyLeft: function(a) {\n            for (var b = this; b.length < a;) b += \" \";\n            return b\n        },\n        justifyRight: function(a) {\n            for (var b = this; b.length < a;) b = \" \" + b;\n            return b\n        },\n        multiply: function(a) {\n            var b, c = \"\";\n            a = _.cascade(a, 2);\n            for (b = 0; b < a; b++) c += this;\n            return c\n        },\n        reverse: function() {\n            var a, b = \"\";\n            for (a = 0; a < this.length; a++) b = this[a] + b;\n            return b\n        },\n        size: function() {\n            return this.length\n        },\n        toEntities: function() {\n            var a, b = \"\";\n            for (a = 0; a < this.length; a++) b += \"&#\" + this.charCodeAt(a) + \";\";\n            return b\n        },\n        toCamelCase: function() {\n            var a = this.split(/\\W+|_+/),\n                b =\n                a[0],\n                c;\n            for (c = 1; c < a.length; c++) b += a[c].capitalize();\n            return b\n        },\n        directionToDegrees: function() {\n            var a = \"N NNE NE NEE E SEE SE SSE S SSW SW SWW W NWW NW NNW N\".split(\" \"),\n                b = a.indexOf(this.toUpperCase());\n            return 0 <= b ? b.scale(0, a.length - 1, 0, 360) : Number.NaN\n        },\n        toArray: function() {\n            return [this]\n        },\n        toNumber: function() {\n            return parseFloat(this)\n        },\n        toString: function() {\n            return this\n        },\n        toUnderscoreCase: function() {\n            var a = this.replace(/[A-Z]+/g, function(a) {\n                return \"_\" + a\n            });\n            \"_\" === a.charAt(0) && (a = a.substr(1));\n            return a.toLowerCase()\n        },\n        toUnicode: function() {\n            var a, b, c = \"\";\n            for (a = 0; a < this.length; a++) {\n                for (b = this.charCodeAt(a).toString(16).toUpperCase(); 4 > b.length;) b = \"0\" + b;\n                c += \"\\\\u\" + b\n            }\n            return c\n        }\n    });\n    ERNO.extend(Array.prototype, {\n        distanceTo: function(a) {\n            var b, c = 0;\n            0 < arguments.length && (a = Array.prototype.slice.call(arguments));\n            if (this.length === a.length) {\n                for (b = 0; b < this.length; b++) c += Math.pow(a[b] - this[b], 2);\n                return Math.pow(c, 0.5)\n            }\n            return null\n        },\n        first: function() {\n            return this[0]\n        },\n        last: function() {\n            return this[this.length - 1]\n        },\n        maximum: function() {\n            return Math.max.apply(null, this)\n        },\n        middle: function() {\n            return this[Math.round((this.length - 1) / 2)]\n        },\n        minimum: function() {\n            return Math.min.apply(null, this)\n        },\n        rand: function() {\n            return this[Math.floor(Math.random() *\n                this.length)]\n        },\n        random: function() {\n            return this[Math.floor(Math.random() * this.length)]\n        },\n        shuffle: function() {\n            var a = this.length,\n                b, c, d;\n            if (0 == a) return !1;\n            for (; --a;) b = Math.floor(Math.random() * (a + 1)), c = this[a], d = this[b], this[a] = d, this[b] = c;\n            return this\n        },\n        toArray: function() {\n            return this\n        },\n        toHtml: function() {\n            var a, b = \"<ul>\";\n            for (a = 0; a < this.length; a++) b = this[a] instanceof Array ? b + this[a].toHtml() : b + (\"<li>\" + this[a] + \"</li>\");\n            return b + \"</ul>\"\n        },\n        toText: function(a) {\n            var b, c, d;\n            a = _.cascade(a, 0);\n            c = \"\\n\" + \"\\t\".multiply(a);\n            d = \"\";\n            for (b =\n                0; b < this.length; b++) d = this[b] instanceof Array ? d + (c + this[b].toText(a + 1)) : d + (c + this[b]);\n            return d\n        }\n    });\n    ERNO.Color = function(a, b, c, d, e) {\n        this.name = a;\n        this.initial = b;\n        this.hex = c;\n        this.styleF = d;\n        this.styleB = e\n    };\n    var W, O, B, R, G, Y, COLOURLESS;\n    W = ERNO.WHITE = new ERNO.Color(\"white\", \"W\", \"#FFF\", \"font-weight: bold; color: #888\", \"background-color: #F3F3F3; color: rgba( 0, 0, 0, 0.5 )\");\n    O = ERNO.ORANGE = new ERNO.Color(\"orange\", \"O\", \"#F60\", \"font-weight: bold; color: #F60\", \"background-color: #F60; color: rgba( 255, 255, 255, 0.9 )\");\n    B = ERNO.BLUE = new ERNO.Color(\"blue\", \"B\", \"#00D\", \"font-weight: bold; color: #00D\", \"background-color: #00D; color: rgba( 255, 255, 255, 0.9 )\");\n    R = ERNO.RED = new ERNO.Color(\"red\", \"R\", \"#F00\", \"font-weight: bold; color: #F00\", \"background-color: #F00; color: rgba( 255, 255, 255, 0.9 )\");\n    G = ERNO.GREEN = new ERNO.Color(\"green\", \"G\", \"#0A0\", \"font-weight: bold; color: #0A0\", \"background-color: #0A0; color: rgba( 255, 255, 255, 0.9 )\");\n    Y = ERNO.YELLOW = new ERNO.Color(\"yellow\", \"Y\", \"#FE0\", \"font-weight: bold; color: #ED0\", \"background-color: #FE0; color: rgba( 0, 0, 0, 0.5 )\");\n    ERNO.COLORLESS = new ERNO.Color(\"NA\", \"X\", \"#DDD\", \"color: #EEE\", \"color: #DDD\");\n    ERNO.Direction = function(a, b, c) {\n        this.id = a;\n        this.name = b.toLowerCase();\n        this.normal = c;\n        this.initial = b.substr(0, 1).toUpperCase();\n        this.neighbors = [];\n        this.opposite = null\n    };\n    ERNO.Direction.prototype.setRelationships = function(a, b, c, d, e) {\n        this.neighbors = [a, b, c, d];\n        this.opposite = e\n    };\n    ERNO.Direction.getNameById = function(a) {\n        return \"front up right down left back\".split(\" \")[a]\n    };\n    ERNO.Direction.getIdByName = function(a) {\n        return {\n            front: 0,\n            up: 1,\n            right: 2,\n            down: 3,\n            left: 4,\n            back: 5\n        }[a]\n    };\n    ERNO.Direction.getDirectionById = function(a) {\n        return [ERNO.Direction.FRONT, ERNO.Direction.UP, ERNO.Direction.RIGHT, ERNO.Direction.DOWN, ERNO.Direction.LEFT, ERNO.Direction.BACK][a]\n    };\n    ERNO.Direction.getDirectionByInitial = function(a) {\n        return {\n            F: ERNO.Direction.FRONT,\n            U: ERNO.Direction.UP,\n            R: ERNO.Direction.RIGHT,\n            D: ERNO.Direction.DOWN,\n            L: ERNO.Direction.LEFT,\n            B: ERNO.Direction.BACK\n        }[a.toUpperCase()]\n    };\n    ERNO.Direction.getDirectionByName = function(a) {\n        return {\n            front: ERNO.Direction.FRONT,\n            up: ERNO.Direction.UP,\n            right: ERNO.Direction.RIGHT,\n            down: ERNO.Direction.DOWN,\n            left: ERNO.Direction.LEFT,\n            back: ERNO.Direction.BACK\n        }[a.toLowerCase()]\n    };\n    ERNO.Direction.getDirectionByNormal = function() {\n        var a = new THREE.Vector3;\n        return function(b) {\n            a.x = Math.round(b.x);\n            a.y = Math.round(b.y);\n            a.z = Math.round(b.z);\n            return a.equals(ERNO.Direction.FRONT.normal) ? ERNO.Direction.FRONT : a.equals(ERNO.Direction.BACK.normal) ? ERNO.Direction.BACK : a.equals(ERNO.Direction.UP.normal) ? ERNO.Direction.UP : a.equals(ERNO.Direction.DOWN.normal) ? ERNO.Direction.DOWN : a.equals(ERNO.Direction.LEFT.normal) ? ERNO.Direction.LEFT : a.equals(ERNO.Direction.RIGHT.normal) ? ERNO.Direction.RIGHT : null\n        }\n    }();\n    ERNO.Direction.prototype.getRotation = function(a, b, c) {\n        void 0 === b && (b = this.neighbors[0]);\n        if (b === this || b === this.opposite) return null;\n        c = void 0 === c ? 1 : c.modulo(4);\n        for (var d = 0; 5 > d && this.neighbors[d] !== b; d++);\n        return this.neighbors[d.add(c * a).modulo(4)]\n    };\n    ERNO.Direction.prototype.getClockwise = function(a, b) {\n        return this.getRotation(1, a, b)\n    };\n    ERNO.Direction.prototype.getAnticlockwise = function(a, b) {\n        return this.getRotation(-1, a, b)\n    };\n    ERNO.Direction.prototype.getDirection = function(a, b) {\n        return this.getRotation(1, b, a.id - 1)\n    };\n    ERNO.Direction.prototype.getUp = function(a) {\n        return this.getDirection(ERNO.Direction.UP, a)\n    };\n    ERNO.Direction.prototype.getRight = function(a) {\n        return this.getDirection(ERNO.Direction.RIGHT, a)\n    };\n    ERNO.Direction.prototype.getDown = function(a) {\n        return this.getDirection(ERNO.Direction.DOWN, a)\n    };\n    ERNO.Direction.prototype.getLeft = function(a) {\n        return this.getDirection(ERNO.Direction.LEFT, a)\n    };\n    ERNO.Direction.prototype.getOpposite = function() {\n        return this.opposite\n    };\n    ERNO.Direction.FRONT = new ERNO.Direction(0, \"front\", new THREE.Vector3(0, 0, 1));\n    ERNO.Direction.UP = new ERNO.Direction(1, \"up\", new THREE.Vector3(0, 1, 0));\n    ERNO.Direction.RIGHT = new ERNO.Direction(2, \"right\", new THREE.Vector3(1, 0, 0));\n    ERNO.Direction.DOWN = new ERNO.Direction(3, \"down\", new THREE.Vector3(0, -1, 0));\n    ERNO.Direction.LEFT = new ERNO.Direction(4, \"left\", new THREE.Vector3(-1, 0, 0));\n    ERNO.Direction.BACK = new ERNO.Direction(5, \"back\", new THREE.Vector3(0, 0, -1));\n    ERNO.Direction.FRONT.setRelationships(ERNO.Direction.UP, ERNO.Direction.RIGHT, ERNO.Direction.DOWN, ERNO.Direction.LEFT, ERNO.Direction.BACK);\n    ERNO.Direction.UP.setRelationships(ERNO.Direction.BACK, ERNO.Direction.RIGHT, ERNO.Direction.FRONT, ERNO.Direction.LEFT, ERNO.Direction.DOWN);\n    ERNO.Direction.RIGHT.setRelationships(ERNO.Direction.UP, ERNO.Direction.BACK, ERNO.Direction.DOWN, ERNO.Direction.FRONT, ERNO.Direction.LEFT);\n    ERNO.Direction.DOWN.setRelationships(ERNO.Direction.FRONT, ERNO.Direction.RIGHT, ERNO.Direction.BACK, ERNO.Direction.LEFT, ERNO.Direction.UP);\n    ERNO.Direction.LEFT.setRelationships(ERNO.Direction.UP, ERNO.Direction.FRONT, ERNO.Direction.DOWN, ERNO.Direction.BACK, ERNO.Direction.RIGHT);\n    ERNO.Direction.BACK.setRelationships(ERNO.Direction.UP, ERNO.Direction.LEFT, ERNO.Direction.DOWN, ERNO.Direction.RIGHT, ERNO.Direction.FRONT);\n    ERNO.Queue = function(a) {\n        void 0 !== a && a instanceof Function && (this.validate = a);\n        this.history = [];\n        this.useHistory = !0;\n        this.future = [];\n        this.isReady = !0;\n        this.isLooping = !1\n    };\n    ERNO.Queue.prototype.add = function() {\n        var a = Array.prototype.slice.call(arguments);\n        void 0 !== this.validate && this.validate instanceof Function && (a = this.validate(a));\n        a instanceof Array && a.forEach(function(a) {\n            this.future.push(a)\n        }.bind(this));\n        return this.future\n    };\n    ERNO.Queue.prototype.remove = function() {\n        var a = Array.prototype.slice.call(arguments);\n        a instanceof Array && a.forEach(function(a) {\n            this.future = this.future.filter(function(c) {\n                return c != a\n            })\n        }.bind(this));\n        return this.future\n    };\n    ERNO.Queue.prototype.purge = function() {\n        var a = Array.prototype.slice.call(arguments);\n        a instanceof Array && a.forEach(function(a) {\n            this.history = this.history.filter(function(c) {\n                return c != a\n            })\n        }.bind(this));\n        return this.history\n    };\n    ERNO.Queue.prototype.empty = function(a) {\n        this.future = [];\n        a && (this.history = [])\n    };\n    ERNO.Queue.prototype.do = function() {\n        if (this.future.length) {\n            var a = this.future.shift();\n            this.useHistory && this.history.push(a);\n            return a\n        }\n        this.isLooping && (this.future = this.history.slice(), this.history = [])\n    };\n    ERNO.Queue.prototype.undo = function() {\n        if (this.history.length) {\n            var a = this.history.pop();\n            this.future.unshift(a);\n            return a\n        }\n    };\n    ERNO.Queue.prototype.redo = function() {\n        return this.do()\n    };\n    ERNO.Twist = function(a, b) {\n        a && this.set(a, b)\n    };\n    ERNO.Twist.prototype.set = function(a, b) {\n        var c = {\n            X: \"Cube on X\",\n            L: \"Left face\",\n            M: \"Middle slice\",\n            R: \"Right face\",\n            Y: \"Cube on Y\",\n            U: \"Up face\",\n            E: \"Equator slice\",\n            D: \"Down face\",\n            Z: \"Cube on Z\",\n            F: \"Front face\",\n            S: \"Standing slice\",\n            B: \"Back face\"\n        }[a.toUpperCase()];\n        if (void 0 !== c) {\n            void 0 != b && 0 > b && (a = a.invert(), b = b.absolute());\n            var d = 0,\n                e = \"unwise\";\n            a === a.toUpperCase() ? (d = 1, e = \"clockwise\") : a === a.toLowerCase() && (d = -1, e = \"anticlockwise\");\n            this.command = a;\n            this.group = c;\n            this.degrees = b;\n            this.vector = d;\n            this.wise = e;\n            this.isShuffle = !1;\n            this.getInverse =\n                function() {\n                    return new ERNO.Twist(a.invert(), b)\n                }\n        } else return !1\n    };\n    ERNO.Twist.prototype.equals = function(a) {\n        return this.command === a.command && this.degrees === a.degrees\n    };\n    ERNO.Twist.prototype.copy = function(a) {\n        this.command = a.command;\n        this.group = a.group;\n        this.degrees = a.degrees;\n        this.vector = a.vector;\n        this.wise = a.wise;\n        this.isShuffle = a.isShuffle;\n        return this\n    };\n    ERNO.Twist.validate = function() {\n        var a = Array.prototype.slice.call(arguments),\n            b, c, d, e, f, g;\n        for (c = 0; c < a.length; c++)\n            if (b = a[c], d = c + 1 < a.length ? a[c + 1] : void 0, !(b instanceof ERNO.Twist))\n                if (\"string\" === typeof b)\n                    if (1 === b.length) a[c] = \"number\" === typeof d ? new ERNO.Twist(b, d) : new ERNO.Twist(b);\n                    else {\n                        if (1 < b.length) {\n                            d = /(-?\\d+|[XLMRYUEDZFSB])/gi;\n                            b = b.match(d);\n                            for (f = 0; f < b.length; f++) e = b[f], _.isNumeric(e) ? b[f] = +e : (d = b.slice(0, f), g = b.slice(f + 1), e = e.split(\"\"), b = d.concat(e, g));\n                            d = a.slice(0, c);\n                            g = a.slice(c + 1);\n                            a = d.concat(b, g);\n                            c--\n                        }\n                    } else b instanceof ERNO.Direction ? a[c] = b.initial : b instanceof Array ? (d = a.slice(0, c), g = a.slice(c + 1), a = d.concat(b, g)) : a.splice(c, 1), c--;\n        return a\n    };\n    ERNO.Cubelet = function(a, b, c) {\n        THREE.Object3D.call(this);\n        this.cube = a;\n        this.id = b || 0;\n        this.setAddress(this.id);\n        this.size = a.cubeletSize || 140;\n        a = this.addressX * (this.size + 0.1);\n        b = this.addressY * (this.size + 0.1);\n        var d = this.addressZ * (this.size + 0.1);\n        this.position.set(a, b, d);\n        this.matrixSlice = (new THREE.Matrix4).makeTranslation(a, b, d);\n        this.updateMatrix();\n        this.cube.object3D.add(this);\n        a = 0;\n        void 0 === c && (c = [W, O, , , G]);\n        this.faces = [];\n        for (b = 0; 6 > b; b++) d = c[b] || ERNO.COLORLESS, this.faces[b] = {}, this.faces[b].id = b, this.faces[b].color =\n            d, this.faces[b].normal = ERNO.Direction.getNameById(b), this.faces[b].isIntrovert = d === ERNO.COLORLESS, d !== ERNO.COLORLESS && a++;\n        this.type = [\"core\", \"center\", \"edge\", \"corner\"][a];\n        this.front = this.faces[0];\n        this.up = this.faces[1];\n        this.right = this.faces[2];\n        this.down = this.faces[3];\n        this.left = this.faces[4];\n        this.back = this.faces[5];\n        this.colors = (this.faces[0].color ? this.faces[0].color.initial : \"-\") + (this.faces[1].color ? this.faces[1].color.initial : \"-\") + (this.faces[2].color ? this.faces[2].color.initial : \"-\") + (this.faces[3].color ?\n            this.faces[3].color.initial : \"-\") + (this.faces[4].color ? this.faces[4].color.initial : \"-\") + (this.faces[5].color ? this.faces[5].color.initial : \"-\");\n        this.isStickerCubelet = this.front.color && \"white\" === this.front.color.name && \"center\" === this.type;\n        this.isTweening = !0;\n        this.isTweening = this.isEngagedZ = this.isEngagedY = this.isEngagedX = !1;\n        this.opacity = 1;\n        this.radius = 0\n    };\n    ERNO.Cubelet.prototype = Object.create(THREE.Object3D.prototype);\n    ERNO.extend(ERNO.Cubelet.prototype, {\n        setAddress: function(a) {\n            this.address = a || 0;\n            this.addressX = a.modulo(3).subtract(1);\n            this.addressY = -1 * a.modulo(9).divide(3).roundDown().subtract(1);\n            this.addressZ = -1 * a.divide(9).roundDown().subtract(1)\n        },\n        hasColor: function(a) {\n            var b, c, d = _.hexToRgb(a.hex);\n            for (a = 0; 6 > a; a++)\n                if (c = _.hexToRgb(this.faces[a].color.hex), c.r === d.r && c.g === d.g && c.b === d.b) {\n                    b = a;\n                    break\n                }\n            return void 0 !== b ? \"front up right down left back\".split(\" \")[b] : !1\n        },\n        hasColors: function() {\n            var a = this,\n                b = !0;\n            Array.prototype.slice.call(arguments).forEach(function(c) {\n                b =\n                    b && !!a.hasColor(c)\n            });\n            return b\n        },\n        getRadius: function() {\n            return this.radius\n        },\n        setRadius: function(a, b) {\n            if (!1 === this.isTweening && (a = a || 0, void 0 === this.radius && (this.radius = 0), this.radius !== a)) {\n                this.isTweening = !0;\n                var c = (this.radius - a).absolute(),\n                    d = {\n                        radius: this.radius\n                    };\n                (new TWEEN.Tween(d)).to({\n                    radius: a\n                }, c).easing(TWEEN.Easing.Quartic.Out).onUpdate(function() {\n                    this.position.set(this.addressX.multiply(this.size + d.radius) + 0.2, this.addressY.multiply(this.size + d.radius) + 0.2, this.addressZ.multiply(this.size + d.radius) +\n                        0.2);\n                    this.updateMatrix();\n                    this.matrixSlice.copy(this.matrix);\n                    this.radius = d.radius\n                }.bind(this)).onComplete(function() {\n                    this.isTweening = !1;\n                    this.position.set(this.addressX.multiply(this.size + d.radius) + 0.2, this.addressY.multiply(this.size + d.radius) + 0.2, this.addressZ.multiply(this.size + d.radius) + 0.2);\n                    this.updateMatrix();\n                    this.matrixSlice.copy(this.matrix);\n                    this.radius = d.radius;\n                    b instanceof Function && b()\n                }.bind(this)).start(this.cube.time)\n            }\n        }\n    });\n    ERNO.Group = function() {\n        this.cubelets = [];\n        this.add(Array.prototype.slice.call(arguments))\n    };\n    ERNO.extend(ERNO.Group.prototype, THREE.EventDispatcher.prototype);\n    ERNO.extend(ERNO.Group.prototype, {\n        add: function() {\n            var a = this;\n            Array.prototype.slice.call(arguments).forEach(function(b) {\n                b instanceof ERNO.Group && (b = b.cubelets);\n                b instanceof Array ? a.add.apply(a, b) : a.cubelets.push(b)\n            });\n            return this\n        },\n        remove: function(a) {\n            a instanceof ERNO.Group && (a = a.cubelets);\n            if (a instanceof Array) {\n                var b = this;\n                a.forEach(function(a) {\n                    b.remove(a)\n                })\n            }\n            for (var c = this.cubelets.length; 0 < c--;) this.cubelets[c] === a && this.cubelets.splice(c, 1);\n            return this\n        },\n        isFlagged: function(a) {\n            var b = 0;\n            this.cubelets.forEach(function(c) {\n                b +=\n                    c[a] ? 1 : 0\n            });\n            return b\n        },\n        isTweening: function() {\n            return this.isFlagged(\"isTweening\")\n        },\n        isEngagedX: function() {\n            return this.isFlagged(\"isEngagedX\")\n        },\n        isEngagedY: function() {\n            return this.isFlagged(\"isEngagedY\")\n        },\n        isEngagedZ: function() {\n            return this.isFlagged(\"isEngagedZ\")\n        },\n        isEngaged: function() {\n            return this.isEngagedX() + this.isEngagedY() + this.isEngagedZ()\n        },\n        hasProperty: function(a, b) {\n            var c = new ERNO.Group;\n            this.cubelets.forEach(function(d) {\n                d[a] === b && c.add(d)\n            });\n            return c\n        },\n        hasId: function(a) {\n            return this.hasProperty(\"id\", a)\n        },\n        hasAddress: function(a) {\n            return this.hasProperty(\"address\", a)\n        },\n        hasType: function(a) {\n            return this.hasProperty(\"type\", a)\n        },\n        hasColor: function(a) {\n            var b = new ERNO.Group;\n            this.cubelets.forEach(function(c) {\n                c.hasColor(a) && b.add(c)\n            });\n            return b\n        },\n        hasColors: function() {\n            var a = new ERNO.Group,\n                b = Array.prototype.slice.call(arguments);\n            this.cubelets.forEach(function(c) {\n                c.hasColors.apply(c, b) && a.add(c)\n            });\n            return a\n        },\n        isSolved: function(a) {\n            if (a) {\n                var b = {},\n                    c = 0;\n                a instanceof ERNO.Direction && (a = a.name);\n                this.cubelets.forEach(function(d) {\n                    d =\n                        d[a].color.name;\n                    void 0 === b[d] ? (b[d] = 1, c++) : b[d]++\n                });\n                return 1 === c ? !0 : !1\n            }\n            console.warn(\"A face [String or ERNO.Controls] argument must be specified when using ERNO.Group.isSolved().\");\n            return !1\n        },\n        show: function() {\n            this.cubelets.forEach(function(a) {\n                a.show()\n            });\n            return this\n        },\n        hide: function() {\n            this.cubelets.forEach(function(a) {\n                a.hide()\n            });\n            return this\n        },\n        showPlastics: function() {\n            this.cubelets.forEach(function(a) {\n                a.showPlastics()\n            });\n            return this\n        },\n        hidePlastics: function() {\n            this.cubelets.forEach(function(a) {\n                a.hidePlastics()\n            });\n            return this\n        },\n        showExtroverts: function() {\n            this.cubelets.forEach(function(a) {\n                a.showExtroverts()\n            });\n            return this\n        },\n        hideExtroverts: function() {\n            this.cubelets.forEach(function(a) {\n                a.hideExtroverts()\n            });\n            return this\n        },\n        showIntroverts: function(a, b) {\n            this.cubelets.forEach(function(c) {\n                c.showIntroverts(a, b)\n            });\n            return this\n        },\n        hideIntroverts: function(a, b) {\n            this.cubelets.forEach(function(c) {\n                c.hideIntroverts(a, b)\n            });\n            return this\n        },\n        showStickers: function() {\n            this.cubelets.forEach(function(a) {\n                a.showStickers()\n            });\n            return this\n        },\n        hideStickers: function() {\n            this.cubelets.forEach(function(a) {\n                a.hideStickers()\n            });\n            return this\n        },\n        showWireframes: function() {\n            this.cubelets.forEach(function(a) {\n                a.showWireframes()\n            });\n            return this\n        },\n        hideWireframes: function() {\n            this.cubelets.forEach(function(a) {\n                a.hideWireframes()\n            });\n            return this\n        },\n        showIds: function() {\n            this.cubelets.forEach(function(a) {\n                a.showIds()\n            });\n            return this\n        },\n        hideIds: function() {\n            this.cubelets.forEach(function(a) {\n                a.hideIds()\n            });\n            return this\n        },\n        showTexts: function() {\n            this.cubelets.forEach(function(a) {\n                a.showTexts()\n            });\n            return this\n        },\n        hideTexts: function() {\n            this.cubelets.forEach(function(a) {\n                a.hideTexts()\n            });\n            return this\n        },\n        getOpacity: function() {\n            var a = 0;\n            this.cubelets.forEach(function(b) {\n                a += b.getOpacity()\n            });\n            return a / this.cubelets.length\n        },\n        setOpacity: function(a, b) {\n            this.cubelets.forEach(function(c) {\n                c.setOpacity(a, b)\n            });\n            return this\n        },\n        getRadius: function() {\n            var a = 0;\n            this.cubelets.forEach(function(b) {\n                a += b.getRadius()\n            });\n            return a / this.cubelets.length\n        },\n        setRadius: function(a, b) {\n            this.cubelets.forEach(function(c) {\n                c.setRadius(a, b)\n            });\n            return this\n        }\n    });\n    ERNO.Slice = function(a, b) {\n        this.axis = new THREE.Vector3;\n        this.invertedAxis = new THREE.Vector3;\n        this.matrix = new THREE.Matrix4;\n        this.axis.rotation = 0;\n        this.indices = a;\n        this.neighbour = null;\n        this.ableToHideInternalFaces = !0;\n        this.cube = b;\n        this.getCubelet = function(c) {\n            return b.cubelets[a[c]]\n        };\n        this.rotateGroupMappingOnAxis = function() {\n            var c = new THREE.Vector3,\n                d = new THREE.Vector3(1, 1, 1),\n                e = new THREE.Vector3,\n                f = new THREE.Vector3,\n                g = new THREE.Matrix4,\n                h;\n            return function(k) {\n                k = Math.round(k / (0.25 * Math.PI)) * Math.PI * 0.25;\n                c.copy(d);\n                c.sub(this.axis);\n                var l = b.cubelets.slice();\n                g.makeRotationAxis(this.axis, -1 * k);\n                for (var n = a.length, m; 0 < n--;) m = b.cubelets[a[n]], e.set(m.addressX, m.addressY, m.addressZ), f.copy(e), e.multiply(c).applyMatrix4(g), e.x = Math.round(e.x), e.y = Math.round(e.y), e.z = Math.round(e.z), e.add(f.multiply(this.axis)), e.add(d), e.y = 2 - e.y, e.z = 2 - e.z, b.cubelets[m.address] = l[9 * e.z + 3 * e.y + e.x];\n                for (n = 0; n < b.cubelets.length; n++) b.cubelets[n].setAddress(n);\n                g.makeRotationAxis(this.axis, k);\n                this.cubelets.forEach(function(a) {\n                    h = [];\n                    a.faces.forEach(function(a,\n                        b) {\n                        e.copy(ERNO.Direction.getDirectionByName(a.normal).normal);\n                        e.applyMatrix4(g);\n                        h[ERNO.Direction.getDirectionByNormal(e).id] = a;\n                        a.normal = ERNO.Direction.getDirectionByNormal(e).name\n                    });\n                    a.faces = h.slice();\n                    a.front = a.faces[0];\n                    a.up = a.faces[1];\n                    a.right = a.faces[2];\n                    a.down = a.faces[3];\n                    a.left = a.faces[4];\n                    a.back = a.faces[5]\n                })\n            }\n        }();\n        this.map()\n    };\n    ERNO.Slice.prototype = Object.create(ERNO.Group.prototype);\n    ERNO.extend(ERNO.Slice.prototype, {get origin() {\n            return this.cube.cubelets[this.indices[4]]\n        },\n        get north() {\n            return this.cube.cubelets[this.indices[1]]\n        },\n        get northEast() {\n            return this.cube.cubelets[this.indices[2]]\n        },\n        get east() {\n            return this.cube.cubelets[this.indices[5]]\n        },\n        get southEast() {\n            return this.cube.cubelets[this.indices[8]]\n        },\n        get south() {\n            return this.cube.cubelets[this.indices[7]]\n        },\n        get southWest() {\n            return this.cube.cubelets[this.indices[6]]\n        },\n        get west() {\n            return this.cube.cubelets[this.indices[3]]\n        },\n        get northWest() {\n            return this.cube.cubelets[this.indices[0]]\n        },\n        get cubelets() {\n            for (var a = [], b = this.indices.length; 0 < b--;) a.push(this.getCubelet(b));\n            return a\n        },\n        map: function(a, b) {\n            for (var c = 0; 6 > c; c++)\n                if (this.origin.faces[c].color && this.origin.faces[c].color !== ERNO.COLORLESS) {\n                    this.color = this.origin.faces[c].color;\n                    this.face = ERNO.Direction.getNameById(c);\n                    break\n                }\n            if (void 0 === this.axis || 0 === this.axis.lengthSq()) {\n                var c = this.northEast.position.clone(),\n                    d = this.southWest.position.clone(),\n                    e = this.northWest.position.clone();\n                this.axis = (new THREE.Vector3).crossVectors(d.sub(c), e.sub(c)).normalize();\n                this.axis.rotation = 0\n            }\n            this.up = new ERNO.Group(this.northWest, this.north, this.northEast);\n            this.equator = new ERNO.Group(this.west, this.origin, this.east);\n            this.down = new ERNO.Group(this.southWest, this.south, this.southEast);\n            this.left = new ERNO.Group(this.northWest, this.west, this.southWest);\n            this.middle = new ERNO.Group(this.north, this.origin, this.south);\n            this.right = new ERNO.Group(this.northEast, this.east, this.southEast);\n            (c = this.hasType(\"center\")) && 1 === c.cubelets.length ? (this.center = this.hasType(\"center\"), this.corners =\n                new ERNO.Group(this.hasType(\"corner\")), this.cross = new ERNO.Group(this.center, this.hasType(\"edge\")), this.ex = new ERNO.Group(this.center, this.hasType(\"corner\"))) : this.centers = new ERNO.Group(this.hasType(\"center\"));\n            this.edges = new ERNO.Group(this.hasType(\"edge\"));\n            this.ring = new ERNO.Group(this.northWest, this.north, this.northEast, this.west, this.east, this.southWest, this.south, this.southEast);\n            this.dexter = new ERNO.Group(this.northWest, this.origin, this.southEast);\n            this.sinister = new ERNO.Group(this.northEast,\n                this.origin, this.southWest);\n            return this\n        },\n        set rotation(a) {\n            if (this.ableToHideInternalFaces && 0 !== this.cube.isFlagged(\"showingIntroverts\") && this.cube.hideInvisibleFaces) {\n                var b = 0 !== a % (0.5 * Math.PI);\n                this.invertedAxis.copy(this.axis).negate();\n                b ? this.neighbour ? (this.showIntroverts(this.axis, !0), this.neighbour.showIntroverts(this.invertedAxis, !0)) : (this.cube.showIntroverts(this.axis, !0), this.cube.showIntroverts(this.invertedAxis, !0)) : this.neighbour ? (this.hideIntroverts(null, !0), this.neighbour.hideIntroverts(null, !0)) : this.cube.hideIntroverts(null, !0)\n            }\n            this.matrix.makeRotationAxis(this.axis, a);\n            this.axis.rotation = a;\n            a = this.indices.length;\n            for (var c = new THREE.Matrix4; a--;) b = this.getCubelet(a), b.matrix.multiplyMatrices(this.matrix, b.matrixSlice), b.position.setFromMatrixPosition(b.matrix), b.scale.setFromMatrixScale(b.matrix), c.extractRotation(b.matrix), b.quaternion.setFromRotationMatrix(c)\n        },\n        get rotation() {\n            return this.axis.rotation\n        },\n        getLocation: function(a) {\n            return a === this.origin ? \"origin\" : a === this.north ? \"north\" : a ===\n                this.northEast ? \"northEast\" : a === this.east ? \"east\" : a === this.southEast ? \"southEast\" : a === this.south ? \"south\" : a === this.southWest ? \"southWest\" : a === this.west ? \"west\" : a === this.northWest ? \"northWest\" : !1\n        },\n        isSolved: function(a) {\n            if (a) {\n                var b = {},\n                    c, d = this.indices.length,\n                    e = 0;\n                a instanceof ERNO.Direction && (a = a.name);\n                for (; 0 < d--;) c = this.getCubelet(d), c = c[a].color.name, void 0 === b[c] ? (b[c] = 1, e++) : b[c]++;\n                return 1 === e ? !0 : !1\n            }\n            console.warn(\"A face [String or ERNO.Controls] argument must be specified when using ERNO.Group.isSolved().\");\n            return !1\n        }\n    });\n    ERNO.Fold = function(a, b) {\n        this.map = [a.northWest[a.face].text, a.north[a.face].text, a.northEast[a.face].text, b.northWest[b.face].text, b.north[b.face].text, b.northEast[b.face].text, a.west[a.face].text, a.origin[a.face].text, a.east[a.face].text, b.west[b.face].text, b.origin[b.face].text, b.east[b.face].text, a.southWest[a.face].text, a.south[a.face].text, a.southEast[a.face].text, b.southWest[b.face].text, b.south[b.face].text, b.southEast[b.face].text]\n    };\n    ERNO.Fold.prototype.getText = function() {\n        var a = \"\";\n        this.map.forEach(function(b) {\n            a += b.innerHTML\n        });\n        return a\n    };\n    ERNO.Fold.prototype.setText = function(a) {\n        var b;\n        a = a.justifyLeft(18);\n        for (b = 0; 18 > b; b++) this.map[b].innerHTML = a.substr(b, 1)\n    };\n    ERNO.Projector = function() {\n        return function(a, b) {\n            function c(a, b) {\n                r.getInverse(b.projectionMatrix);\n                f.multiplyMatrices(b.matrixWorld, r);\n                return a.applyProjection(f)\n            }\n\n            function d(d, f, l) {\n                var m = b,\n                    q = m !== document ? m.getBoundingClientRect() : {\n                        left: 0,\n                        top: 0,\n                        width: window.innerWidth,\n                        height: window.innerHeight\n                    };\n                m !== document && (m = m.ownerDocument.documentElement, q.left += window.pageXOffset - m.clientLeft, q.top += window.pageYOffset - m.clientTop);\n                e = q;\n                h.x = (f - e.left) / e.width * 2 - 1;\n                h.y = (l - e.top) / e.height * -2 + 1;\n                h.z = -1;\n                k.set(h.x, h.y, 1);\n                c(h, d);\n                c(k, d);\n                k.sub(h).normalize();\n                n.set(h, k);\n                g.getInverse(a.matrixWorld);\n                n.applyMatrix4(g);\n                return n\n            }\n            var e, f = new THREE.Matrix4,\n                g = new THREE.Matrix4,\n                h = new THREE.Vector3,\n                k = new THREE.Vector3(1, 1, 1),\n                l = new THREE.Vector3,\n                n = new THREE.Ray,\n                m = new THREE.Box3,\n                q = new THREE.Sphere,\n                r = new THREE.Matrix4,\n                t = h.distanceTo(k);\n            m.min.set(0.5 * -a.size, 0.5 * -a.size, 0.5 * -a.size);\n            m.max.set(0.5 * a.size, 0.5 * a.size, 0.5 * a.size);\n            q.radius = t * a.size * 0.5;\n            return {\n                getIntersection: function(b, c, e, f, g) {\n                    f = f || new THREE.Vector3;\n                    if (null === c || null ===\n                        e) return null;\n                    d(b, c, e);\n                    return n.isIntersectionSphere(q) && null !== n.intersectBox(m, f) ? (g && (b = l || new THREE.Vector3, b.copy(f).set(Math.round(b.x), Math.round(b.y), Math.round(b.z)).multiplyScalar(2 / a.size).set(b.x | 0, b.y | 0, b.z | 0), g.setFromNormalAndCoplanarPoint(l, f)), f) : null\n                },\n                getIntersectionOnPlane: function(a, b, c, e, f) {\n                    if (null === b || null === c) return null;\n                    d(a, b, c);\n                    return n.intersectPlane(e, f)\n                },\n                getCubeletAtIntersection: function() {\n                    var b = new THREE.Vector3;\n                    return function(c) {\n                        b.copy(c).add(m.max).multiplyScalar(3 /\n                            a.size).set(Math.min(b.x | 0, 2), Math.min(3 - b.y | 0, 2), Math.min(3 - b.z | 0, 2));\n                        return a.cubelets[9 * b.z + 3 * b.y + b.x]\n                    }\n                }()\n            }\n        }\n    }();\n    ERNO.Interaction = function() {\n        return function(a, b, c, d, e) {\n            function f(d) {\n                E.enabled && 2 !== d.button && (r = (d.touches && d.touches[0] || d).clientX, t = (d.touches && d.touches[0] || d).clientY, k.getIntersection(b, r, t, l, s) && (null !== d.touches && d.preventDefault(), 0 === a.isTweening() && (C = \"undefined\" !== typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? window.performance.now() : Date.now(), E.active = !0, n = k.getCubeletAtIntersection(l), m = [a.slices[n.addressX + 1], a.slices[n.addressY + 4], a.slices[n.addressZ +\n                    7]], c.addEventListener(\"mousemove\", g), c.addEventListener(\"touchmove\", g), c.addEventListener(\"mouseup\", h), c.addEventListener(\"touchcancel\", h), c.addEventListener(\"touchend\", h), c.removeEventListener(\"mousedown\", f), c.removeEventListener(\"touchstart\", f))))\n            }\n\n            function g(a) {\n                E.active && (A.x = (a.touches && a.touches[0] || a).clientX, A.y = (a.touches && a.touches[0] || a).clientY);\n                E.enabled && (a.preventDefault(), a.stopImmediatePropagation())\n            }\n\n            function h(b) {\n                var d = (b.touches && b.touches[0] || b).clientX,\n                    e = (b.touches && b.touches[0] ||\n                        b).clientY;\n                E.active = !1;\n                E.enabled && (d !== t || e !== t) && p && (null !== b.touches && b.preventDefault(), b = q.name[0].toUpperCase(), d = Math.round(w / Math.PI * 2) * Math.PI * 0.5, 0.3 < v.length() / ((\"undefined\" !== typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? window.performance.now() : Date.now()) - C) && (d = Math.floor(w / Math.PI * 2) * Math.PI * 0.5, d += 0 < M.dot(v.normalize()) ? 0.5 * Math.PI : 0), a.twist(new ERNO.Twist(b, d.radiansToDegrees())));\n                C = 0;\n                A.x = void 0;\n                A.y = void 0;\n                p = !1;\n                q = null;\n                c.removeEventListener(\"mousemove\",\n                    g);\n                c.removeEventListener(\"touchmove\", g);\n                c.removeEventListener(\"mouseup\", h);\n                c.removeEventListener(\"touchend\", h);\n                c.removeEventListener(\"touchcancel\", h);\n                c.addEventListener(\"mousedown\", f);\n                c.addEventListener(\"touchstart\", f)\n            }\n            var k = new ERNO.Projector(a, c),\n                l = new THREE.Vector3,\n                n, m, q, r, t, u = new THREE.Vector3,\n                p = !1,\n                s = new THREE.Plane,\n                v = new THREE.Vector3,\n                M = new THREE.Vector3,\n                A = new THREE.Vector2;\n            new THREE.Vector3;\n            var x = new THREE.Vector3,\n                w = 0,\n                C = 0;\n            A.x = void 0;\n            A.y = void 0;\n            var E = {\n                active: !1,\n                enabled: !0,\n                multiDrag: e || !1,\n                multiDragSnapArea: 100,\n                dragSpeed: d || 1.3\n            };\n            THREE.EventDispatcher.prototype.apply(E);\n            E.getIntersectionAt = function() {\n                var a = new THREE.Vector3,\n                    c = new THREE.Plane;\n                return function(d, e) {\n                    return null === k.getIntersection(b, d, e, a, c) ? null : {\n                        cubelet: k.getCubeletAtIntersection(a),\n                        face: 1 === c.normal.x ? \"RIGHT\" : -1 === c.normal.x ? \"LEFT\" : 1 === c.normal.y ? \"UP\" : -1 === c.normal.y ? \"DOWN\" : 1 === c.normal.z ? \"FRONT\" : \"BACK\"\n                    }\n                }\n            }();\n            E.update = function() {\n                var c = A.x,\n                    d = A.y;\n                E.enabled && E.active && void 0 !== c && void 0 != d && (r !== c || t !== d) && (k.getIntersectionOnPlane(b, c, d, s, u),\n                    v.subVectors(u, l), !p && 5 < v.length() && (q && (q.rotation = 0), p = !0, x.crossVectors(s.normal, v), c = Math.max(Math.abs(x.x), Math.abs(x.y), Math.abs(x.z)), x.x = x.x / c | 0, x.y = 1 === x.x ? 0 : x.y / c | 0, x.z = 1 === x.x || 1 === x.y ? 0 : x.z / c | 0, q = m[Math.abs(3 * x.z + 2 * x.y + x.x) - 1], M.crossVectors(q.axis, s.normal).normalize()), p && (v.subVectors(u, l), w = M.dot(v) / a.size * E.dragSpeed), q && (q.rotation = w))\n            };\n            c.addEventListener(\"mousedown\", f);\n            c.addEventListener(\"touchstart\", f);\n            var N = function(a, b) {\n                    var c = this.getIntersectionAt(a, b);\n                    return c ? (this.dispatchEvent(new CustomEvent(\"click\", {\n                        detail: c\n                    })), !0) : !1\n                }.bind(E),\n                I, F;\n            c.addEventListener(\"mousedown\", function(a) {\n                I = a.clientX;\n                F = a.clientY\n            });\n            c.addEventListener(\"mouseup\", function(a) {\n                var b = a.clientX;\n                a = a.clientY;\n                !p && Math.abs(Math.sqrt((b - I) * (b - I) + (a - F) * (a - F))) < 10 * (window.devicePixelratio || 1) && N(I, F)\n            });\n            c.addEventListener(\"touchstart\", function(a) {\n                I = a.touches[0].clientX;\n                F = a.touches[0].clientY\n            });\n            c.addEventListener(\"touchend\", function(a) {\n                var b = a.changedTouches[0].clientX,\n                    c = a.changedTouches[0].clientY;\n                !p && Math.abs(Math.sqrt((b - I) * (b - I) + (c - F) *\n                    (c - F))) < 10 * (window.devicePixelratio || 1) && N(I, F) && a.preventDefault()\n            });\n            return E\n        }\n    }();\n    ERNO.Controls = function() {\n        var a, b;\n        a = 0;\n        b = 1;\n        return function(c, d, e) {\n            function f(b) {\n                p.enabled && 1 === b.which && (m = a, q.multiplyScalar(0), s(b.pageX, b.pageY, r), t.copy(r), p.domElement.removeEventListener(\"mousedown\", f), document.addEventListener(\"mousemove\", g), document.addEventListener(\"mouseup\", h))\n            }\n\n            function g(b) {\n                p.enabled && (b.preventDefault(), m = a, s(b.pageX, b.pageY, r), q.subVectors(r, t), t.copy(r))\n            }\n\n            function h(a) {\n                document.removeEventListener(\"mousemove\", g);\n                document.removeEventListener(\"mouseup\", h);\n                p.domElement.addEventListener(\"mousedown\",\n                    f);\n                p.enabled && (m = b)\n            }\n\n            function k(b) {\n                p.enabled && null === u.getIntersection(d, b.touches[0].pageX, b.touches[0].pageY) && (m = a, q.multiplyScalar(0), s(b.touches[0].pageX, b.touches[0].pageY, r), t.copy(r), p.domElement.removeEventListener(\"touchstart\", k), document.addEventListener(\"touchend\", n), document.addEventListener(\"touchmove\", l))\n            }\n\n            function l(b) {\n                p.enabled && (m = a, s(b.changedTouches[0].pageX, b.changedTouches[0].pageY, r), q.subVectors(r, t), t.copy(r))\n            }\n\n            function n(a) {\n                document.removeEventListener(\"touchend\", n);\n                document.removeEventListener(\"touchmove\",\n                    l);\n                p.domElement.addEventListener(\"touchstart\", k);\n                p.enabled && (m = b)\n            }\n            var m = -1,\n                q = new THREE.Vector2,\n                r = new THREE.Vector2;\n            new THREE.Vector2;\n            var t = new THREE.Vector2,\n                u = new ERNO.Projector(c, e),\n                p = {\n                    enabled: !0,\n                    domElement: e,\n                    rotationSpeed: 4,\n                    damping: 0.25\n                },\n                s = function(a, b, c) {\n                    var d;\n                    d = p.domElement;\n                    d = d !== document ? d.getBoundingClientRect() : {\n                        left: 0,\n                        top: 0,\n                        width: window.innerWidth,\n                        height: window.innerHeight\n                    };\n                    var e = window.devicePixelRatio || 1;\n                    return c.set(0.0010 * (a * e - d.width - d.left), 0.0010 * (d.height + d.top - b * e))\n                };\n            p.update = function() {\n                var e =\n                    new THREE.Vector3,\n                    f = 0,\n                    g = new THREE.Matrix4;\n                return function() {\n                    !1 !== p.enabled && -1 !== m && (e.set(q.y, -1 * q.x, 0).normalize(), g.getInverse(c.matrixWorld), g.multiply(d.matrixWorld), e.transformDirection(g), q.multiplyScalar(1 - Math.max(0, Math.min(1, p.damping))), f = q.length(), c.object3D.rotateOnAxis(e, -f * p.rotationSpeed), m === a ? m = -1 : m === b && 1E-4 <= f ? r.add(q) : m = -1)\n                }\n            }();\n            p.domElement.addEventListener(\"mousedown\", f);\n            p.domElement.addEventListener(\"touchstart\", k);\n            return p\n        }\n    }();\n    var SceneType = THREE.Scene;\n    THREE.Scene = SceneType || function() {};\n    ERNO.renderers = ERNO.renderers || {};\n    ERNO.renderers.CSS3D = function(a, b) {\n        function c(a) {\n            a.style.display = \"block\"\n        }\n\n        function d(a) {\n            a.style.display = \"none\"\n        }\n\n        function e() {\n            return Array.prototype.slice.call(g.domElement.querySelectorAll(\".faceLabel\"))\n        }\n\n        function f() {\n            if (b.domElement.parentNode) {\n                var a = b.domElement.parentNode.clientWidth,\n                    c = b.domElement.parentNode.clientHeight;\n                !b.domElement.parentNode || b.domElement.clientWidth === a && b.domElement.clientHeight === c || b.setSize(a, c);\n                g.render(h, b.camera)\n            }\n            requestAnimationFrame(f)\n        }\n        var g = new THREE.CSS3DRenderer,\n            h = new THREE.Object3D;\n        g.scene = h;\n        h.add(b.autoRotateObj3D);\n        h.add(b.camera);\n        var k;\n        new THREE.Vector3;\n        b.faces.forEach(function(a, c) {\n            k = b[a.face].label = new THREE.CSS3DObject(document.createElement(\"div\"));\n            k.element.classList.add(\"faceLabel\");\n            k.position.copy(a.axis).multiplyScalar(b.size);\n            k.position.negate();\n            k.element.innerHTML = a.face.toUpperCase();\n            b.object3D.add(k)\n        });\n        b.right.label.rotation.y = 0.5 * Math.PI;\n        b.left.label.rotation.y = -0.5 * Math.PI;\n        b.back.label.rotation.y = Math.PI;\n        b.up.label.rotation.x = -0.5 * Math.PI;\n        b.down.label.rotation.x = 0.5 * Math.PI;\n        b.showFaceLabels = function() {\n            e().forEach(c);\n            this.showingFaceLabels = !0;\n            return this\n        };\n        b.hideFaceLabels = function() {\n            e().forEach(d);\n            this.showingFaceLabels = !1;\n            return this\n        };\n        ERNO.extend(ERNO.Cubelet.prototype, ERNO.renderers.CSS3DCubelet.methods);\n        a.forEach(ERNO.renderers.CSS3DCubelet);\n        requestAnimationFrame(f);\n        SceneType && (THREE.Scene = SceneType);\n        return g\n    };\n    ERNO.renderers.CSS3DCubelet = function() {\n        return function(a) {\n            var b = document.createElement(\"div\");\n            b.classList.add(\"cubelet\");\n            b.classList.add(\"cubeletId-\" + a.id);\n            a.css3DObject = new THREE.CSS3DObject(b);\n            a.css3DObject.name = \"css3DObject-\" + a.id;\n            a.add(a.css3DObject);\n            var b = a.size / 2,\n                c = [\"rotateX(   0deg ) translateZ( \" + b + \"px ) rotateZ(   0deg )\", \"rotateX(  90deg ) translateZ( \" + b + \"px ) rotateZ(   0deg )\", \"rotateY(  90deg ) translateZ( \" + b + \"px ) rotateZ(   0deg )\", \"rotateX( -90deg ) translateZ( \" + b + \"px ) rotateZ(  90deg )\",\n                    \"rotateY( -90deg ) translateZ( \" + b + \"px ) rotateZ( -90deg )\", \"rotateY( 180deg ) translateZ( \" + b + \"px ) rotateZ( -90deg )\"\n                ],\n                d = \"axisZ axisY axisX axisY axisX axisZ\".split(\" \");\n            a.faces.forEach(function(b) {\n                b.element = document.createElement(\"div\");\n                b.element.classList.add(\"face\");\n                b.element.classList.add(d[b.id]);\n                b.element.classList.add(\"face\" + ERNO.Direction.getNameById(b.id).capitalize());\n                a.css3DObject.element.appendChild(b.element);\n                var f = document.createElement(\"div\");\n                f.classList.add(\"wireframe\");\n                b.element.appendChild(f);\n                f = document.createElement(\"div\");\n                f.classList.add(\"id\");\n                b.element.appendChild(f);\n                var g = document.createElement(\"span\");\n                g.classList.add(\"underline\");\n                g.innerText = a.id;\n                f.appendChild(g);\n                f = b.element.style;\n                f.OTransform = f.MozTransform = f.WebkitTransform = f.transform = c[b.id];\n                b.isIntrovert ? (b.element.classList.add(\"faceIntroverted\"), b.element.appendChild(document.createElement(\"div\"))) : (b.element.classList.add(\"faceExtroverted\"), f = document.createElement(\"div\"), f.classList.add(\"sticker\"), f.classList.add(b.color.name),\n                    b.element.appendChild(f), a.isStickerCubelet && f.classList.add(\"stickerLogo\"), f = document.createElement(\"div\"), f.classList.add(\"text\"), f.innerText = b.id, b.text = f, b.element.appendChild(f))\n            });\n            a.show();\n            a.showIntroverts();\n            a.showPlastics();\n            a.showStickers();\n            a.hideIds();\n            a.hideTexts();\n            a.hideWireframes()\n        }\n    }();\n    ERNO.renderers.CSS3DCubelet.methods = function() {\n        function a(a) {\n            a.style.display = \"block\"\n        }\n\n        function b(a) {\n            a.style.display = \"none\"\n        }\n        return {\n            getFaceElements: function(a) {\n                return Array.prototype.slice.call(this.css3DObject.element.querySelectorAll(\".face\" + (a || \"\")))\n            },\n            show: function() {\n                a(this.css3DObject.element);\n                this.showing = !0\n            },\n            hide: function() {\n                b(this.css3DObject.element);\n                this.showing = !1\n            },\n            showExtroverts: function() {\n                this.getFaceElements(\".faceExtroverted\").forEach(a);\n                this.showingExtroverts = !0\n            },\n            hideExtroverts: function() {\n                this.getFaceElements(\".faceExtroverted\").forEach(b);\n                this.showingExtroverts = !1\n            },\n            showIntroverts: function() {\n                var b = new THREE.Vector3,\n                    d = new THREE.Matrix4,\n                    e;\n                return function(f, g) {\n                    e = \"\";\n                    f && (d.getInverse(this.matrix), b.copy(f).transformDirection(d), e = 1 === Math.abs(Math.round(b.x)) ? \".axisX\" : 1 === Math.round(Math.abs(b.y)) ? \".axisY\" : \".axisZ\");\n                    this.getFaceElements(\".faceIntroverted\" + (void 0 !== f ? e : \"\")).forEach(a);\n                    g || (this.showingIntroverts = !0)\n                }\n            }(),\n            hideIntroverts: function() {\n                var a = new THREE.Vector3,\n                    d = new THREE.Matrix4,\n                    e;\n                return function(f, g) {\n                    e = \"\";\n                    f && (d.getInverse(this.matrix),\n                        a.copy(f).transformDirection(d), e = 1 === Math.abs(Math.round(a.x)) ? \".axisX\" : 1 === Math.round(Math.abs(a.y)) ? \".axisY\" : \".axisZ\");\n                    this.getFaceElements(\".faceIntroverted\" + (void 0 !== f ? e : \"\")).forEach(b);\n                    g || (this.showingIntroverts = !1)\n                }\n            }(),\n            showPlastics: function() {\n                this.getFaceElements().forEach(function(a) {\n                    a.classList.remove(\"faceTransparent\")\n                });\n                this.showingPlastics = !0\n            },\n            hidePlastics: function() {\n                this.getFaceElements().forEach(function(a) {\n                    a.classList.add(\"faceTransparent\")\n                });\n                this.showingPlastics = !1\n            },\n            hideStickers: function() {\n                this.getFaceElements(\" .sticker\").forEach(b);\n                this.showingStickers = !1\n            },\n            showStickers: function() {\n                this.getFaceElements(\" .sticker\").forEach(a);\n                this.showingStickers = !0\n            },\n            showWireframes: function() {\n                this.getFaceElements(\" .wireframe\").forEach(a);\n                this.showingWireframes = !0\n            },\n            hideWireframes: function() {\n                this.getFaceElements(\" .wireframe\").forEach(b);\n                this.showingWireframes = !1\n            },\n            showIds: function() {\n                this.getFaceElements(\" .id\").forEach(a);\n                this.showingIds = !0\n            },\n            hideIds: function() {\n                this.getFaceElements(\" .id\").forEach(b);\n                this.showingIds = !1\n            },\n            showTexts: function() {\n                this.getFaceElements(\" .text\").forEach(a);\n                this.showingTexts = !0\n            },\n            hideTexts: function() {\n                this.getFaceElements(\" .text\").forEach(b);\n                this.showingTexts = !1\n            },\n            getOpacity: function() {\n                return this.opacity\n            },\n            setOpacity: function(a, b) {\n                this.opacityTween && this.opacityTween.stop();\n                void 0 === a && (a = 1);\n                if (a !== this.opacity) {\n                    var e = this,\n                        f = (a - this.opacity).absolute().scale(0, 1, 0, 200);\n                    this.opacityTween = (new TWEEN.Tween({\n                        opacity: this.opacity\n                    })).to({\n                        opacity: a\n                    }, f).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(function() {\n                        e.css3DObject.element.style.opacity = this.opacity;\n                        e.opacity =\n                            this.opacity\n                    }).onComplete(function() {\n                        b instanceof Function && b()\n                    }).start()\n                }\n            },\n            getStickersOpacity: function(a) {\n                return parseFloat(this.getFaceElements(\" .sticker\")[0].style.opacity)\n            },\n            setStickersOpacity: function(a) {\n                void 0 === a && (a = 0.2);\n                var b = a;\n                this.getFaceElements(\" .sticker\").forEach(function(a) {\n                    a.style.opacity = b.toString()\n                })\n            }\n        }\n    }();\n    ERNO.Cube = function(a) {\n        ERNO.Group.call(this);\n        a = a || {};\n        this.paused = void 0 === a.paused ? !1 : a.paused;\n        this.autoRotate = void 0 === a.autoRotate ? !1 : a.autoRotate;\n        this.keyboardControlsEnabled = void 0 === a.keyboardControlsEnabled ? !0 : a.keyboardControlsEnabled;\n        this.mouseControlsEnabled = void 0 === a.mouseControlsEnabled ? !0 : a.mouseControlsEnabled;\n        var b = a.renderer || ERNO.renderers.CSS3D;\n        a.textureSize = void 0 === a.textureSize ? 120 : a.textureSize;\n        this.isShuffling = !1;\n        this.isReady = !0;\n        this.undoing = this.isSolving = !1;\n        this.render = !0;\n        this.finalShuffle = null;\n        this.hideInvisibleFaces = void 0 === a.hideInvisibleFaces ? !1 : a.hideInvisibleFaces;\n        this.moveCounter = this.time = 0;\n        this.taskQueue = new ERNO.Queue;\n        this.twistQueue = new ERNO.Queue(ERNO.Twist.validate);\n        this.historyQueue = new ERNO.Queue(ERNO.Twist.validate);\n        this.twistDuration = void 0 !== a.twistDuration ? a.twistDuration : 500;\n        this.shuffleMethod = this.PRESERVE_LOGO;\n        this.size = 3 * a.textureSize;\n        this.cubeletSize = this.size / 3;\n        this.camera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight,\n            1, 6E3);\n        this.camera.position.z = 4 * this.size;\n        this.object3D = new THREE.Object3D;\n        this.autoRotateObj3D = new THREE.Object3D;\n        this.rotation = this.object3D.rotation;\n        this.quaternion = this.object3D.quaternion;\n        this.position = this.object3D.position;\n        this.matrix = this.object3D.matrix;\n        this.matrixWorld = this.object3D.matrixWorld;\n        this.rotation.set(25 * Math.PI / 180, -30 * Math.PI / 180, 0);\n        this.rotationDelta = new THREE.Euler(0.1 * Math.PI / 180, 0.15 * Math.PI / 180, 0);\n        this.cubelets = [];\n        [\n            [W, O, , , G],\n            [W, O, , , , ],\n            [W, O, B, , , ],\n            [W, , , , G],\n            [W, , , , , ],\n            [W, , B, , , ],\n            [W, , , R, G],\n            [W, , , R, , ],\n            [W, , B, R, , ],\n            [, O, , , G],\n            [, O, , , , ],\n            [, O, B, , , ],\n            [, , , , G],\n            [, , , , , ],\n            [, , B, , , ],\n            [, , , R, G],\n            [, , , R, , ],\n            [, , B, R, , ],\n            [, O, , , G, Y],\n            [, O, , , , Y],\n            [, O, B, , , Y],\n            [, , , , G, Y],\n            [, , , , , Y],\n            [, , B, , , Y],\n            [, , , R, G, Y],\n            [, , , R, , Y],\n            [, , B, R, , Y]\n        ].forEach(function(a, b) {\n            this.cubelets.push(new ERNO.Cubelet(this, b, a))\n        }.bind(this));\n        this.core = new ERNO.Group;\n        this.centers = new ERNO.Group;\n        this.edges = new ERNO.Group;\n        this.corners = new ERNO.Group;\n        this.crosses = new ERNO.Group;\n        this.cubelets.forEach(function(a, b) {\n            \"core\" === a.type && this.core.add(a);\n            \"center\" ===\n            a.type && this.centers.add(a);\n            \"edge\" === a.type && this.edges.add(a);\n            \"corner\" === a.type && this.corners.add(a);\n            \"center\" !== a.type && \"edge\" !== a.type || this.crosses.add(a)\n        }.bind(this));\n        this.left = new ERNO.Slice([24, 21, 18, 15, 12, 9, 6, 3, 0], this);\n        this.left.name = \"left\";\n        this.middle = new ERNO.Slice([25, 22, 19, 16, 13, 10, 7, 4, 1], this);\n        this.middle.name = \"middle\";\n        this.right = new ERNO.Slice([2, 11, 20, 5, 14, 23, 8, 17, 26], this);\n        this.right.name = \"right\";\n        this.right.neighbour = this.middle;\n        this.left.neighbour = this.middle;\n        this.up = new ERNO.Slice([18,\n            19, 20, 9, 10, 11, 0, 1, 2\n        ], this);\n        this.up.name = \"up\";\n        this.equator = new ERNO.Slice([21, 22, 23, 12, 13, 14, 3, 4, 5], this);\n        this.equator.name = \"equator\";\n        this.down = new ERNO.Slice([8, 17, 26, 7, 16, 25, 6, 15, 24], this);\n        this.down.name = \"down\";\n        this.down.neighbour = this.equator;\n        this.up.neighbour = this.equator;\n        this.front = new ERNO.Slice([0, 1, 2, 3, 4, 5, 6, 7, 8], this);\n        this.front.name = \"front\";\n        this.standing = new ERNO.Slice([9, 10, 11, 12, 13, 14, 15, 16, 17], this);\n        this.standing.name = \"standing\";\n        this.back = new ERNO.Slice([26, 23, 20, 25, 22, 19, 24, 21, 18], this);\n        this.back.name = \"back\";\n        this.back.neighbour = this.standing;\n        this.front.neighbour = this.standing;\n        this.faces = [this.front, this.up, this.right, this.down, this.left, this.back];\n        this.slices = [this.left, this.middle, this.right, this.down, this.equator, this.up, this.back, this.standing, this.front];\n        var c = function(a) {\n            this.dispatchEvent(new CustomEvent(\"onTwistComplete\", {\n                detail: {\n                    slice: a.target\n                }\n            }))\n        }.bind(this);\n        this.slices.forEach(function(a) {\n            a.addEventListener(\"change\", c)\n        });\n        var d = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\n            17, 18, 19, 20, 21, 22, 23, 24, 25, 26\n        ];\n        this.slicesDictionary = {\n            f: this.front,\n            s: this.standing,\n            b: this.back,\n            u: this.up,\n            e: this.equator,\n            d: this.down,\n            r: this.right,\n            m: this.middle,\n            l: this.left,\n            x: new ERNO.Slice(d, this),\n            y: new ERNO.Slice(d, this),\n            z: new ERNO.Slice(d, this)\n        };\n        this.slicesDictionary.x.ableToHideInternalFaces = !1;\n        this.slicesDictionary.y.ableToHideInternalFaces = !1;\n        this.slicesDictionary.z.ableToHideInternalFaces = !1;\n        this.slicesDictionary.x.axis.set(-1, 0, 0);\n        this.slicesDictionary.y.axis.set(0, -1, 0);\n        this.slicesDictionary.z.axis.set(0,\n            0, -1);\n        this.cubelets.forEach(function(a, b) {\n            a.setAddress(b)\n        });\n        this.renderer = b(this.cubelets, this);\n        this.domElement = this.renderer.domElement;\n        this.domElement.classList.add(\"cube\");\n        this.domElement.style.fontSize = this.cubeletSize + \"px\";\n        this.autoRotateObj3D.add(this.object3D);\n        this.hideInvisibleFaces && this.hideIntroverts(null, !0);\n        this.mouseInteraction = new ERNO.Interaction(this, this.camera, this.domElement);\n        this.mouseInteraction.addEventListener(\"click\", function(a) {\n            this.dispatchEvent(new CustomEvent(\"click\", {\n                detail: a.detail\n            }))\n        }.bind(this));\n        this.controls = new(a.controls || ERNO.Controls)(this, this.camera, this.domElement);\n        this.folds = [new ERNO.Fold(this.front, this.right), new ERNO.Fold(this.left, this.up), new ERNO.Fold(this.down, this.back)];\n        this.setSize(400, 200);\n        this.loop = this.loop.bind(this);\n        requestAnimationFrame(this.loop);\n        document.addEventListener(\"keypress\", function(a) {\n            \"input\" !== a.target.tagName.toLowerCase() && \"textarea\" !== a.target.tagName.toLowerCase() && !this.mouseInteraction.active && this.keyboardControlsEnabled &&\n                (a = String.fromCharCode(a.which), 0 <= \"XxRrMmLlYyUuEeDdZzFfSsBb\".indexOf(a) && this.twist(a))\n        }.bind(this))\n    };\n    ERNO.Cube.prototype = Object.create(ERNO.Group.prototype);\n    ERNO.Cube.prototype.constructor = ERNO.Cube;\n    ERNO.extend(ERNO.Cube.prototype, {\n        shuffle: function(a, b) {\n            a = a || 30;\n            b = b || \"\";\n            var c = this.shuffleMethod.slice(),\n                d, e = new ERNO.Twist,\n                f, g = b.length,\n                h = 0;\n            this.twistQueue.empty(!0);\n            for (this.historyQueue.empty(!0); 0 < a--;) {\n                if (b) d.set(b[h]), h = (h + 1) % g;\n                else\n                    for (f = c.split(\"\"), d = (new ERNO.Twist).copy(e); d.equals(e);) d.set(f.splice(Math.floor(Math.random() * f.length), 1)[0]);\n                d.isShuffle = !0;\n                this.twist(d);\n                e = d.getInverse()\n            }\n            this.finalShuffle = d\n        },\n        solve: function() {\n            this.isSolving = !0\n        },\n        isSolved: function() {\n            return this.front.isSolved(ERNO.Direction.FRONT) &&\n                this.up.isSolved(ERNO.Direction.UP) && this.right.isSolved(ERNO.Direction.RIGHT) && this.down.isSolved(ERNO.Direction.DOWN) && this.left.isSolved(ERNO.Direction.LEFT) && this.back.isSolved(ERNO.Direction.BACK)\n        },\n        undo: function() {\n            0 < this.twistQueue.history.length && (this.historyQueue.add(this.twistQueue.undo().getInverse()), this.undoing = !0)\n        },\n        redo: function() {\n            0 < this.twistQueue.future.length && (this.undoing = !0, this.historyQueue.empty(), this.historyQueue.add(this.twistQueue.redo()))\n        },\n        twist: function(a) {\n            this.undoing &&\n                this.twistQueue.empty();\n            this.historyQueue.empty();\n            this.undoing = !1;\n            this.twistQueue.add(a)\n        },\n        immediateTwist: function(a) {\n            0.8 <= this.verbosity && console.log(\"Executing a twist command to rotate the \" + a.group + \" \" + a.wise + \" by\", a.degrees, \"degrees.\");\n            for (var b = this.slicesDictionary[a.command.toLowerCase()], c = (void 0 === a.degrees ? 90 : a.degrees) * a.vector, d = c.degreesToRadians(), e = Math.abs(d - b.rotation) / (0.5 * Math.PI) * this.twistDuration, f = b.indices.length, g; 0 < f--;) b.getCubelet(f).isTweening = !0;\n            (new TWEEN.Tween(b)).to({\n                    rotation: d\n                },\n                e).easing(TWEEN.Easing.Quartic.Out).onComplete(function() {\n                b.rotation = d;\n                b.axis.rotation = 0;\n                for (f = b.indices.length; 0 < f--;) g = b.getCubelet(f), g.isTweening = !1, g.updateMatrix(), g.matrixSlice.copy(g.matrix);\n                0 !== c && (b.rotateGroupMappingOnAxis(d), this.dispatchEvent(new CustomEvent(\"onTwistComplete\", {\n                    detail: {\n                        slice: b,\n                        twist: a\n                    }\n                })));\n                a === this.finalShuffle && (this.finalShuffle = null, this.dispatchEvent(new CustomEvent(\"onShuffleComplete\", {\n                    detail: {\n                        slice: b,\n                        twist: a\n                    }\n                })))\n            }.bind(this)).start(this.time)\n        },\n        getText: function(a) {\n            if (void 0 ===\n                a) return [this.folds[0].getText(), this.folds[1].getText(), this.folds[2].getText()];\n            if (_.isNumeric(a) && 0 <= a && 2 >= a) return this.folds[a].getText()\n        },\n        setText: function(a, b) {\n            void 0 === b ? (this.folds[0].setText(a), this.folds[1].setText(a), this.folds[2].setText(a)) : _.isNumeric(b) && 0 <= b && 2 >= b && this.folds[b].setText(a)\n        },\n        setSize: function(a, b) {\n            this.camera.aspect = a / b;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(a, b)\n        },\n        PRESERVE_LOGO: \"RrLlUuDdSsBb\",\n        ALL_SLICES: \"RrMmLlUuEeDdFfSsBb\",\n        EVERYTHING: \"XxRrMmLlYyUuEeDdZzFfSsBb\",\n        loop: function() {\n            var a = 0;\n            return function() {\n                requestAnimationFrame(this.loop);\n                var b = \"undefined\" !== typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? window.performance.now() : Date.now(),\n                    c = b - (a || b);\n                a = b;\n                this.paused || (this.time += c, TWEEN.update(this.time), this.autoRotate && (this.rotation.x += this.rotationDelta.x, this.rotation.y += this.rotationDelta.y, this.rotation.z += this.rotationDelta.z), this.isReady && 0 === this.isTweening() && (b = this.undoing ? this.historyQueue : this.twistQueue, 0 === b.future.length ?\n                        this.isSolving && window.solver ? this.isSolving = window.solver.consider(this) : !0 === this.taskQueue.isReady && (b = this.taskQueue.do(), b instanceof Function && b()) : (c = b.do(), \"x\" !== c.command.toLowerCase() && \"y\" !== c.command.toLowerCase() && \"z\" !== c.command.toLowerCase() && 0 !== c.degrees && (this.moveCounter += this.undoing ? -1 : 1), (0 === c.degrees || c.isShuffle) && b.purge(c), this.immediateTwist(c))), this.mouseInteraction.enabled = this.mouseControlsEnabled && !this.finalShuffle, this.mouseInteraction.update(), this.controls.enabled =\n                    this.mouseControlsEnabled && !this.mouseInteraction.active, this.controls.update())\n            }\n        }()\n    });\n    ERNO.Solver = function() {\n        this.logic = function(a) {\n            return !1\n        }\n    };\n    ERNO.Solver.prototype.consider = function(a) {\n        if (void 0 === a) return console.warn(\"A cube [Cube] argument must be specified for Solver.consider().\"), !1;\n        if (!1 === a instanceof ERNO.Cube) return console.warn(\"The cube argument provided is not a valid Cube.\"), !1;\n        a.isShuffling = !1;\n        return a.isSolved() ? (ERNO.Solver.prototype.explain(\"I\\u2019ve found that the cube is already solved.\"), !1) : this.logic(a)\n    };\n    ERNO.Solver.prototype.hint = function(a) {\n        console.log(\"%c\" + a + \"%c\\n\", \"background-color: #EEE; color: #333\", \"\")\n    };\n    ERNO.Solver.prototype.explain = function(a) {\n        console.log(\"Solver says: %c \" + a + \" %c\\n\", \"color: #080\", \"\")\n    };\n    ERNO.renderers = ERNO.renderers || {};\n    ERNO.renderers.IeCSS3D = function() {\n        THREE.Scene = THREE.Scene || function() {};\n        return function(a, b) {\n            function c() {\n                if (b.domElement.parentNode) {\n                    var a = b.domElement.parentNode.clientWidth,\n                        f = b.domElement.parentNode.clientHeight;\n                    !b.domElement.parentNode || b.domElement.clientWidth === a && b.domElement.clientHeight === f || b.setSize(a, f);\n                    d.render(e, b.camera)\n                }\n                requestAnimationFrame(c)\n            }\n            b.hideInvisibleFaces = !0;\n            var d = new ERNO.IeCss3DRenderer(b),\n                e = new THREE.Object3D;\n            d.scene = e;\n            e.add(b.autoRotateObj3D);\n            e.add(b.camera);\n            b.domElement =\n                d.domElement;\n            var f;\n            new THREE.Vector3;\n            b.faces.forEach(function(a, c) {\n                f = b[a.face].label = new THREE.CSS3DObject(document.createElement(\"div\"));\n                f.element.classList.add(\"faceLabel\");\n                f.position.copy(a.axis).multiplyScalar(b.size);\n                f.position.negate();\n                f.element.innerHTML = a.face.toUpperCase();\n                b.object3D.add(f)\n            });\n            b.right.label.rotation.y = 0.5 * Math.PI;\n            b.left.label.rotation.y = -0.5 * Math.PI;\n            b.back.label.rotation.y = Math.PI;\n            b.up.label.rotation.x = -0.5 * Math.PI;\n            b.down.label.rotation.x = 0.5 * Math.PI;\n            ERNO.extend(ERNO.Cubelet.prototype,\n                ERNO.renderers.IeCSS3DCubelet.methods);\n            a.forEach(ERNO.renderers.IeCSS3DCubelet);\n            requestAnimationFrame(c);\n            return d\n        }\n    }();\n    ERNO.renderers.IeCSS3DCubelet = function() {\n        var a = \"axisZ axisY axisX axisY axisX axisZ\".split(\" \");\n        return function(b) {\n            b.add(b.css3DObject = new THREE.Object3D);\n            b.faces.forEach(function(c) {\n                c.object3D = new THREE.CSS3DObject(document.createElement(\"div\"));\n                var e = c.element = c.object3D.element;\n                b.css3DObject.add(c.object3D);\n                e.classList.add(\"cubeletId-\" + b.id);\n                e.classList.add(\"face\");\n                e.classList.add(a[c.id]);\n                e.classList.add(\"face\" + ERNO.Direction.getNameById(c.id).capitalize());\n                var f = document.createElement(\"div\");\n                f.classList.add(\"wireframe\");\n                e.appendChild(f);\n                f = document.createElement(\"div\");\n                f.classList.add(\"id\");\n                e.appendChild(f);\n                var g = document.createElement(\"span\");\n                g.classList.add(\"underline\");\n                g.innerText = b.id;\n                f.appendChild(g);\n                c.isIntrovert ? (e.classList.add(\"faceIntroverted\"), b.cube.hideInvisibleFaces && (e.style.display = \"none\")) : (e.classList.add(\"faceExtroverted\"), f = document.createElement(\"div\"), f.classList.add(\"sticker\"), f.classList.add(c.color.name), e.appendChild(f), f = document.createElement(\"div\"), f.classList.add(\"text\"),\n                    f.innerText = c.id, c.text = f, e.appendChild(f))\n            });\n            b.front.object3D.element.classList.add(\"axisZ\");\n            b.back.object3D.element.classList.add(\"axisZ\");\n            b.right.object3D.element.classList.add(\"axisX\");\n            b.left.object3D.element.classList.add(\"axisX\");\n            b.up.object3D.element.classList.add(\"axisY\");\n            b.down.object3D.element.classList.add(\"axisY\");\n            var c = b.size / 2;\n            b.front.object3D.position.z = c;\n            b.up.object3D.rotation.x = -0.5 * Math.PI;\n            b.up.object3D.position.y = c;\n            b.down.object3D.rotation.x = 0.5 * Math.PI;\n            b.down.object3D.position.y = -c;\n            b.left.object3D.rotation.y = -0.5 * Math.PI;\n            b.left.object3D.position.x = -c;\n            b.right.object3D.rotation.y = 0.5 * Math.PI;\n            b.right.object3D.position.x = c;\n            b.front.object3D.rotation.z = 0;\n            b.front.object3D.position.z = c;\n            b.back.object3D.rotation.y = Math.PI;\n            b.back.object3D.position.z = -c;\n            b.isTweening = !1;\n            b.isEngagedX = !1;\n            b.isEngagedY = !1;\n            b.isEngagedZ = !1;\n            b.show();\n            b.showIntroverts();\n            b.showPlastics();\n            b.showStickers();\n            b.hideIds();\n            b.hideTexts();\n            b.hideWireframes()\n        }\n    }();\n    ERNO.renderers.IeCSS3DCubelet.methods = function() {\n        function a(a) {\n            a.style.display = \"block\"\n        }\n\n        function b(a) {\n            a.style.display = \"none\"\n        }\n        return {\n            getFaceElements: function(a) {\n                return Array.prototype.slice.call(this.cube.domElement.querySelectorAll(\".cubeletId-\" + this.id + (a || \"\")))\n            },\n            show: function() {\n                this.getFaceElements().forEach(a);\n                this.showing = !0\n            },\n            hide: function() {\n                this.getFaceElements().forEach(b);\n                this.showing = !1\n            },\n            showExtroverts: function() {\n                this.getFaceElements(\".faceExtroverted\").forEach(a);\n                this.showingExtroverts = !0\n            },\n            hideExtroverts: function() {\n                this.getFaceElements(\".faceExtroverted\").forEach(b);\n                this.showingExtroverts = !1\n            },\n            showIntroverts: function() {\n                var b = new THREE.Vector3,\n                    d = new THREE.Matrix4,\n                    e;\n                return function(f, g) {\n                    e = \"\";\n                    f && (d.getInverse(this.matrix), b.copy(f).transformDirection(d), e = 1 === Math.abs(Math.round(b.x)) ? \".axisX\" : 1 === Math.round(Math.abs(b.y)) ? \".axisY\" : \".axisZ\");\n                    this.getFaceElements(\".faceIntroverted\" + e).forEach(a);\n                    g || (this.showingIntroverts = !0)\n                }\n            }(),\n            hideIntroverts: function() {\n                var a = new THREE.Vector3,\n                    d = new THREE.Matrix4,\n                    e;\n                return function(f, g) {\n                    e = \"\";\n                    f && (d.getInverse(this.matrix), a.copy(f).transformDirection(d), e = 1 === Math.abs(Math.round(a.x)) ? \".axisX\" : 1 === Math.round(Math.abs(a.y)) ? \".axisY\" : \".axisZ\");\n                    this.getFaceElements(\".faceIntroverted\" + e).forEach(b);\n                    g || (this.showingIntroverts = !1)\n                }\n            }(),\n            showPlastics: function() {\n                this.getFaceElements().forEach(function(a) {\n                    a.classList.remove(\"faceTransparent\")\n                });\n                this.showingPlastics = !0\n            },\n            hidePlastics: function() {\n                this.getFaceElements().forEach(function(a) {\n                    a.classList.add(\"faceTransparent\")\n                });\n                this.showingPlastics = !1\n            },\n            hideStickers: function() {\n                this.getFaceElements(\" .sticker\").forEach(b);\n                this.showingStickers = !1\n            },\n            showStickers: function() {\n                this.getFaceElements(\" .sticker\").forEach(a);\n                this.showingStickers = !0\n            },\n            showWireframes: function() {\n                this.getFaceElements(\" .wireframe\").forEach(a);\n                this.showingWireframes = !0\n            },\n            hideWireframes: function() {\n                this.getFaceElements(\" .wireframe\").forEach(b);\n                this.showingWireframes = !1\n            },\n            showIds: function() {\n                this.getFaceElements(\" .id\").forEach(a);\n                this.showingIds = !0\n            },\n            hideIds: function() {\n                this.getFaceElements(\" .id\").forEach(b);\n                this.showingIds = !1\n            },\n            showTexts: function() {\n                this.getFaceElements(\" .text\").forEach(a);\n                this.showingTexts = !0\n            },\n            hideTexts: function() {\n                this.getFaceElements(\" .text\").forEach(b);\n                this.showingTexts = !1\n            },\n            getOpacity: function() {\n                return this.opacity\n            },\n            setOpacity: function(a, b) {\n                this.opacityTween && this.opacityTween.stop();\n                void 0 === a && (a = 1);\n                if (a !== this.opacity) {\n                    var e = this,\n                        f = this.getFaceElements(),\n                        g = (a - this.opacity).absolute().scale(0, 1, 0, 200);\n                    this.opacityTween = (new TWEEN.Tween({\n                        opacity: this.opacity\n                    })).to({\n                        opacity: a\n                    }, g).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(function() {\n                        e.opacity =\n                            this.opacity;\n                        f.forEach(function(a) {\n                            a.style.opacity = e.opacity\n                        })\n                    }).onComplete(function() {\n                        b instanceof Function && b()\n                    }).start()\n                }\n            },\n            getStickersOpacity: function(a) {},\n            setStickersOpacity: function(a) {\n                void 0 === a && (a = 0.2);\n                var b = a.toString();\n                this.getFaceElements(\" .sticker\").forEach(function(a) {\n                    a.style.opacity = b\n                })\n            }\n        }\n    }();\n    THREE.CSS3DObject = function(a) {\n        THREE.Object3D.call(this);\n        this.element = a;\n        this.element.style.position = \"absolute\";\n        this.addEventListener(\"removed\", function(a) {\n            if (null !== this.element.parentNode) {\n                this.element.parentNode.removeChild(this.element);\n                for (var c = 0, d = this.children.length; c < d; c++) this.children[c].dispatchEvent(a)\n            }\n        })\n    };\n    THREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\n    THREE.CSS3DSprite = function(a) {\n        THREE.CSS3DObject.call(this, a)\n    };\n    THREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\n    ERNO.IeCss3DRenderer = function(a) {\n        function b(a, b) {\n            return a.z - b.z\n        }\n\n        function c(c, d) {\n            var e = 0.5 * a.cubeletSize;\n            c.userData.points[0].set(-e, -e, 0).applyMatrix4(c.matrixWorld);\n            c.userData.points[1].set(e, -e, 0).applyMatrix4(c.matrixWorld);\n            c.userData.points[2].set(e, e, 0).applyMatrix4(c.matrixWorld);\n            c.userData.points[3].set(-e, e, 0).applyMatrix4(c.matrixWorld);\n            c.userData.points.sort(b);\n            return c.userData.points\n        }\n\n        function d(a, b) {\n            a.copy(b[0]);\n            for (var c = b.length; 0 < c--;) a.min(b[c]);\n            return a\n        }\n\n        function e(a, b) {\n            a.copy(b[0]);\n            for (var c = b.length; 0 < c--;) a.max(b[c]);\n            return a\n        }\n\n        function f(a, b, c) {\n            return b.userData.max[c] > a.userData.min[c] && a.userData.max[c] > b.userData.min[c]\n        }\n        var g, h, k, l;\n        new THREE.Matrix4;\n        var n = document.createElement(\"div\");\n        n.style.overflow = \"hidden\";\n        this.domElement = n;\n        var m = document.createElement(\"div\");\n        n.appendChild(m);\n        this.setClearColor = function() {};\n        this.setSize = function(a, b) {\n            g = a;\n            h = b;\n            k = g / 2;\n            l = h / 2;\n            n.style.width = a + \"px\";\n            n.style.height = b + \"px\";\n            m.style.width = a + \"px\";\n            m.style.height = b + \"px\"\n        };\n        var q = function(a) {\n                return 1E-4 >\n                    Math.abs(a) ? 0 : a\n            },\n            r = function() {\n                var a = new THREE.Vector3,\n                    b = new THREE.Vector3,\n                    c = new THREE.Euler,\n                    d = new THREE.Quaternion;\n                c._quaternion = d;\n                d._euler = c;\n                return function(e) {\n                    e.decompose(a, d, b);\n                    return \"translate3d(-50%,-50%,0) translate3d(\" + q(a.x) + \"px, \" + q(a.y) + \"px, \" + q(a.z) + \"px) rotateX(\" + q(c.x) + \"rad) rotateY(\" + q(c.y) + \"rad) rotateZ(\" + q(c.z) + \"rad) scale3d(\" + q(b.x) + \", \" + q(b.y) + \", \" + q(b.z) + \")\"\n                }\n            }(),\n            t = new THREE.Matrix4,\n            u = new THREE.Matrix4;\n        (function() {\n            var a = new THREE.Matrix4;\n            return function(b, c) {\n                a.multiplyMatrices(c.projectionMatrix,\n                    c.matrixWorldInverse);\n                return b.applyProjection(a)\n            }\n        })();\n        new THREE.Matrix4;\n        var p = new THREE.Matrix4,\n            s = new THREE.Matrix4,\n            v, M = function(a, b) {\n                u.multiplyMatrices(t, a.matrixWorld);\n                u.elements[4] *= -1;\n                u.elements[5] *= -1;\n                u.elements[6] *= -1;\n                u.elements[7] *= -1;\n                var c = r(u),\n                    d = a.element;\n                d.style.WebkitTransform = c;\n                d.style.MozTransform = c;\n                d.style.oTransform = c;\n                d.style.transform = c;\n                d.style.WebkitPerspective = v + \"px\";\n                d.style.MozPerspective = v + \"px\";\n                d.style.oPerspective = v + \"px\";\n                d.style.perspective = v + \"px\";\n                d.parentNode !== m && m.appendChild(d)\n            },\n            A = function() {\n                var a = new THREE.Vector3,\n                    b = new THREE.Vector3,\n                    c = new THREE.Vector3,\n                    d = 4;\n                return function(e, f) {\n                    a.set(0, 0, 1).transformDirection(e.matrixWorld);\n                    b.set(0, 0, 0).applyMatrix4(e.matrixWorld);\n                    for (d = 4; 0 < d--;)\n                        if (c.subVectors(f[d], b), 0 > q(a.dot(c))) return !1;\n                    return !0\n                }\n            }(),\n            x = !0,\n            w = [];\n        this.render = function(b, g) {\n            v = 0.5 / Math.tan(THREE.Math.degToRad(0.5 * g.fov)) * h;\n            n.style.WebkitPerspective = v + \"px\";\n            n.style.MozPerspective = v + \"px\";\n            n.style.oPerspective = v + \"px\";\n            n.style.perspective = v + \"px\";\n            b.updateMatrixWorld();\n            void 0 === g.parent &&\n                g.updateMatrixWorld();\n            g.matrixWorldInverse.getInverse(g.matrixWorld);\n            s.makeTranslation(k, -l, 0);\n            p.makeTranslation(0, 0, v);\n            t.copy(s);\n            t.multiply(g.matrixWorldInverse);\n            t.multiply(p);\n            t.elements[1] *= -1;\n            t.elements[5] *= -1;\n            t.elements[9] *= -1;\n            t.elements[13] *= -1;\n            w = [];\n            a.cubelets.forEach(function(a) {\n                a.faces.forEach(function(a) {\n                    x && void 0 === a.object3D.userData.min && (a.object3D.userData.min = new THREE.Vector3, a.object3D.userData.max = new THREE.Vector3, a.object3D.userData.points = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3,\n                        new THREE.Vector3\n                    ]);\n                    w.push(a.object3D)\n                })\n            });\n            var m, q, r;\n            w.sort(function(a, b) {\n                m = c(a, g);\n                q = m[0].z;\n                d(a.userData.min, m);\n                e(a.userData.max, m);\n                m = c(b, g);\n                r = m[0].z;\n                d(b.userData.min, m);\n                e(b.userData.max, m);\n                a.userData.zIndex = null;\n                b.userData.zIndex = null;\n                return q - r\n            });\n            for (var u = w.length, H, J, K = w.length, u = 0; u < K; u++) {\n                H = u;\n                var D = w[u];\n                D.userData.zIndex = null === D.userData.zIndex ? u : D.userData.zIndex;\n                for (H = u; H < K; H++) {\n                    var y = w[H];\n                    y.userData.zIndex = null === y.userData.zIndex ? H : y.userData.zIndex;\n                    f(D, y, \"x\") && f(D, y, \"y\") && f(D, y, \"z\") &&\n                        (A(D, y.userData.points) ? (J = D.userData.zIndex, D.userData.zIndex = Math.min(D.userData.zIndex, H), y.userData.zIndex = Math.max(J, H)) : A(y, D.userData.points) && (J = y.userData.zIndex, y.userData.zIndex = Math.min(y.userData.zIndex, D.userData.zIndex), D.userData.zIndex = Math.max(D.userData.zIndex, J)))\n                }\n            }\n            u = new THREE.Vector3(0, 0, -1);\n            H = new THREE.Vector3(0, 0, -1);\n            J = !1;\n            D = new THREE.Vector3;\n            y = 0;\n            for (K = w.length; y < K; y++) M(w[y], g), D.set(w[y].matrixWorld.elements[12], w[y].matrixWorld.elements[13], w[y].matrixWorld.elements[14]),\n                u.subVectors(D, g.position), J = 0 > H.set(0, 0, 1).transformDirection(w[y].matrixWorld).dot(u), w[y].element.style.visibility = J ? \"visible\" : \"hidden\", w[y] instanceof THREE.CSS3DObject && (w[y].element.style.zIndex = w[y].userData.zIndex);\n            x = !1\n        }\n    };\n    /*\n     RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n     Available via the MIT or new BSD license.\n     see: http://github.com/requirejs/domReady for details\n    */\n    var domReady = function() {\n        function a() {\n            if (!g) {\n                g = !0;\n                e && clearInterval(e);\n                var a = k;\n                if (g && a.length) {\n                    k = [];\n                    var b;\n                    for (b = 0; b < a.length; b += 1) a[b](h)\n                }\n            }\n        }\n\n        function b(a) {\n            g ? a(h) : k.push(a);\n            return b\n        }\n        var c, d, e, f = \"undefined\" !== typeof window && window.document,\n            g = !f,\n            h = f ? document : null,\n            k = [];\n        if (f) {\n            if (document.addEventListener) document.addEventListener(\"DOMContentLoaded\", a, !1), window.addEventListener(\"load\", a, !1);\n            else if (window.attachEvent) {\n                window.attachEvent(\"onload\", a);\n                d = document.createElement(\"div\");\n                try {\n                    c = null === window.frameElement\n                } catch (l) {}\n                d.doScroll &&\n                    c && window.external && (e = setInterval(function() {\n                        try {\n                            d.doScroll(), a()\n                        } catch (b) {}\n                    }, 30))\n            }\n            \"complete\" === document.readyState && a()\n        }\n        b.version = \"2.0.1\";\n        b.load = function(a, c, d, e) {\n            e.isBuild ? d(null) : b(d)\n        };\n        return b\n    }();\n    var CubeDemoExample = function() {\n            function a() {\n                var b;\n                if (0 < L.length()) b = 500;\n                else {\n                    if (0 < F.length) b = F.charAt(0), F = F.substr(1);\n                    else {\n                        b = \"\";\n                        for (var c = 0, d, c = 0; 1 > c; c++) d = Math.floor(Math.random() * (N.length - 0.01)), b += N.charAt(d)\n                    }\n                    z.twist(b);\n                    b = 5E3\n                }\n                Q.clear();\n                Q.add(new Task({\n                    id: \"randomTwist\",\n                    timeToLive: b,\n                    onComplete: a.bind(this)\n                }))\n            }\n\n            function b(a) {\n                z.rotation.x += -6E-5 * a;\n                z.rotation.y += 2.4E-4 * a\n            }\n\n            function c(a) {\n                \"LI\" === a.target.nodeName && a.preventDefault()\n            }\n\n            function d(a) {\n                var b = a.target.getAttribute(\"cube-mode\");\n                null !== b && (a.preventDefault(),\n                    f(b))\n            }\n\n            function e() {\n                var a = P + 1;\n                a > I.length - 1 && (a = 0);\n                f(I[a])\n            }\n\n            function f(a) {\n                H = a; - 1 !== P && (J = I[P]);\n                F = \"\";\n                L.clear();\n                switch (H) {\n                    case \"basic\":\n                        x();\n                        break;\n                    case \"wire\":\n                        m();\n                        break;\n                    case \"coreCenterCross\":\n                        u();\n                        break;\n                    case \"corner\":\n                        F = \"rdlUbRdR\";\n                        x();\n                        k({\n                            include: {\n                                group: z.cubelets[2],\n                                radius: 100,\n                                opacity: 1\n                            },\n                            exclude: {\n                                group: null,\n                                radius: 0,\n                                opacity: 1\n                            }\n                        });\n                        break;\n                    case \"pretty\":\n                        x();\n                        z.showIntroverts();\n                        A();\n                        a = document.getElementsByClassName(\"cube\");\n                        for (var b = 0; b < a.length; b++) w(a[b], \"purty\");\n                        break;\n                    case \"expanded\":\n                        n()\n                }\n                null != J && g(J, !1);\n                P = I.indexOf(H);\n                g(H, !0);\n                y.clear();\n                y.add(new Task({\n                    id: \"showNextDemoMode\",\n                    timeToLive: E,\n                    onComplete: e.bind(this)\n                }))\n            }\n\n            function g(a, b) {\n                var c = document.getElementsByClassName(a)[0];\n                !0 === b ? w(c, \"active\") : C(c, \"active\")\n            }\n\n            function h(a) {\n                document.hidden ? (z.paused = !0, K.pause()) : (z.paused = !1, K.resume())\n            }\n\n            function k(a) {\n                if (\"undefined\" === typeof a.include.group) throw new TypeError(\"Expected inclusion cubelet group to be defined\");\n                if (!a.include.group instanceof ERNO.Group) throw new TypeError(\"Expected inclusion cubelet group to be a Group\");\n                if (void 0 !== a.exclude && (null === a.exclude.group && (a.exclude.group = new ERNO.Group(z.cubelets), a.exclude.group.remove(a.include.group)), !a.exclude.group instanceof ERNO.Group)) throw new TypeError(\"Expected exclusion cubelet group to be a Group\");\n                var b = new Task({\n                    id: \"highlightAndExpandCubeletsGroup\"\n                });\n                void 0 !== a.include.radius && b.add(new Task({\n                    id: \"includeSetRadius\",\n                    timeToLive: 0,\n                    onComplete: a.include.group.setRadius.bind(a.include.group, a.include.radius)\n                }));\n                void 0 !== a.include.opacity && a.include.group.setOpacity(a.include.opacity);\n                void 0 !== a.exclude && (void 0 !== a.exclude.radius && b.add(new Task({\n                    id: \"excludeSetRadius\",\n                    timeToLive: 0,\n                    onComplete: a.exclude.group.setRadius.bind(a.exclude.group, a.exclude.radius)\n                })), void 0 !== a.exclude.opacity && a.exclude.group.setOpacity(a.exclude.opacity));\n                L.add(b)\n            }\n\n            function l(a) {\n                if (!a instanceof ERNO.Cubelet) throw new TypeError(\"Expected cubelet to be a Cubelet\");\n                a.setRadius(100)\n            }\n\n            function n(a) {\n                x();\n                a = Math.round(1E3 / 27);\n                var b = 0,\n                    c = [];\n                z.cubelets.forEach(function(a) {\n                    var b = Math.round(Math.random() * (c.length -\n                        1));\n                    0 > b && (b = 0);\n                    c.splice(b, 0, a)\n                });\n                var d = new Task({\n                        id: \"expandCubeletGroup\"\n                    }),\n                    e;\n                for (e = 0; e < c.length; e++) d.add(new Task({\n                    id: \"expandCubelet_\" + e,\n                    timeToLive: b,\n                    onComplete: l.bind(this, c[e])\n                })), b += a;\n                L.add(d)\n            }\n\n            function m() {\n                x();\n                for (var a = 0, b = new ERNO.Group(z.cubelets); 0 < b.cubelets.length;) {\n                    var c = Math.floor(Math.random() * (b.cubelets.length - 0.1)),\n                        c = b.cubelets[c];\n                    b.remove(c);\n                    L.add(new Task({\n                        id: \"hideCubeletWireframe\",\n                        timeToLive: a,\n                        onComplete: q.bind(this, c)\n                    }));\n                    L.add(new Task({\n                        id: \"showCubeletWireframe\",\n                        timeToLive: 1E3 +\n                            a,\n                        onComplete: r.bind(this, c)\n                    }));\n                    a += 50\n                }\n            }\n\n            function q(a) {\n                a.hidePlastics();\n                A(a);\n                if (S) {\n                    a = a.children[0].children;\n                    for (var b = 0; b < a.length; b++) w(a[b].element, \"wireframe-showing\")\n                } else w(a.css3DObject.element, \"wireframe-hiding\")\n            }\n\n            function r(a) {\n                a.hidePlastics();\n                A(a);\n                if (S) {\n                    a = a.children[0].children;\n                    for (var b = 0; b < a.length; b++) {\n                        var c = a[b].element;\n                        C(c, \"wireframe-hiding\");\n                        w(c, \"wireframe-showing\")\n                    }\n                } else a = a.css3DObject.element, C(a, \"wireframe-hiding\"), w(a, \"wireframe-showing\")\n            }\n\n            function t(a, b) {\n                if (a instanceof Array)\n                    for (var c =\n                            0; c < a.length; c++) t(a[c], b);\n                else {\n                    if (S)\n                        for (var d = a.children[0].children, c = 0; c < d.length; c++) d[c].element.style.opacity = b;\n                    else a.css3DObject.element.style.opacity = b;\n                    a.opacity = b\n                }\n            }\n\n            function u() {\n                var a = E / 4;\n                L.add(new Task({\n                    id: \"highlightCore\",\n                    timeToLive: 0 * a,\n                    onComplete: p.bind(this)\n                }));\n                L.add(new Task({\n                    id: \"highlightCenters\",\n                    timeToLive: 1 * a,\n                    onComplete: s.bind(this)\n                }));\n                L.add(new Task({\n                    id: \"highlightCrosses\",\n                    timeToLive: 2 * a,\n                    onComplete: v.bind(this)\n                }));\n                L.add(new Task({\n                    id: \"highlightCorners\",\n                    timeToLive: 3 * a,\n                    onComplete: M.bind(this)\n                }))\n            }\n\n            function p() {\n                x(!0);\n                k({\n                    include: {\n                        group: z.core,\n                        radius: 0,\n                        opacity: 1\n                    },\n                    exclude: {\n                        group: null,\n                        radius: 0,\n                        opacity: 0.1\n                    }\n                })\n            }\n\n            function s() {\n                x();\n                k({\n                    include: {\n                        group: z.centers,\n                        radius: 0,\n                        opacity: 1\n                    },\n                    exclude: {\n                        group: null,\n                        radius: 0,\n                        opacity: 0.1\n                    }\n                })\n            }\n\n            function v() {\n                x();\n                var a = {\n                    include: {\n                        group: (new ERNO.Group(z.crosses)).remove(z.centers),\n                        radius: 0,\n                        opacity: 1\n                    },\n                    exclude: {\n                        group: null,\n                        radius: 0,\n                        opacity: 0.1\n                    }\n                };\n                k(a)\n            }\n\n            function M() {\n                x();\n                k({\n                    include: {\n                        group: z.corners,\n                        radius: 0,\n                        opacity: 1\n                    },\n                    exclude: {\n                        group: null,\n                        radius: 0,\n                        opacity: 0.1\n                    }\n                })\n            }\n\n            function A(a) {\n                a instanceof\n                ERNO.Cubelet && null != a.css3DObject && null != a.css3DObject.element ? w(a.css3DObject.element, \"hidden\") : (a = document.getElementsByClassName(\"sticker\"), w(a, \"hidden\"))\n            }\n\n            function x(a) {\n                z.showPlastics();\n                z.showIntroverts();\n                var b = document.getElementsByClassName(\"cube\");\n                C(b, \"purty\");\n                b = document.getElementsByClassName(\"cube\")[0];\n                a && \"wire\" === J && (t(z.cubelets, 0.1), w(b, \"noTransition\"));\n                var c = S ? document.getElementsByClassName(\"face\") : document.getElementsByClassName(\"cubelet\");\n                C(c, \"wireframe-hiding\");\n                C(c, \"wireframe-showing\");\n                a && \"wire\" === J && (b.offsetHeight, C(b, \"noTransition\"));\n                a = document.getElementsByClassName(\"sticker\");\n                C(a, \"hidden\");\n                z.setOpacity(1);\n                L.add(new Task({\n                    id: \"setRadius\",\n                    timeToLive: 0,\n                    onComplete: z.setRadius.bind(z, 0)\n                }))\n            }\n\n            function w(a, b) {\n                if (a instanceof NodeList || a instanceof HTMLCollection)\n                    for (var c = 0; c < a.length; c++) w(a[c], b);\n                else {\n                    if (!0 === (void 0 === a.className ? !1 : a.classList.contains(b))) return !1;\n                    a.classList.add(b);\n                    return !0\n                }\n            }\n\n            function C(a, b) {\n                if (a instanceof NodeList || a instanceof HTMLCollection)\n                    for (var c = 0; c < a.length; c++) C(a[c],\n                        b);\n                else a.classList.remove(b)\n            }\n            var E = 4E3,\n                N = \"LMRUEDFSBlmruedfsb\",\n                I = \"basic wire coreCenterCross corner expanded pretty\".split(\" \"),\n                F = \"\",\n                P = -1,\n                H = null,\n                J = null,\n                K, D, y, Q, L, S, T, z;\n            return {\n                setUpStage: function() {\n                    S = BrowserDetect.detectIE();\n                    T = BrowserDetect.detectMobile();\n                    z = new ERNO.Cube({\n                        textureSize: 180,\n                        hideInvisibleFaces: T,\n                        renderer: S ? ERNO.renderers.IeCSS3D : null\n                    });\n                    window.cube = z;\n                    z.finalShuffle = !0;\n                    z.camera.position.y = -50;\n                    z.camera.position.z = 1200;\n                    z.camera.fov = 60;\n                    z.twistDuration = 1E3;\n                    D = new Task({\n                        id: \"rotate\",\n                        onUpdate: b.bind(this),\n                        persist: !0\n                    });\n                    y = new Task({\n                        id: \"demoMode\",\n                        persist: !0\n                    });\n                    Q = new Task({\n                        id: \"twist\",\n                        persist: !0\n                    });\n                    L = new Task({\n                        id: \"cube\",\n                        persist: !0\n                    });\n                    K = new Loop;\n                    K.add(D);\n                    K.add(y);\n                    K.add(Q);\n                    K.add(L);\n                    K.start();\n                    document.getElementById(\"container\").appendChild(z.domElement);\n                    var f = document.getElementById(\"demoOptions\");\n                    f.addEventListener(\"mousedown\", c, !1);\n                    f.addEventListener(\"click\", d, !1);\n                    document.addEventListener(\"visibilitychange\", h, !1);\n                    a();\n                    e()\n                }\n            }\n        }(),\n        Task = function(a) {\n            this._id = a.id;\n            this._timeToLive = a.timeToLive;\n            this._onUpdate = a.onUpdate;\n            this._onComplete = a.onComplete;\n            this._persist = !0 === a.persist ? !0 : !1;\n            this._children = []\n        };\n    Task.prototype._id = null;\n    Task.prototype._timeToLive = null;\n    Task.prototype._onUpdate = null;\n    Task.prototype._onComplete = null;\n    Task.prototype._persist = null;\n    Task.prototype._updatedAtLeastOnce = !1;\n    Task.prototype._active = !0;\n    Task.prototype._children = null;\n    Task.prototype.update = function(a) {\n        if (!1 !== this._persist || this._updatedAtLeastOnce || !window.cube.isTweening()) {\n            this._updatedAtLeastOnce = !0;\n            null != this._onUpdate && this._onUpdate(a);\n            this.updateChildren(a);\n            this.removeInactiveChildren();\n            var b = !1;\n            !1 === this._persist && !0 === this._active && (null == this._timeToLive ? 0 === this._children.length && (b = !0) : (this._timeToLive -= a, 0 > this._timeToLive && (b = !0)), b && (this._active = !1, null != this._onComplete && this._onComplete()))\n        }\n    };\n    Task.prototype.updateChildren = function(a) {\n        for (var b = 0; b < this._children.length; b++) this._children[b].update(a)\n    };\n    Task.prototype.removeInactiveChildren = function() {\n        for (var a = 0; a < this._children.length;) !1 === this._children[a]._active && (this._children.splice(a, 1), a--), a++\n    };\n    Task.prototype.add = function(a) {\n        this._children.push(a)\n    };\n    Task.prototype.clear = function() {\n        this._children = []\n    };\n    Task.prototype.length = function() {\n        return this._children.length\n    };\n    var Loop = function() {\n        this._step = this.step.bind(this);\n        this._root = new Task({\n            id: \"root\",\n            persist: !0\n        })\n    };\n    Loop.prototype._paused = !1;\n    Loop.prototype._step = null;\n    Loop.prototype._root = null;\n    Loop.prototype.add = function(a) {\n        this._root.add(a)\n    };\n    Loop.prototype.start = function() {\n        this.resume();\n        window.requestAnimationFrame(this._step)\n    };\n    Loop.prototype.pause = function() {\n        this._paused = !0\n    };\n    Loop.prototype.resume = function() {\n        this._lastTime = new Date;\n        this._paused = !1\n    };\n    Loop.prototype.step = function() {\n        window.requestAnimationFrame(this._step);\n        var a = new Date,\n            b = a - this._lastTime;\n        this._paused || this._root.update(b);\n        this._lastTime = a\n    };\n    var BrowserDetect = {\n        detectIE: function() {\n            return !!navigator.userAgent.match(/Trident/)\n        },\n        detectMobile: function() {\n            for (var a = \"iemobile;midp;240x320;blackberry;netfront;nokia;panasonic;portalmmm;sharp;sie-;sonyericsson;symbian;windows ce;benq;mda;mot-;opera mini;philips;pocket pc;sagem;samsung;sda;sgh-;vodafone;xda;palm;iphone;ipod;ipad;android\".split(\";\"), b = navigator.userAgent.toLowerCase(), c = !1, d = 0; d < a.length; d++)\n                if (-1 !== b.indexOf(a[d])) {\n                    c = !0;\n                    break\n                }\n            return c\n        }\n    };\n    HTMLElement.prototype._getBoundingClientRect = HTMLElement.prototype.getBoundingClientRect;\n    HTMLElement.prototype.getBoundingClientRect = function() {\n        var a = this._getBoundingClientRect();\n        return a = {\n            left: a.left,\n            top: a.top,\n            width: a.width,\n            height: a.height\n        }\n    };\n    var setOpacityOverride = function(a, b) {\n        this.opacityTween && this.opacityTween.stop();\n        void 0 === a && (a = 1);\n        if (a !== this.opacity) {\n            var c = this,\n                d = (a - this.opacity).absolute().scale(0, 1, 0, 200);\n            this.opacityTween = (new TWEEN.Tween({\n                opacity: this.opacity\n            })).to({\n                opacity: a\n            }, d).easing(TWEEN.Easing.Quadratic.InOut).onUpdate(function() {\n                c.css3DObject.element.style.opacity = this.opacity;\n                c.opacity = this.opacity\n            }).onComplete(function() {\n                b instanceof Function && b()\n            }).start(this.cube.time)\n        } else b instanceof Function && b()\n    };\n    ERNO.Cubelet.prototype.setOpacity = setOpacityOverride;\n    ERNO.renderers.CSS3DCubelet.methods.setOpacity = setOpacityOverride;\n    window.CubeDemoExample = CubeDemoExample;\n\n    window.ERNO = ERNO;\n    window.TWEEN = window.TWEEN || TWEEN;\n    window.THREE = window.THREE || THREE;\n}())",
			"settings":
			{
				"buffer_size": 234952,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/vbissengue.LAP-EBZ30/Downloads/rubikscube/lib/cube.js",
			"settings":
			{
				"buffer_size": 53284,
				"line_ending": "Unix"
			}
		},
		{
			"file": "TODO.txt",
			"settings":
			{
				"buffer_size": 837,
				"line_ending": "Windows",
				"name": "- Rubik's cube rotation logic"
			}
		},
		{
			"contents": "/*=======================*/\n/* ORIENTATIONS SOMMET\n/*=======================*/\n+ position initiale : FUL\n- devant : rouge\n- derrière : -\n- haut : blanc\n- bas : -\n- gauche : jaune\n- droite : -\n\n\n/* Permutations axe Y*/\n+ permutation 1 : BUL\n- devant : -\n- derrière : jaune\n- haut : blanc\n- bas : -\n- gauche : rouge\n- droite : -\n\n+ permutation 2 : BUR\n- devant : -\n- derrière : rouge\n- haut : blanc\n- bas : -\n- gauche : -\n- droite : jaune\n\n+ permutation 3 : FUR\n- devant : jaune\n- derrière : -\n- haut : blanc\n- bas : -\n- gauche : -\n- droite : rouge\n\n\n/* Permutations axe X */\n+ permutation 1 : FDL\n- devant : blanc\n- derrière : -\n- haut : -\n- bas : rouge\n- gauche : jaune\n- droite : -\n\n+ permutation 2 : BDL\n- devant : -\n- derrière : rouge\n- haut : -\n- bas : blanc\n- gauche : jaune\n- droite : -\n\n+ permutation 3 : BUL\n- devant : -\n- derrière : blanc\n- haut : rouge\n- bas : -\n- gauche : jaune\n- droite : -\n\n\n/* Permutations axe Z */\n+ permutation 1 : FUR\n- devant : rouge\n- derrière : -\n- haut : jaune\n- bas : -\n- gauche : -\n- droite : blanc\n\n+ permutation 2 : FDR\n- devant : rouge\n- derrière : -\n- haut : -\n- bas : blanc\n- gauche : -\n- droite : jaune\n\n+ permutation 3 : FDL\n- devant : rouge\n- derrière : -\n- haut : -\n- bas : jaune\n- gauche : blanc\n- droite : -\n\n/*=======================*/\n/* ORIENTATIONS ARRETES\n/*=======================*/\n+ position initiale : FU-\n- devant : rouge\n- derrière : -\n- haut : blanc\n- bas : -\n- gauche : -\n- droite : -\n\n\n/* Permutations axe Y*/\n+ permutation 1 : FD-\n- devant : blanc\n- derrière : -\n- haut : -\n- bas : rouge\n- gauche : -\n- droite : -\n\n+ permutation 2 : BD-\n- devant : -\n- derrière : rouge\n- haut : -\n- bas : blanc\n- gauche : -\n- droite : -\n\n+ permutation 3 : BU-\n- devant : -\n- derrière : blanc\n- haut : rouge\n- bas : -\n- gauche : -\n- droite : -\n\n\n/* Permutations axe X*/\n+ permutation 1 : -UL\n- devant : -\n- derrière : -\n- haut : blanc\n- bas : -\n- gauche : rouge\n- droite : -\n\n+ permutation 2 : BU-\n- devant : -\n- derrière : rouge\n- haut : blanc\n- bas : -\n- gauche : -\n- droite : -\n\n+ permutation 3 : -UR\n- devant : -\n- derrière : -\n- haut : blanc\n- bas : -\n- gauche : -\n- droite : rouge\n\n\n/* Permutations axe Z*/\n+ permutation 1 : F-R\n- devant : rouge\n- derrière : -\n- haut : -\n- bas : -\n- gauche : -\n- droite : blanc\n\n+ permutation 2 : FD-\n- devant : rouge\n- derrière : -\n- haut : -\n- bas : blanc\n- gauche : -\n- droite : -\n\n+ permutation 3 : F-L\n- devant : rouge\n- derrière : -\n- haut : -\n- bas : -\n- gauche : blanc\n- droite : -",
			"settings":
			{
				"buffer_size": 2477,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"",
				"Preferences: Browse Packages"
			]
		],
		"width": 549.0
	},
	"console":
	{
		"height": 144.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/vbissengue.LAP-EBZ30/Documents/psychoCube",
		"/C/Users/vbissengue.LAP-EBZ30/Documents/psychoCube/app",
		"/C/Users/vbissengue.LAP-EBZ30/Documents/psychoCube/app/css",
		"/C/Users/vbissengue.LAP-EBZ30/Documents/psychoCube/app/js"
	],
	"file_history":
	[
		"/C/Users/vbissengue.LAP-EBZ30/Downloads/rubikscube/lib/cube3d.js",
		"/C/Users/vbissengue.LAP-EBZ30/Downloads/rubikscube/lib/rubik_center.obj",
		"/C/wamp/www/devTests/opel/mFlow/css/style.scss",
		"/C/wamp/www/devTests/nrjMobile/mtab/css/style.scss",
		"/C/wamp/www/devTests/nrjMobile/mfooter/css/style.scss",
		"/C/wamp/www/devTests/nrjMobile/mfooter/js/main.js",
		"/C/wamp/www/devTests/nrjMobile/mfooter/index_spAndroid.html",
		"/C/wamp/www/devTests/nrjMobile/mfooter/index_iPad.html",
		"/C/wamp/www/devTests/nrjMobile/mtab/index_iPad.html",
		"/C/wamp/www/devTests/nrjMobile/mtab/js/main.js",
		"/C/wamp/www/devTests/nrjMobile/mtab/index_spAndroid.html",
		"/C/Users/vbissengue.LAP-EBZ30/Documents/psychoCube/app/css/main.scss",
		"/C/wamp/www/devTests/opel/mFlow/index_iPad.html",
		"/C/wamp/www/meteorRain/js/main.js",
		"/C/wamp/www/meteorRain/css/main.scss",
		"/C/wamp/www/devTests/oreo/custom/css/style.css",
		"/C/wamp/www/devTests/opel/mTab/css/style.scss",
		"/C/wamp/www/devTests/opel/mTab/js/main.js",
		"/C/wamp/www/devTests/opel/mTab/index_spAndroid.html",
		"/C/wamp/www/devTests/opel/mTab/index_iPad.html",
		"/C/wamp/www/meteorRain/main.js",
		"/C/wamp/www/meteorRain/index.html",
		"/C/wamp/www/meteorRain/main.css",
		"/C/wamp/www/devTests/rover/mtab/js/main.js",
		"/C/wamp/www/devTests/rover/mtab/css/style.scss",
		"/C/wamp/www/devTests/rover/mfooter/js/main.js",
		"/C/wamp/www/devTests/rover/mfooter/index_spAndroid.html",
		"/C/wamp/www/devTests/rover/mfooter/index_iPad.html",
		"/C/wamp/www/devTests/rover/mfooter/css/style.scss",
		"/C/wamp/www/devTests/rover/mtab/index_iPad.html",
		"/C/wamp/www/devTests/rover/mtab/index_spAndroid.html",
		"/C/wamp/www/devTests/sncf2/mTab/js/main.js",
		"/C/wamp/www/devTests/sncf2/mFooter/index_spAndroid.html",
		"/C/wamp/www/devTests/sncf2/mTab/css/style.scss",
		"/C/wamp/www/devTests/sncf2/mFooter/css/style.css",
		"/C/wamp/www/devTests/sncf2/mFooter/css/style.scss",
		"/C/wamp/www/devTests/sncf2/mTab/index_spAndroid.html",
		"/C/wamp/www/devTests/sncf2/mFooter/index_iPad.html",
		"/C/wamp/www/devTests/sncf2/mFooter/js/main.js",
		"/C/wamp/www/devTests/oreo/custom/js/main.js",
		"/C/wamp/www/devTests/oreo/mFooter/tablet/js/main.js",
		"/C/wamp/www/devTests/oreo/mFooter/tablet/index_mamans.html",
		"/C/Users/vbissengue.LAP-EBZ30/Downloads/rubiks-cube_1331197276_demo_package/js/quaternion.js",
		"/C/Users/vbissengue.LAP-EBZ30/Downloads/rubiks-cube_1331197276_demo_package/js/rubik.js",
		"/C/Users/vbissengue.LAP-EBZ30/Downloads/rubiks-cube_1331197276_demo_package/js/oz.js",
		"/C/Users/vbissengue.LAP-EBZ30/Downloads/rubiks-cube_1331197276_demo_package/js/css3.oz.js",
		"/C/Users/vbissengue.LAP-EBZ30/Downloads/rubiks-cube_1331197276_demo_package/css/style.css",
		"/E/labs/psychoCube/package.json",
		"/E/labs/psychoCube/bower.json",
		"/E/labs/psychoCube/Gruntfile.js",
		"/E/labs/waltzRevolution/app/js/audio.js",
		"/E/labs/waltzRevolution/app/js/song.js",
		"/E/labs/waltzRevolution/app/css/main.css",
		"/D/wamp/www/test/synthcube/index.html",
		"/D/uTorrent/AUTODESK.MAYA.V2016.WIN64-ISO/nfo.nfo",
		"/E/labs/waltzRevolution/app/js/waltz.json",
		"/E/labs/waltzRevolution/app/js/jquery.ba-throttle-debounce.min.js",
		"/E/labs/waltzRevolution/.gitignore",
		"/E/labs/waltzRevolution/app/js/game_OK.js",
		"/E/labs/waltzRevolution/app/js/game_latest.js",
		"/E/labs/waltzRevolution/app/js/main_OK.js",
		"/E/labs/waltzRevolution/app/js/main_latest.js",
		"/E/labs/waltzRevolution/app/js/game_latest",
		"/E/labs/waltzRevolution/app/js/game.js",
		"/C/Users/Leivvi/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/LZCRZZLT/s5-style[1].js",
		"/C/Users/Leivvi/Downloads/movies.list",
		"/E/labs/waltzRevolution/app/js/main.js",
		"/E/labs/waltzRevolution/app/js/input.js",
		"/E/labs/waltzRevolution/app/css/fonts/onlinefontconverter.com/converted-files/font.css",
		"/E/labs/waltzRevolution/app/index.html",
		"/E/labs/waltzRevolution/app/js/controller.js",
		"/E/labs/waltzRevolution/app/css/main.scss",
		"/E/labs/waltzRevolution/node_modules/grunt-usemin/lib/file.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/mout/object/forOwn.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/configstore/node_modules/js-yaml/node_modules/argparse/node_modules/lodash/object/forOwnRight.js",
		"/E/labs/waltzRevolution/bower_components/modernizr/feature-detects/forms-speechinput.js",
		"/E/labs/waltzRevolution/node_modules/grunt-modernizr/node_modules/uglify-js/test/unit/compress/expected/forstatement.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/tar-fs/node_modules/tar-stream/node_modules/readable-stream/lib/_stream_passthrough.js",
		"/E/labs/waltzRevolution/node_modules/grunt-autoprefixer/node_modules/autoprefixer-core/node_modules/postcss/lib/css-syntax-error.js",
		"/E/labs/waltzRevolution/node_modules/grunt/node_modules/findup-sync/node_modules/glob/node_modules/minimatch/test/extglob-ending-with-state-char.js",
		"/E/labs/waltzRevolution/node_modules/grunt-autoprefixer/node_modules/autoprefixer-core/node_modules/caniuse-db/features-json/speech-synthesis.json",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/glob/sync.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/inquirer/node_modules/cli-color/node_modules/es5-ext/reg-exp/#/search/implement.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/handlebars/coverage/lcov-report/spec/helpers.js.html",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/inquirer/node_modules/cli-color/node_modules/es5-ext/string/#/camel-to-hyphen.js",
		"/E/labs/waltzRevolution/node_modules/grunt/node_modules/colors/colors.js",
		"/E/labs/waltzRevolution/node_modules/bower/templates/helpers/colors.js",
		"/E/labs/waltzRevolution/node_modules/grunt-mocha/node_modules/grunt-lib-phantomjs/node_modules/phantomjs/lib/phantom/examples/colorwheel.coffee",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/inquirer/node_modules/cli-color/node_modules/es5-ext/math/hypot/implement.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/configstore/node_modules/js-yaml/node_modules/argparse/node_modules/lodash/collection/eachRight.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/configstore/node_modules/js-yaml/node_modules/argparse/node_modules/lodash/array/dropRightWhile.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/mout/collection.js",
		"/E/labs/waltzRevolution/bower_components/modernizr/feature-detects/css-objectfit.js",
		"/E/labs/waltzRevolution/node_modules/grunt-contrib-sass/CHANGELOG",
		"/E/labs/waltzRevolution/node_modules/grunt-autoprefixer/node_modules/autoprefixer-core/node_modules/caniuse-db/features-json/html5semantic.json",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/configstore/node_modules/js-yaml/node_modules/argparse/node_modules/lodash/internal/initCloneArray.js",
		"/E/labs/waltzRevolution/node_modules/grunt-svgmin/node_modules/svgo/node_modules/js-yaml/node_modules/argparse/lib/action_container.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/configstore/node_modules/js-yaml/node_modules/argparse/node_modules/lodash/internal/baseMap.js",
		"/E/labs/waltzRevolution/node_modules/bower/node_modules/.bin/semver",
		"/E/labs/waltzRevolution/node_modules/grunt-contrib-sass/docs/sass-examples.md",
		"/E/labs/waltzRevolution/bower_components/modernizr/feature-detects/script-async.js",
		"/E/labs/waltzRevolution/node_modules/grunt-contrib-sass/tasks/sass.js",
		"/E/labs/waltzRevolution/node_modules/grunt-contrib-concat/node_modules/source-map/build/assert-shim.js",
		"/E/labs/waltzRevolution/node_modules/grunt-svgmin/node_modules/chalk/node_modules/ansi-styles/ansi-styles.js",
		"/E/labs/waltzRevolution/node_modules/grunt-contrib-sass/node_modules/async/lib/async.js",
		"/E/labs/waltzRevolution/node_modules/jshint-stylish/node_modules/text-table/example/align.js",
		"/E/labs/intertap/app/styles/main.scss",
		"/C/Users/Leivvi/Desktop/main.js",
		"/C/Users/Leivvi/Downloads/dmauro-Keypress-2.1.0-1-g06deea7/dmauro-Keypress-06deea7/keypress.js",
		"/E/labs/waltzRevolution/app/js/score.js",
		"/C/Users/Leivvi/Desktop/120527.xml",
		"/E/labs/waltzRevolution/app/js/main_.js",
		"/E/labs/waltzRevolution/.editorconfig",
		"/E/labs/waltzRevolution/test/bower.json",
		"/E/labs/waltzRevolution/Gruntfile.js",
		"/E/labs/waltzRevolution/bower.json",
		"/E/labs/rhythmGame/bower.json",
		"/E/labs/rhythmGame/package.json",
		"/E/labs/rhythmGame/index.html",
		"/E/labs/rhythmGame/app/scripts/main.js",
		"/E/labs/rhythmGame/app/styles/main.scss",
		"/E/labs/rhythmGame/css/main.scss",
		"/E/labs/rhythmGame/js/main.js",
		"/E/labs/rhythmGame/main_.js",
		"/E/labs/intertap/app/scripts/canvas.js",
		"/E/labs/intertap/app/scripts/cloud_backup",
		"/E/labs/intertap/app/scripts/canvas_backup.js",
		"/E/labs/intertap/app/scripts/audio.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\Users\\vbissengue.LAP-EBZ30\\Documents\\psychoCube"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\\.blue",
			"\\.yellow",
			"\\.green",
			"\\.white",
			"\\.orange",
			"\\.red",
			"pyramid-right",
			"pyramid-left",
			"pyramid-bottom",
			"pyramid-top",
			"pyramid-back",
			"pyramid-front",
			"particles",
			"iPad",
			"timeline",
			"media",
			"replace",
			"col",
			"0",
			"opacify",
			"images",
			"scripts",
			"styles",
			"h2",
			"\\$offWhite",
			"#F8F4F0",
			"$offWhite",
			"noteIn",
			"noteScale",
			"progress",
			"duplicateCurrentSource",
			"createS",
			"create",
			"play",
			"progress",
			"percent",
			"drawA",
			"draw",
			"analyserNode",
			"this.analyserNode",
			"drawA",
			"screen_loading",
			"\\$(\"#screen_loading\"",
			"exte",
			"\\$game",
			"if\\(\\$game",
			"if\\(\\!\\$game",
			"if\\(\\!$game",
			"if\\(\\\\!$game",
			"if\\(\\!$game",
			"if\\(\\\\!$game",
			"if\\(\\$game",
			"if(\\$game",
			"note",
			"thro",
			"\\/\\/",
			"\\/\\*",
			"18px",
			"panel",
			"Size(20)",
			"Size(20",
			"pane",
			"fontSize22px",
			"hud",
			"calc",
			"vw",
			"fontSize7",
			"radius",
			"Record",
			"newRec",
			"};",
			"fontSize18px",
			"$fontSize18px",
			"fontSize24px",
			"fontSize22px",
			"$fontSize22px",
			"margin",
			"em/16",
			"new",
			"em",
			"Size16px",
			"Size18px",
			"Size24px",
			"Size22px",
			"Size20px",
			"Size22px",
			"Size20px",
			"Size18px",
			"Size16px",
			"Size10px",
			"Size60px",
			"font-s",
			"font-",
			"px",
			"ready",
			"red",
			" red",
			" #",
			"pause\\(",
			"});",
			"cancelA",
			"autoMuteSound",
			"window",
			"audioVi",
			"resize",
			"pause",
			"noIn",
			"pause",
			"AudioVisualizer",
			"AudioVisualize",
			"cancel",
			"isCompleted",
			"removeListeners",
			"hasEnd",
			"cancel",
			"pause",
			"timeout",
			"screen_main",
			"key",
			"open",
			"game",
			"this",
			"\\.on",
			"gameover",
			"currentPosition()",
			"load",
			"songLen",
			"function o"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			".color-blue",
			".color-yellow",
			".color-green",
			".color-white",
			".color-orange",
			".color-red",
			"blue",
			"yellow",
			"green",
			"white",
			"orange",
			"red",
			"fireflies",
			"spAndroid",
			"intro",
			"img",
			"js",
			"css",
			"px",
			"$game",
			"game",
			"currentPosition",
			"currentPosition()",
			"$audioEngine.BGM",
			"$audioEngine",
			"this.",
			"$game.song",
			"this.keyMap",
			"$game.",
			"this.",
			"launchGameMobile",
			"launchGame",
			"launchGameMobile()",
			"launchGame()",
			"screen_pause",
			"screen_play",
			"screen_results",
			"$progress",
			"highScores",
			"maxScore",
			"lightGrey",
			"hasTiedNote",
			"$darkGrey",
			"$offWhite",
			"$orange",
			"gameComplete",
			"rank",
			"okPerc[closestNoteIndex]",
			"\\.score",
			"\\.notes",
			"\\._notes",
			"._notes",
			"tn",
			"tnB",
			"tiedNote",
			"TiedNote",
			"tnBeat",
			"isTiedNote",
			":false",
			"song",
			".tmp/css",
			"<%= config.app %>/img",
			"<%= config.app %>/css",
			"<%= config.app %>/js",
			"init",
			"crossfading",
			"audioEngine",
			"allSoundLoaded",
			"#credits",
			"max-width: 320px",
			"max-height",
			"soundSwitch",
			"max-width:",
			"(max-width:",
			".btCancel",
			".btStart",
			".btInvite",
			".btRandom",
			"#000, #021522",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8082,
						"regions":
						{
						},
						"selection":
						[
							[
								156,
								156
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1530.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/css/main.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15244,
						"regions":
						{
						},
						"selection":
						[
							[
								2681,
								2681
							]
						],
						"settings":
						{
							"syntax": "Packages/Syntax Highlighting for Sass/Syntaxes/SCSS.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1383.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/js/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17246,
						"regions":
						{
						},
						"selection":
						[
							[
								6491,
								6491
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/js/controls.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15981,
						"regions":
						{
						},
						"selection":
						[
							[
								5033,
								5033
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 234952,
						"regions":
						{
						},
						"selection":
						[
							[
								270,
								270
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/vbissengue.LAP-EBZ30/Downloads/rubikscube/lib/cube.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53284,
						"regions":
						{
						},
						"selection":
						[
							[
								17522,
								17522
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 22298.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "TODO.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 837,
						"regions":
						{
						},
						"selection":
						[
							[
								238,
								238
							]
						],
						"settings":
						{
							"auto_name": "- Rubik's cube rotation logic",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2477,
						"regions":
						{
						},
						"selection":
						[
							[
								559,
								559
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1890.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "psychoCube.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 269.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
