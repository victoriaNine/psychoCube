/*=======================*/
/* MIXINS
/*=======================*/
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }  
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }  
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}


/*=======================*/
/* GENERAL RULES
/*=======================*/
html, body { overflow:hidden; background:#050505; }
body.moving { cursor:move; cursor:-webkit-grabbing; }

#psychoCube {
  position: absolute;
  transform-style: preserve-3d;
  width: 27em;
  height: 27em;
  @include animation("levitate 8s ease-in-out infinite");
}

@include keyframes(levitate) {
  0%, 100% { transform: translate3d(27em,27em,-27em); }
  50% { transform: translate3d(27em,29em, -27em); }
}

.cube {
  position: absolute;
  width: 9em;
  height: 9em;
  top: 0;
  left: 0;
  transform-style: preserve-3d;
  transform-origin: 13.5em 13.5em -9em;
}

@for $z from 1 through 3 {
  @for $y from 1 through 3 {
    @for $x from 1 through 3 {
      $translateX : $x * 9 - 9;
      $translateY : $y * 9 - 9;
      $translateZ : $z * -9 + 9;

      #cube#{$z}-#{$y}-#{$x} { 
        transform: translate3d(#{$translateX}em, #{$translateY}em, #{$translateZ}em);
      }
    }
  }
}

/* /!\ You need to add vendor prefixes in order to render the CSS properly (or simply use http://leaverou.github.io/prefixfree/) /!\ */
#tridiv {
  perspective: 800px;
  position: absolute;
  overflow: hidden;
  width: 100%;
  height: 100%;
  background: transparent;
  font-size: 100%;

  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}

.scene, .shape, .face, .face-wrapper, .cr {
  position: absolute;
  transform-style: preserve-3d;
}
.scene {
  width: 80em;
  height: 80em;
  top: 50%;
  left: 50%;
  margin: -40em 0 0 -40em;
  transform-origin: 50% 50% #{-27em * 1.25};
}
.shape {
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  transform-origin: 50%;
}
.face, .face-wrapper {
  overflow: hidden;
  transform-origin: 0 0;
  backface-visibility: hidden;
  /* hidden by default, prevent blinking and other weird rendering glitchs */
}
.face {
  background-size: 100% 100%!important;
  background-position: center;
}
.face-wrapper .face {
  left: 100%;
  width: 100%;
  height: 100%
}
.photon-shader {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%
}
.side {
  left: 50%;
}
.cr, .cr .side {
  height: 100%;
}
[class*="cuboid"] .ft, [class*="cuboid"] .bk {
  width: 100%;
  height: 100%;
}
[class*="cuboid"] .bk {
  left: 100%;
}
[class*="cuboid"] .rt {
  transform: rotateY(-90deg) translateX(-50%);
}
[class*="cuboid"] .lt {
  transform: rotateY(90deg) translateX(-50%);
}
[class*="cuboid"] .tp {
  transform: rotateX(90deg) translateY(-50%);
}
[class*="cuboid"] .bm {
  transform: rotateX(-90deg) translateY(-50%);
}
[class*="cuboid"] .lt {
  left: 100%;
}
[class*="cuboid"] .bm {
  top: 100%;
}
[class*="pyramid"] > .face-wrapper .face {
  transform: rotateZ(45deg) translateX(-35.35%) translateY(35.35%);
}
[class*="pyramid"] > .bk {
  left: 100%;
}
[class*="pyramid"] > .bm {
  top: 100%;
  transform: rotateX(-90deg) translateY(-50%);
}
[class*="pyramid"] > .rt, [class*="pyramid"] > .lt {
  transform-origin: 50% 0;
}
/* .block styles */
.block {
  transform:translate3D(0em, 0em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  opacity:1;
  width:9em;
  height:9em;
  margin:-4.5em 0 0 -4.5em;
}
.block .ft {
  transform:translateZ(4.5em);
}
.block .bk {
  transform:translateZ(-4.5em) rotateY(180deg);
}
.block .rt, .block .lt {
  width:9em;
  height:9em;
}
.block .tp, .block .bm {
  width:9em;
  height:9em;
}
.block .face {
  background-color:#111111;
  box-shadow: inset 0px 0px 1em .25em rgba(255, 255, 255, .1);
}
.block .ft {
  width:9em;
  margin-left:0em;
}
.block .bk {
  width:9em;
  margin-left:0em;
}
.block .rt, .block .lt {
  width:9em;
}
.block .tp, .block .bm, .block .tp .photon-shader, .block .bm .photon-shader {
  border-radius:0em;
}
.block .cr {
  width:0em;
  left:0em;
}
.block .cr-0 {
  transform: translate3D(9em, 0, 4.5em);
}
.block .cr-1 {
  transform: translate3D(9em, 0, -4.5em);
}
.block .cr-2 {
  transform: translate3D(0, 0, -4.5em);
}
.block .cr-3 {
  transform: translate3D(0, 0, 4.5em);
}
.block .cr-0 .s0 {
  transform: rotateY(15deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-0 .s1 {
  transform: rotateY(45deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-0 .s2 {
  transform: rotateY(75deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-1 .s0 {
  transform: rotateY(105deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-1 .s1 {
  transform: rotateY(135deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-1 .s2 {
  transform: rotateY(165deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-2 .s0 {
  transform: rotateY(195deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-2 .s1 {
  transform: rotateY(225deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-2 .s2 {
  transform: rotateY(255deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-3 .s0 {
  transform: rotateY(285deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-3 .s1 {
  transform: rotateY(315deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-3 .s2 {
  transform: rotateY(345deg) translate3D(-50%, 0, -0.025em);
}
.block .side {
  width:0.025em;
}

/* .pyramid styles */
.pyramid {
  opacity:1;
  width:9em;
  height:3em;
  margin:-1.5em 0 0 -4.5em;
}
.pyramid > .face-wrapper {
  width:9em;
  height:4.5em;
}
.pyramid > .face-wrapper .face {
  width:9em;
  height:9em;
  background-color:#111111;
}
.pyramid > .ft {
  transform:scaleZ(1.2018504251546631) scaleY(1.2018504251546631) rotateX(56.30993247402022deg);
}
.pyramid > .bk {
  transform:scaleZ(1.2018504251546631) scaleY(1.2018504251546631) rotateX(-56.30993247402022deg) rotateY(180deg);
}
.pyramid > .rt {
  transform:scaleX(1.2018504251546631) scaleY(1.2018504251546631) rotateZ(56.30993247402022deg) rotateY(-90deg);
}
.pyramid > .lt {
  transform:scaleX(1.2018504251546631) scaleY(1.2018504251546631) rotateZ(-56.30993247402022deg) rotateY(90deg);
}
.pyramid > .bm {
  width:9em;
  height:9em;
}

/* .pyr-2 styles */
.pyramid-front {
  transform:translate3D(0em, 0em, 6em) rotateX(90deg) rotateY(0deg) rotateZ(180deg);
}
.pyramid-back {
  transform:translate3D(0em, 0em, -6em) rotateX(90deg) rotateY(0deg) rotateZ(0deg);
}
.pyramid-top {
  transform:translate3D(0em, -6em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
}
.pyramid-bottom {
  transform: translate3D(0em, 6em, 0em) rotateX(180deg) rotateY(0deg) rotateZ(0deg);
}
.pyramid-left {
  transform:translate3D(-6em, 0em, 0em) rotateX(90deg) rotateY(0deg) rotateZ(-90deg);
}
.pyramid-right {
  transform:translate3D(6em, 0em, 0em) rotateX(90deg) rotateY(0deg) rotateZ(90deg);
}

$red: rgba(100, 0, 0, 0);
$orange: rgba(100, 50, 0, 0);
$white: rgba(100, 100, 100, 0);
$green: rgba(0, 100, 0, 0);
$yellow: rgba(100, 100, 0, 0);
$blue: rgba(0, 0, 100, 0);

.pyramid-front > .face-wrapper .face {
  // front : red
  @include animation("redBorder 2s ease-out infinite");
}

.pyramid-back > .face-wrapper .face {
  // back : orange
  @include animation("orangeBorder 2s ease-out infinite");
}

.pyramid-top > .face-wrapper .face {
  // top : white
  @include animation("whiteBorder 2s ease-out infinite");
}

.pyramid-bottom > .face-wrapper .face {
  // bottom : green
 @include animation("greenBorder 2s ease-out infinite");
}

.pyramid-left > .face-wrapper .face {
  // left : yellow
  @include animation("yellowBorder 2s ease-out infinite");
}

.pyramid-right > .face-wrapper .face {
  // right : blue
  @include animation("blueBorder 2s ease-out infinite");
}

@include keyframes(redBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($red, 0.5); }
  50% { box-shadow: inset 0 0 8px 1px opacify($red, 0.75); }
}

@include keyframes(orangeBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($orange, 0.5); }
  50% { box-shadow: inset 0 0 8px 1px opacify($orange, 0.75); }
}

@include keyframes(whiteBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($white, 0.5); }
  50% { box-shadow: inset 0 0 8px 1px opacify($white, 0.75); }
}

@include keyframes(greenBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($green, 0.5); }
  50% { box-shadow: inset 0 0 8px 1px opacify($green, 0.75); }
}

@include keyframes(yellowBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($yellow, 0.5); }
  50% { box-shadow: inset 0 0 8px 1px opacify($yellow, 0.75); }
}

@include keyframes(blueBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($blue, 0.5); }
  50% { box-shadow: inset 0 0 8px 1px opacify($blue, 0.75); }
}

$roofWidth: .75;
/* .roof styles */
.roof {
  transform: translate3D(0em, #{-1 - $roofWidth / 2}em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  opacity: 1;
  width: #{$roofWidth}em;
  height: .25em;
  margin: -0.125em 0 0 -#{$roofWidth / 2}em;
}
.roof .ft {
  transform:translateZ(#{$roofWidth / 2}em);
}
.roof .bk {
  transform:translateZ(-#{$roofWidth / 2}em) rotateY(180deg);
}
.roof .rt, .roof .lt {
  width:#{$roofWidth}em;
  height:.25em;
}
.roof .tp, .roof .bm {
  width:#{$roofWidth}em;
  height:#{$roofWidth}em;
}

.pyramid-front .roof .face {
  @include animation("redRoof 2s ease-out infinite");
}

.pyramid-back .roof .face {
  @include animation("orangeRoof 2s ease-out infinite");
}

.pyramid-top .roof .face {
  @include animation("whiteRoof 2s ease-out infinite");
}

.pyramid-bottom .roof .face {
  @include animation("greenRoof 2s ease-out infinite");
}

.pyramid-left .roof .face {
  @include animation("yellowRoof 2s ease-out infinite");
}

.pyramid-right .roof .face {
  @include animation("blueRoof 2s ease-out infinite");
}

@include keyframes(redRoof) {
  0%, 100% { background: opacify($red, 0.25); box-shadow: inset 0 0 0 1px opacify($red, 0.5); }
  50% { background: opacify($red, 0.5); box-shadow: inset 0 0 8px 1px opacify($red, 0.75); }
}

@include keyframes(orangeRoof) {
  0%, 100% { background: opacify($orange, 0.25); box-shadow: inset 0 0 0 1px opacify($orange, 0.5); }
  50% { background: opacify($orange, 0.5); box-shadow: inset 0 0 8px 1px opacify($orange, 0.75); }
}

@include keyframes(whiteRoof) {
  0%, 100% { background: opacify($white, 0.25); box-shadow: inset 0 0 0 1px opacify($white, 0.5); }
  50% { background: opacify($white, 0.5); box-shadow: inset 0 0 8px 1px opacify($white, 0.75); }
}

@include keyframes(greenRoof) {
  0%, 100% { background: opacify($green, 0.25); box-shadow: inset 0 0 0 1px opacify($green, 0.5); }
  50% { background: opacify($green, 0.5); box-shadow: inset 0 0 8px 1px opacify($green, 0.75); }
}

@include keyframes(yellowRoof) {
  0%, 100% { background: opacify($yellow, 0.25); box-shadow: inset 0 0 0 1px opacify($yellow, 0.5); }
  50% { background: opacify($yellow, 0.5); box-shadow: inset 0 0 8px 1px opacify($yellow, 0.75); }
}

@include keyframes(blueRoof) {
  0%, 100% { background: opacify($blue, 0.25); box-shadow: inset 0 0 0 1px opacify($blue, 0.5); }
  50% { background: opacify($blue, 0.5); box-shadow: inset 0 0 8px 1px opacify($blue, 0.75); }
}