$red: rgba(200, 0, 0, 0);
$orange: rgba(200, 100, 0, 0);
$white: rgba(200, 200, 200, 0);
$green: rgba(0, 200, 0, 0);
$yellow: rgba(200, 200, 0, 0);
$blue: rgba(0, 0, 200, 0);

$darkGrey:#222;
$brightBlue: #37AEB8;
$palePink: #CC5880;
$translucentDarkGrey: rgba(24, 24, 24,.75);

$fontSize12px: 0.75em;
$fontSize14px: 0.875em;
$fontSize18px: 1.125em;
$fontSize24px: 1.5em;


/*=======================*/
/* MIXINS
/*=======================*/
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }  
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }  
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

@mixin transform($str) {
  -webkit-transform: #{$str};
  -moz-transform: #{$str};
  -ms-transform: #{$str};
  -o-transform: #{$str};
  transform: #{$str};
}

@mixin transition($str) {
  -webkit-transition: -webkit-#{$str};
  -moz-transition: -moz-#{$str};
  -ms-transition: -ms-#{$str};
  -o-transition: -o-#{$str};
  transition: #{$str};
}


/*=======================*/
/* GENERAL RULES
/*=======================*/
html, body {
  width: 100%;
  height: 100%;
  overflow:hidden;
  background:#DDD;
  color: $darkGrey;
  text-transform: uppercase;
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
}

body {
  background:url(../img/mwpsb_logo.svg) no-repeat,
             url(../img/bg.jpg) no-repeat;
  background-size: 180px 180px, cover;
  background-position: calc(100% - 2em) calc(100% - 2em), 50% 100%;
  background-blend-mode:overlay;
}

body.moving { cursor:move; cursor:-webkit-grabbing; }

a { color:inherit; text-decoration: none; }
a:hover { color:$brightBlue; }

button {
  border:none;
  background:none;
  font-family: inherit;
  outline: none;
  cursor:pointer;
  text-transform: inherit;
  display: block;
  color:inherit;
  position: relative;
}

::-moz-selection {
  background:  $brightBlue;
  color:       #FFF;
  text-shadow: none;
}

::selection {
  background:  $brightBlue;
  color:       #FFF;
  text-shadow: none;
}


/*=======================*/
/* COMPONENTS
/*=======================*/
/* Containers ------------*/
.screen {
  position:absolute;
  width: 100%;
  height: 100%;
  top:0;
  left:0;

  opacity: 0;
  pointer-events:none;
  @include transition("opacity .2s .4s ease-out, transform .2s .4s ease-out");
}

.screen.active {
  opacity: 1;
  pointer-events:auto;
  @include transition("opacity .2s ease-out, transform .2s ease-out");
}

.overlay { z-index: 9999; @include transform("translateY(-5px)"); }

.overlay:before {
  content:"";
  background: rgba(0, 0, 0, .95);
  position: absolute;
  width: 100%;
  height: 100%;
  top:0;
  left:0;
}

.overlay.active { @include transform("translateY(0)"); }

.container {
  width: 80em;
  height: 40em;
  position: absolute;
  left: calc(50% - 40em);
  top: calc(50% - 20em);
}

@media (max-height: 768px) {
  .container { top: calc(50% - 17.5em); }
}

.screen h1 {
  color: #CCC;
  font-weight: 700;
  font-size: $fontSize24px;
  padding: 0 0 8px 48px;
  text-transform: none;
  margin-bottom: 32px;
  position: relative;
}

.screen h1:before {
  content: "";
  position: absolute;
  width: 97.5%;
  right: 0;
  background: currentColor;
  height: 2px;
  bottom: 0;
}

.screen h1:after {
  content: "";
  position: absolute;
  width: .4em;
  height: 1em;
  background: currentColor;
  left: .4em;
  transform: skewX(-45deg);
}

/* Panels ------------*/
.panel, .credits { width:100%; margin-bottom: 15px; position: relative; color:#999; }
.panel { padding:60px 24px 24px; line-height: 1.25em; background:rgba(255, 255, 255, .05); }
.panel h2, .table .title {
  font-style: italic;
  font-weight: 700;
  background:rgba(0, 0, 0, .5);
  color:#CCC;
}
.panel h2 {
  padding:8px;
  margin-bottom: 24px;
  position: absolute;
  top:0;
  left:0;
  width: 100%;
}
.panel p { width: 100%; }

.panel li {
  position:relative;
  padding-left:40px;
  font-family: "Abel";
}

.panel li:after {
  content:attr(data-shortcut);
  position:absolute;
  left:0;
  top:0;
  color:$brightBlue;
  font-family: "Open Sans";
  font-weight: 700;
  font-style: italic;
}

/* Columns, Rows & Tables ------------*/
.colContainer {
  width: 100%;
  height: 100%;
  position: absolute;
  display: flex;
  justify-content: space-between;
}

.col { position: relative; display: inline-block; }

.rowContainer { display: flex; flex-direction: column; }

.table { position:relative; }
.table .row:not(.title) { font-family: "Abel", sans-serif; color:$brightBlue; font-size: $fontSize18px; }
.table .row:not(.title):nth-child(2n+1) { background: rgba(255,255,255,.05); }
.table .col { padding:8px 8px 8px 12px; }
.table .col:not(:first-child):after { content:""; position:absolute; height:100%; width:1px; background:rgba(255,255,255,.1); top:0; left:0; }

/* Common styles ------------*/
.brightBlue { color:$brightBlue; }
.italic { font-style: italic; }
.w700 { font-weight: 700; }

/* Logo ------------*/
.logo { width:648px; height: 73px; background-size: contain; background-repeat: no-repeat; background-position: 50% 50%; }
.logo.black { background-image: url("../img/logo_black.png"); }
.logo.white { background-image: url("../img/logo_white.png"); }

/* CTA ------------*/
.cta {
  background:rgba(255, 255, 255, .075);
  color:#CCC;
  font-style: italic;
  font-weight: 700;
  height:40px;
  width: 150px;
  text-align: left;
  font-size: $fontSize18px;
  padding-left:24px;
  z-index: 0;
  margin-top: 32px;

  transition: all .25s .5s ease-out;
}


/*=======================*/
/* SCREEN : ABOUT
/*=======================*/
#screen_about .logo { @extend .logo.white; width:375px; height: 55px; margin-bottom: 55px; }
#screen_about.loading .logo { @extend .logo.black; }

#screen_about .col { height: calc(100% - 110px); vertical-align: bottom; }
#screen_about .col1 { width:375px; }
#screen_about .col2 { width:485px; margin-left:15px; }
#screen_about .rowContainer { height:370px; }

#panel_keyboards, #panel_shortcuts { flex:1; }
#panel_mouse { height: 150px; }

#panel_mouse p { font-family: "Abel", sans-serif; }
#panel_mouse span { font-family: "Open Sans"; }

#panel_shortcuts ul { display: inline-block; }
#panel_shortcuts ul:first-of-type { margin-right: 24px; }
#panel_shortcuts li { padding-left:80px; }

.panel .note {
  font-size: $fontSize12px;
  line-height: 1.175em;
  position: absolute;
  bottom:0;
  left:0;
  background:rgba(255, 255, 255, .05);
  padding: 8px 0 8px 16px;
  border-left:8px solid $brightBlue;
}

.credits, .info { padding: 8px; }
.credits { background:rgba(0, 0, 0, .5); }
.credits .label { font-style: italic; font-size: $fontSize14px; font-weight: 600; color:#CCC; }
.credits .value { font-family: "Abel", sans-serif; float:right; transition: color .3s ease-out; }

.credits.inspiration { cursor:pointer; }
.credits.inspiration:hover .value { color:$brightBlue; }

.info {
  background: $brightBlue;
  color: #222;
  font-style: italic;
  font-size: $fontSize14px;
  font-weight: 600;
  cursor:pointer;
  pointer-events:none;
  opacity: 0;
  transform: translateY(-15px);

  transition:background .15s ease-out, opacity 1s ease-out, transform 1s ease-out;
}

.info:hover { background:$palePink; }
body.loaded .info { pointer-events:auto; opacity: 1; transform: translateY(0); }

#loading { color:#CCC; border-bottom: 1px currentColor solid; padding-bottom: 8px; }
#loading .label { text-transform: none; font-size: 2em; font-weight: 300; vertical-align: super; }
#loading .value { float: right; text-align: right; font-size: 4em; font-weight: 700; font-style: italic; margin-top: -24px; }

#loadingHue {
  height: 2em;
  width: .5em;
  background-color: $palePink;
  display: inline-block;
  margin-left: .5em;
}

#psychoCube_model {
  background: url("../img/cube_2.png") no-repeat;
  width: 306px;
  height: 275px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 5em;
}

#screen_about.active #psychoCube_model {
  @include animation("levitateModel 8s ease-in-out infinite");
}

@include keyframes(levitateModel) {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(1em); }
}


/*=======================*/
/* SCREEN : GAME COMPLETE
/*=======================*/
#screen_gameComplete input {
  background-color: transparent;
  border: none;
  outline: none;
  width: 300px;

  transition: all .3s ease-out;
}

#screen_gameComplete input:focus, #screen_gameComplete input[disabled] { background-color: rgba(255,255,255,.05); padding-left:8px; }

#screen_gameComplete input::-webkit-input-placeholder { color:$brightBlue; text-transform: uppercase; } /* WebKit browsers */
#screen_gameComplete input[disabled]::-webkit-input-placeholder { color:$palePink; }

#screen_gameComplete input:-moz-placeholder { color:$brightBlue; text-transform: uppercase; } /* Mozilla Firefox 4 to 18 */
#screen_gameComplete input[disabled]:-moz-placeholder { color:$palePink; }

#screen_gameComplete input::-moz-placeholder { color:$brightBlue; text-transform: uppercase; } /* Mozilla Firefox 19+ */
#screen_gameComplete input[disabled]::-moz-placeholder { color:$palePink; }

#screen_gameComplete input:-ms-input-placeholder { color:$brightBlue; text-transform: uppercase; } /* Internet Explorer 10+ */
#screen_gameComplete input[disabled]:-ms-input-placeholder { color:$palePink; }

#screen_gameComplete input,
#screen_gameComplete .value {
  font-family: "Abel", sans-serif;
  color:$brightBlue;
  font-size: $fontSize24px;
}

#screen_gameComplete .content { display:flex; flex-wrap:wrap; }
#screen_gameComplete .panel { flex:1; flex-basis: calc(50% - 15px); }
#screen_gameComplete .panel:nth-child(2n+1) { margin-right: 15px; }


/*=======================*/
/* SCREEN : HIGH SCORES
/*=======================*/
#screen_highScores .col1 { width:50px; }
#screen_highScores .col2, #screen_highScores .col3 { width:200px; }
#screen_highScores .col4, #screen_highScores .col5 { width:150px; }

#screen_highScores .row:not(.title) .col2 { text-transform: none; }


/*=======================*/
/* SCREEN : MAIN
/*=======================*/
/* Particles canvas ------------*/
#particles {
  position: absolute;
  width: 100%;
  height: 100%;

  -webkit-filter:blur(2px);
  -moz-filter:blur(2px);
  -ms-filter:blur(2px);
  -o-filter:blur(2px);
  filter:blur(2px);
}

/* Sidebar ------------*/
#sidebar {
  position: absolute;
  left: 0;
  top: 0;
  padding-top:3em;
  width:18em;
  height: 100%;
  z-index: 10;
  background:rgba(0, 0, 0, .95);
  color:#CCC;
}

#sidebar .logo {
  width: 200px;
  height: 30px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1.5em;
}

.timer { margin-bottom: 1.5em; padding-left:3em; }
.timer .label { position: relative; }
.timer .value {
  font-family: "Abel", sans-serif;
  font-size: 2em;
  margin-top: .1em;
  display: block;
}
#totalTime { margin-bottom: 3em; }

@media (max-height:768px) {
  #menu {
    height:calc(100% - 225px);
    overflow-y:hidden;
  }
}

#menu button {
  width:100%;
  height:2.5em;
  line-height:2.5em;
  background:rgba(255, 255, 255, .025);
  margin-bottom: 1px;
  text-align: left;
  padding-left:3em;
  font-style: italic;
  font-size: .9em;

  transition: all .25s .5s ease-out;
}

#menu button:before, .cta:before {
  content:"";
  width: .75em;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  background: $brightBlue;

  transition:width .5s cubic-bezier(0,1,1,-0.5), background .25s ease-out;
}

#menu button[disabled]:before, .cta[disabled]:before { background: $palePink; }
#menu button:hover, body.paused #bt_pause, .cta:hover { color:$darkGrey; font-weight:900; }
#menu button:hover:before, body.paused #bt_pause:before, .cta:hover:before { width: 100%; }

#menu button i { float:right; margin-right: 1.5em; line-height: 2.5em; }

html:not(.debug) #bt_resetCube { display: none; }


/*=======================*/
/* PSYCHO-CUBE
/*=======================*/
#psychoCube {
  position: absolute;
  transform-style: preserve-3d;
  width: 27em;
  height: 27em;
  transform: translate3d(27em,27em,-27em);

  //@include animation("levitate 8s ease-in-out infinite");
}

@include keyframes(levitate) {
  0%, 100% { transform: translate3d(27em,27em,-27em); }
  50% { transform: translate3d(27em,29em, -27em); }
}

#protoCube, #protoPyramid { display:none; }

.cube {
  position: absolute;
  width: 9em;
  height: 9em;
  top: 0;
  left: 0;
  transform-style: preserve-3d;
  transform-origin: 13.5em 13.5em 0em;
  will-change: transform, opacity;

  transition: transform .3s ease-in-out, opacity .2s ease-in-out;
}

body:not(.moving) .cube:hover { cursor: pointer; }

body.selecting .cube:not(.selected) {
  opacity:.15;

  @include animation("transparency 2s ease-out infinite");
}

@include keyframes(transparency) {
  0%, 100% { opacity:.15; }
  50% { opacity:.35; }
}

/* Cube positioning ------------*/
@for $z from 1 through 3 {
  @for $y from 1 through 3 {
    @for $x from 1 through 3 {
      $translateX : $x * 9 - 9;
      $translateY : $y * 9 - 9;
      $translateZ : $z * -9 + 18;

      .cube#{$z}-#{$y}-#{$x} { 
        transform: translate3d(#{$translateX}em, #{$translateY}em, #{$translateZ}em);
      }
    }
  }
}

/* Tridiv style base START ------------*/
/* /!\ You need to add vendor prefixes in order to render the CSS properly (or simply use http://leaverou.github.io/prefixfree/) /!\ */
#tridiv {
  perspective: 800px;
  backface-visibility: hidden;
  position: absolute;
  overflow: hidden;
  width: 100%;
  height: 100%;
  background: transparent;
  font-size: 100%;
  transform: translateZ(0);

  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}

#scene, .shape, .face, .face-wrapper, .cr {
  position: absolute;
  transform-style: preserve-3d;
}
#scene {
  width: 80em;
  height: 80em;
  left: calc(50% - (80em - 18em) / 2);
  top: calc(50% - 80em / 2);
  transform-origin: 50% 50% -27em;
}
.shape {
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  transform-origin: 50%;
}
.face, .face-wrapper {
  overflow: hidden;
  transform-origin: 0 0;
  backface-visibility: hidden;
  /* hidden by default, prevent blinking and other weird rendering glitchs */
}
.face {
  background-size: 100% 100%!important;
  background-position: center;
}
.face-wrapper .face {
  left: 100%;
  width: 100%;
  height: 100%
}
.photon-shader {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%
}
.side {
  left: 50%;
}
.cr, .cr .side {
  height: 100%;
}
[class*="cuboid"] .ft, [class*="cuboid"] .bk {
  width: 100%;
  height: 100%;
}
[class*="cuboid"] .bk {
  left: 100%;
}
[class*="cuboid"] .rt {
  transform: rotateY(-90deg) translateX(-50%);
}
[class*="cuboid"] .lt {
  transform: rotateY(90deg) translateX(-50%);
}
[class*="cuboid"] .tp {
  transform: rotateX(90deg) translateY(-50%);
}
[class*="cuboid"] .bm {
  transform: rotateX(-90deg) translateY(-50%);
}
[class*="cuboid"] .lt {
  left: 100%;
}
[class*="cuboid"] .bm {
  top: 100%;
}
[class*="pyramid"] > .face-wrapper .face {
  transform: rotateZ(45deg) translateX(-35.35%) translateY(35.35%);
}
[class*="pyramid"] > .bk {
  left: 100%;
}
[class*="pyramid"] > .bm {
  top: 100%;
  transform: rotateX(-90deg) translateY(-50%);
}
[class*="pyramid"] > .rt, [class*="pyramid"] > .lt {
  transform-origin: 50% 0;
}
/* Tridiv style base END ------------*/

/* Block cubes ------------*/
.block {
  transform:translate3D(0, 0, 0) rotateX(0) rotateY(0) rotateZ(0);
  opacity:1;
  width:9em;
  height:9em;
  margin:-4.5em 0 0 -4.5em;
}
.block .ft {
  transform:translateZ(4.5em);
}
.block .bk {
  transform:translateZ(-4.5em) rotateY(180deg);
}
.block .rt, .block .lt {
  width:9em;
  height:9em;
}
.block .tp, .block .bm {
  width:9em;
  height:9em;
}
.block .face {
  background-color:$translucentDarkGrey;
  box-shadow: inset 0 0 1em .25em rgba(255, 255, 255, .025);
}
.block .ft {
  width:9em;
  margin-left:0;
}
.block .bk {
  width:9em;
  margin-left:0;
}
.block .rt, .block .lt {
  width:9em;
}
.block .tp, .block .bm, .block .tp .photon-shader, .block .bm .photon-shader {
  border-radius:0;
}
.block .cr {
  width:0;
  left:0;
}
.block .cr-0 {
  transform: translate3D(9em, 0, 4.5em);
}
.block .cr-1 {
  transform: translate3D(9em, 0, -4.5em);
}
.block .cr-2 {
  transform: translate3D(0, 0, -4.5em);
}
.block .cr-3 {
  transform: translate3D(0, 0, 4.5em);
}
.block .cr-0 .s0 {
  transform: rotateY(15deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-0 .s1 {
  transform: rotateY(45deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-0 .s2 {
  transform: rotateY(75deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-1 .s0 {
  transform: rotateY(105deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-1 .s1 {
  transform: rotateY(135deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-1 .s2 {
  transform: rotateY(165deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-2 .s0 {
  transform: rotateY(195deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-2 .s1 {
  transform: rotateY(225deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-2 .s2 {
  transform: rotateY(255deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-3 .s0 {
  transform: rotateY(285deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-3 .s1 {
  transform: rotateY(315deg) translate3D(-50%, 0, -0.025em);
}
.block .cr-3 .s2 {
  transform: rotateY(345deg) translate3D(-50%, 0, -0.025em);
}
.block .side {
  width:0.025em;
}

/* Pyramid stickers ------------*/
.pyramid {
  opacity:1;
  width:9em;
  height:3em;
  margin:-1.5em 0 0 -4.5em;
  transition:transform .2s ease-out;

  will-change: transform;
}
.pyramid > .face-wrapper {
  width:9em;
  height:4.5em;
}
.pyramid > .face-wrapper .face {
  width:9em;
  height:9em;
  background-color:$translucentDarkGrey;
}
.pyramid > .ft {
  transform:scaleZ(1.2018504251546631) scaleY(1.2018504251546631) rotateX(56.30993247402022deg);
}
.pyramid > .bk {
  transform:scaleZ(1.2018504251546631) scaleY(1.2018504251546631) rotateX(-56.30993247402022deg) rotateY(180deg);
}
.pyramid > .rt {
  transform:scaleX(1.2018504251546631) scaleY(1.2018504251546631) rotateZ(56.30993247402022deg) rotateY(-90deg);
}
.pyramid > .lt {
  transform:scaleX(1.2018504251546631) scaleY(1.2018504251546631) rotateZ(-56.30993247402022deg) rotateY(90deg);
}
.pyramid > .bm {
  width:9em;
  height:9em;
}

/* Pyramid orientations ------------*/
.pyramid-front {
  transform:translate3D(0, 0, 6em) rotateX(90deg) rotateY(0deg) rotateZ(180deg);
}
.pyramid-back {
  transform:translate3D(0, 0, -6em) rotateX(90deg) rotateY(0deg) rotateZ(0deg);
}
.pyramid-top {
  transform:translate3D(0, -6em, 0) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
}
.pyramid-bottom {
  transform: translate3D(0, 6em, 0) rotateX(180deg) rotateY(0deg) rotateZ(0deg);
}
.pyramid-left {
  transform:translate3D(-6em, 0, 0) rotateX(90deg) rotateY(0deg) rotateZ(-90deg);
}
.pyramid-right {
  transform:translate3D(6em, 0, 0) rotateX(90deg) rotateY(0deg) rotateZ(90deg);
}

/* Pyramid colors ------------*/
// front : red
.color-red > .face-wrapper .face { box-shadow: inset 0 0 0 1px opacify($red, .5); }
html:not(.noGlow) .color-red > .face-wrapper .face { @include animation("redBorder 2s ease-out infinite"); }

// back : orange
.color-orange > .face-wrapper .face { box-shadow: inset 0 0 0 1px opacify($orange, .5); }
html:not(.noGlow) .color-orange > .face-wrapper .face { @include animation("orangeBorder 2s ease-out infinite"); }

// top : white
.color-white > .face-wrapper .face { box-shadow: inset 0 0 0 1px opacify($white, .5); }
html:not(.noGlow) .color-white > .face-wrapper .face { @include animation("whiteBorder 2s ease-out infinite"); }

// bottom : green
.color-green > .face-wrapper .face { box-shadow: inset 0 0 0 1px opacify($green, .5); }
html:not(.noGlow) .color-green > .face-wrapper .face { @include animation("greenBorder 2s ease-out infinite"); }

// left : yellow
.color-yellow > .face-wrapper .face { box-shadow: inset 0 0 0 1px opacify($yellow, .5); }
html:not(.noGlow) .color-yellow > .face-wrapper .face { @include animation("yellowBorder 2s ease-out infinite"); }

// right : blue
.color-blue > .face-wrapper .face { box-shadow: inset 0 0 0 1px opacify($blue, .5); }
html:not(.noGlow) .color-blue > .face-wrapper .face { @include animation("blueBorder 2s ease-out infinite"); }

@include keyframes(redBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($red, .5); }
  50% { box-shadow: inset 0 0 4px 1px opacify($red, .75); }
}

@include keyframes(orangeBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($orange, .5); }
  50% { box-shadow: inset 0 0 4px 1px opacify($orange, .75); }
}

@include keyframes(whiteBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($white, .5); }
  50% { box-shadow: inset 0 0 4px 1px opacify($white, .75); }
}

@include keyframes(greenBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($green, .5); }
  50% { box-shadow: inset 0 0 4px 1px opacify($green, .75); }
}

@include keyframes(yellowBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($yellow, .5); }
  50% { box-shadow: inset 0 0 4px 1px opacify($yellow, .75); }
}

@include keyframes(blueBorder) {
  0%, 100% { box-shadow: inset 0 0 0 1px opacify($blue, .5); }
  50% { box-shadow: inset 0 0 4px 1px opacify($blue, .75); }
}

/* Pyramid square roofs ------------*/
$roofWidth: .75;

.roof {
  transform: translate3D(0, #{-1 - $roofWidth / 2}em, 0) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  opacity: 1;
  width: #{$roofWidth}em;
  height: .25em;
  margin: -0.125em 0 0 -#{$roofWidth / 2}em;
}
.roof .ft {
  transform:translateZ(#{$roofWidth / 2}em);
}
.roof .bk {
  transform:translateZ(-#{$roofWidth / 2}em) rotateY(180deg);
}
.roof .rt, .roof .lt {
  width:#{$roofWidth}em;
  height:.25em;
}
.roof .tp, .roof .bm {
  width:#{$roofWidth}em;
  height:#{$roofWidth}em;
}

/* Pyramid square roofs colors ------------*/
.color-red .roof .face { background: opacify($red, .25); box-shadow: inset 0 0 0 1px opacify($red, .5); }
html:not(.noGlow) .color-red .roof .face { @include animation("redRoof 2s ease-out infinite"); }

.color-orange .roof .face { background: opacify($orange, .25); box-shadow: inset 0 0 0 1px opacify($orange, .5); }
html:not(.noGlow) .color-orange .roof .face { @include animation("orangeRoof 2s ease-out infinite"); }

.color-white .roof .face { background: opacify($white, .25); box-shadow: inset 0 0 0 1px opacify($white, .5); }
html:not(.noGlow) .color-white .roof .face { @include animation("whiteRoof 2s ease-out infinite"); }

.color-green .roof .face { background: opacify($green, .25); box-shadow: inset 0 0 0 1px opacify($green, .5); }
html:not(.noGlow) .color-green .roof .face { @include animation("greenRoof 2s ease-out infinite"); }

.color-yellow .roof .face { background: opacify($yellow, .25); box-shadow: inset 0 0 0 1px opacify($yellow, .5); }
html:not(.noGlow) .color-yellow .roof .face { @include animation("yellowRoof 2s ease-out infinite"); }

.color-blue .roof .face { background: opacify($blue, .25); box-shadow: inset 0 0 0 1px opacify($blue, .5); }
html:not(.noGlow) .color-blue .roof .face { @include animation("blueRoof 2s ease-out infinite"); }

@include keyframes(redRoof) {
  0%, 100% { background: opacify($red, .25); box-shadow: inset 0 0 0 1px opacify($red, 0.5); }
  50% { background: opacify($red, .5); box-shadow: inset 0 0 4px 1px opacify($red, .75); }
}

@include keyframes(orangeRoof) {
  0%, 100% { background: opacify($orange, .25); box-shadow: inset 0 0 0 1px opacify($orange, .5); }
  50% { background: opacify($orange, .5); box-shadow: inset 0 0 4px 1px opacify($orange, .75); }
}

@include keyframes(whiteRoof) {
  0%, 100% { background: opacify($white, .25); box-shadow: inset 0 0 0 1px opacify($white, .5); }
  50% { background: opacify($white, .5); box-shadow: inset 0 0 4px 1px opacify($white, .75); }
}

@include keyframes(greenRoof) {
  0%, 100% { background: opacify($green, .25); box-shadow: inset 0 0 0 1px opacify($green, .5); }
  50% { background: opacify($green, .5); box-shadow: inset 0 0 4px 1px opacify($green, .75); }
}

@include keyframes(yellowRoof) {
  0%, 100% { background: opacify($yellow, .25); box-shadow: inset 0 0 0 1px opacify($yellow, .5); }
  50% { background: opacify($yellow, .5); box-shadow: inset 0 0 4px 1px opacify($yellow, .75); }
}

@include keyframes(blueRoof) {
  0%, 100% { background: opacify($blue, .25); box-shadow: inset 0 0 0 1px opacify($blue, .5); }
  50% { background: opacify($blue, .5); box-shadow: inset 0 0 4px 1px opacify($blue, .75); }
}


/*=======================*/
/* CUBE ROTATION MENU
/*=======================*/
#rotationMenu {
  position: absolute;
  width: 130px;
  height: 130px;
  opacity:0;
  pointer-events:none;
  transition: opacity .2s ease-in-out, transform .2s ease-in-out;
  z-index: 20;

  transform:scale(1.5) translate(-50%, -50%);
}

#rotationMenu.open {
  opacity:1;
  transform:scale(1) translate(-50%, -50%);
  pointer-events:auto;
}

/* SVG elements ------------*/
#circulus {
    display: block;
    margin: 0 auto;
    //overflow: visible; /* uncomment this if you are using bouncing animations*/
}

#circulus .item { 
    cursor: pointer; // SVG "a" elements don't get this by default, so you need to explicitly set it
    outline: none;
}

/* You can change these default styles any way you want */
#circulus .item .sector {
    fill: $translucentDarkGrey;
    transition: all .15s ease-out;
}

#circulus .item:hover .sector,
#circulus .item:focus .sector {
    fill: $brightBlue;
}

#circulus text { font-family: "FontAwesome"; fill:#CCC; font-size:4em; text-anchor:middle; transition: fill .15s ease-out; }
#circulus .item:hover text { fill:$darkGrey; }

#circulus .menu-trigger {
    fill: rgba(200, 200, 200, 0.5);
    pointer-events: auto; /* KEEP THIS to make sure it stays clickable even when SVG's pointer events is disabled */
    transition: fill .15s ease-out;
}

#circulus .menu-trigger:hover, #circulus .menu-trigger:focus { fill:$palePink; cursor: pointer; }
#circulus symbol { overflow: visible; } /* KEEP THIS so that text will not get cut off it it is wider than the icon width */